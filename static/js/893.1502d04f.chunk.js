"use strict";(self.webpackChunkweb=self.webpackChunkweb||[]).push([[893],{1893:(e,t,n)=>{n.r(t),n.d(t,{default:()=>g});var a=n(2982),s=n(5671),r=n(3144),o=n(7326),i=n(136),c=n(2963),u=n(1120),l=n(4687),d=n.n(l),f=n(9526),p=n(7586);function h(e){var t=function(){if("undefined"===typeof Reflect||!Reflect.construct)return!1;if(Reflect.construct.sham)return!1;if("function"===typeof Proxy)return!0;try{return Boolean.prototype.valueOf.call(Reflect.construct(Boolean,[],(function(){}))),!0}catch(e){return!1}}();return function(){var n,a=(0,u.default)(e);if(t){var s=(0,u.default)(this).constructor;n=Reflect.construct(a,arguments,s)}else n=a.apply(this,arguments);return(0,c.default)(this,n)}}var m=function(e){(0,i.default)(c,e);var t=h(c);function c(e){var n;return(0,s.default)(this,c),(n=t.call(this,e)).state={messageHistory:[],userInput:"",aiResponse:"",username:"yokki"},n.handleUserInputChange=n.handleUserInputChange.bind((0,o.default)(n)),n.handleFormSubmit=n.handleFormSubmit.bind((0,o.default)(n)),n.pollOpenAI=n.pollOpenAI.bind((0,o.default)(n)),n}return(0,r.default)(c,[{key:"pollOpenAI",value:function(){var e,t,s,r,o,i,c,u,l,f,h,m,g;return d().async((function(v){for(;;)switch(v.prev=v.next){case 0:return e=this.state.messageHistory,v.next=3,d().awrap(p.default.getOpenAIAPI());case 3:return t=v.sent,s=Array.isArray(t)?t.join(""):t,r=n(4653),o=r.Configuration,i=r.OpenAIApi,delete(c=new o({apiKey:s})).baseOptions.headers["User-Agent"],u=new i(c),l="NOTE FOR AI: Imagine that you are in a group chat with a user named \n                    "+this.state.username+". The user believes they are chatting with \n                    both Beyonce and James Bond. Your task is to respond \n                    to the user's messages as if you are one of these \n                    characters based on this chat history provided in a JSON format:\n                    \n"+JSON.stringify(e,null,2)+"\n  \n                    You can choose which character you want to play and whether \n                    they will or will not respond to the user's messages. \n                    You can also make it conditional on certain words or phrases. \n                    The goal is to create a realistic human-like experience. \n                    Please respond to the user's messages in a way that the character \n                    you are playing would respond if they were in a group chat.\n                    Send your responses in the format [character name]: [response]\n                    so our reactjs front end will be able to parse them correctly.\n                    Remember, always read messageHistory before responding to the user.\n                    Please make it a nice and friendly experience like this is a real chat.\n                    \n\nHuman: "+this.state.username+"\nAI:\n                ",v.prev=10,v.next=13,d().awrap(u.createCompletion({model:"text-davinci-003",prompt:l,temperature:.9,max_tokens:150,n:1,top_p:1,frequency_penalty:0,presence_penalty:.6,stop:[" Human:"," AI:"]}));case 13:f=v.sent,h=f.data.choices[0].text,m={sender:"AI",message:h,timestamp:(new Date).toLocaleString(),mood:"neutral"},g=[].concat((0,a.default)(e),[m]),this.setState({messageHistory:g}),v.next=23;break;case 20:v.prev=20,v.t0=v.catch(10),console.log(v.t0);case 23:setTimeout(this.pollOpenAI,2e5);case 24:case"end":return v.stop()}}),null,this,[[10,20]],Promise)}},{key:"componentDidMount",value:function(){this.pollOpenAI()}},{key:"handleFormSubmit",value:function(e){var t,n,s,r,o,i=this;return d().async((function(c){for(;;)switch(c.prev=c.next){case 0:e.preventDefault(),t=this.state,n=t.messageHistory,s=t.userInput,r={sender:"user114",message:s,timestamp:(new Date).toLocaleString(),mood:"neutral"},o=[].concat((0,a.default)(n),[r]),this.setState({messageHistory:o,userInput:""},(function(){var e=document.querySelector(".message-history");e.scrollTop=e.scrollHeight,i.pollOpenAI()}));case 5:case"end":return c.stop()}}),null,this,null,Promise)}},{key:"handleUserInputChange",value:function(e){this.setState({userInput:e.target.value})}},{key:"render",value:function(){var e=this.state,t=e.messageHistory;e.aiResponse;return f.createElement("div",{className:"group-chat-container"},f.createElement("div",{className:"message-history"},t.map((function(e,t){return f.createElement("div",{key:t},f.createElement("div",{className:"message-sender"},e.sender),f.createElement("div",{className:"message-text"},e.message),f.createElement("div",{className:"message-timestamp"},e.timestamp))}))),f.createElement("form",{onSubmit:this.handleFormSubmit,className:"user-input"},f.createElement("input",{type:"text",value:this.state.userInput,onChange:this.handleUserInputChange,placeholder:"Type a message..."}),f.createElement("button",{type:"submit"},"Send")))}}]),c}(f.Component);const g=m},7586:(e,t,n)=>{n.r(t),n.d(t,{default:()=>i});var a=n(3144),s=n(5671),r=n(2805),o=n.n(r);const i=new((0,a.default)((function e(){(0,s.default)(this,e),this.getScripts=function(){return new Promise((function(e){o().database().ref("/scripts/").once("value").then((function(t){t.val()?e(Object.values(t.val())):e({})}))}))},this.getFylds=function(){return new Promise((function(e){o().database().ref("/fylds/").once("value").then((function(t){t.val()?e(Object.values(t.val())):e({})}))}))},this.createFyld=function(e){return new Promise((function(t){o().database().ref("/fylds/"+e.name.replace(/\s/g,"")+"/").set({name:e.name,dateCreated:e.dateCreated,description:e.description,image:e.image,friends:e.friends}).then((function(e){console.log("response",e),t(!0)})).catch((function(e){console.log("error",e)}))}))},this.createGrypcht=function(e){return new Promise((function(t){o().database().ref("/grypchts/"+e.id+"/").set({id:e.id,groupName:e.groupName,members:e.members,dateCreated:e.dateCreated,description:e.description,isPrivateGrypcht:e.isPrivateGrypcht}).then((function(e){console.log("response",e),t(!0)})).catch((function(e){console.log("error",e)}))}))},this.createNewScript=function(e){return new Promise((function(t){o().database().ref("/scripts/"+e.id+"/").set({id:e.id,name:e.name,dateCreated:e.dateCreated,cast:e.cast,crew:e.crew,messages:e.messages,isPrivateScript:e.isPrivateScript}).then((function(e){console.log("response",e),t(!0)})).catch((function(e){console.log("error",e)}))}))},this.updateScript=function(e){return new Promise((function(t){o().database().ref("/scripts/"+e.id+"/").update({id:e.id,name:e.name,dateCreated:e.dateCreated,cast:e.cast,crew:e.crew,messages:e.messages,scenes:e.scenes,readerReactionMap:e.readerReactionMap,isPrivateScript:e.isPrivateScript}).then((function(e){console.log("response",e),t(!0)})).catch((function(e){console.log("error",e)}))}))},this.getOpenAIAPI=function(){return new Promise((function(e){o().database().ref("/openAIAPI/").once("value").then((function(t){t.val()?e(Object.values(t.val())):e({})}))}))},this.getConversationHistory=function(){return new Promise((function(e){o().database().ref("/conversationHistory/").once("value").then((function(t){t.val()?e(Object.values(t.val())):e({})}))}))},this.getRimiSenTitles=function(){return new Promise((function(e){o().database().ref("/rimiLyrics/").once("value").then((function(t){t.val()?e(Object.values(t.val())):e({})}))}))},this.postChats=function(e,t,n,a,s){return new Promise((function(r){o().database().ref("/chats/"+e+"/"+a+"/"+t+"/").push({content:n,timestamp:Date.now(),uid:s}).then((function(){r(!0)})).catch((function(e){r({})}))}))},this.storage=function(){return o().storage()},this.getRimiSenTitles=function(){return new Promise((function(e){o().database().ref("/rimiLyrics/").once("value").then((function(t){t.val()?e(Object.values(t.val())):e({})}))}))},this.getScriptById=function(e){return new Promise((function(t){o().database().ref("/scripts/"+e).once("value").then((function(e){e.val()?t(Object(e.val())):t({})}))}))},this.updateSenTitle=function(e){return new Promise((function(t){o().database().ref("/rimis/"+e.id+"/").update({senTitle:e.newSenTitle}).then((function(n){return new Promise((function(t){o().database().ref("/rimis/"+e.id+"/updates/"+e.updateId).remove().then((function(){t(!0)})).catch((function(e){console.log("error",e)}))})).then((function(e){t(!0)})).catch((function(e){console.log("error",e)}))})).catch((function(e){console.log("error",e)}))}))},this.sendForApproval=function(e){return new Promise((function(t){o().database().ref("/rimis/"+e.id+"/updates/"+e.updateId+"/").set(e).then((function(e){console.log("response",e),t(!0)})).catch((function(e){console.log("error",e)}))}))},this.updateVideoSnippetURL=function(e,t){return new Promise((function(n){o().database().ref("/orders/"+e+"/").update({snippetVideoURL:t}).then((function(e){console.log("response",e),n(!0)})).catch((function(e){console.log("error",e)}))}))}})))}}]);
//# sourceMappingURL=893.1502d04f.chunk.js.map