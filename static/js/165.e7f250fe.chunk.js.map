{"version":3,"file":"static/js/165.e7f250fe.chunk.js","mappings":"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","sources":["src/components/SearchScripts/SearchScripts.js","src/firebase/firebase.js"],"sourcesContent":["import React, { Component } from 'react';\nimport { connect } from \"react-redux\";\nimport { withRouter } from \"react-router-dom\";\nimport Firebase from \"../../firebase/firebase\";\nimport { ConvertSecondsToDate } from \"../../Helpers/Helpers.js\";\n\nimport \"./SearchScripts.css\";\n\nclass ConnectedSearchScripts extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            searchBarUp: false,\n            results: [],\n            searchTerm: \"\",\n            scripts: [],\n        };\n        this.handleFocus = this.handleFocus.bind(this);\n        this.handleBlur = this.handleBlur.bind(this);\n        this.handleSearch = this.handleSearch.bind(this);\n        this.selectResult = this.selectResult.bind(this);\n    }\n\n    componentDidMount(){\n       Firebase.getScripts().then( val => {\n        this.setState({\n            scripts: val,\n            results: val\n        })\n       })\n    }\n\n\n    handleSearch(e) {\n        this.setState({\n            searchTerm: e.target.value,\n        });\n\n        if (this.state.scripts) {\n            const results = this.state.scripts.filter((item) =>\n            item.name.toLowerCase().includes(e.target.value.toLowerCase())\n            )\n            this.setState({ results });\n        } else {\n            console.log('data is not defined');\n        }\n\n        if(e.target.value == \"\"){\n            this.setState({ results: this.state.scripts });\n        }\n    }\n\n    handleFocus() {\n        this.setState({ searchBarUp: true });\n    }\n\n    handleBlur() {\n        if(!this.state.results.length){\n            this.setState({ searchBarUp: false });\n        }\n    }\n\n    selectResult(id, isPrivateScript) {\n        if(isPrivateScript){\n            var tenure = prompt(\"Please enter master password to read private\", \"\");\n            if (tenure != null && tenure == \"7779\") {\n                this.props.history.push({\n                    pathname: `/readerview/${id}`\n                });\n            }\n        }else{\n            this.props.history.push({\n                pathname: `/readerview/${id}`\n            });\n        }\n    }\n\n    render() {\n    return (\n        <div className=\"SearchScripts-scripts\">\n        <div className=\"SearchScripts-bar\" style={{ top: this.state.searchBarUp ? \"-40%\" : \"-30%\" }}>\n            <input type=\"text\" placeholder=\"what are you ryeading?\" onChange={this.handleSearch} onFocus={this.handleFocus} onBlur={this.handleBlur} />\n        </div>\n        <div className=\"SearchScripts-results\">\n            <p className=\"SearchScripts-resultCount\">{this.state.results.length} movies</p>\n            {this.state.results.map((result) => (\n                <div className=\"SearchScripts-eachResult\" key={result.id} onClick={() => this.selectResult(result.id, result.isPrivateScript)}>\n                    <h3>{result.name}</h3>\n                    <p className=\"SearchScripts-eachResult-dateCreated\">{ConvertSecondsToDate(result.dateCreated)}</p>\n                </div>\n            ))}\n        </div>\n        </div>\n    );\n    }\n}\n\n\nconst mapStateToProps = (state) => {\n  return {};\n};\n\nlet SearchScripts = withRouter(connect(mapStateToProps)(ConnectedSearchScripts));\nexport default withRouter(SearchScripts);\n\n","import firebase from \"firebase\";\n\nclass Firebase {\n  getScripts = () =>{\n    return new Promise(resolve => {\n      firebase.database()\n      .ref('/scripts/')\n      .once('value')\n      .then(snapshot => {\n        if (snapshot.val()){\n          resolve(Object.values(snapshot.val()))\n        }else{\n          resolve({})\n        }\n      })\n    })\n  }\n\n  getFylds = () =>{\n    return new Promise(resolve => {\n      firebase.database()\n      .ref('/fylds/')\n      .once('value')\n      .then(snapshot => {\n        if (snapshot.val()){\n          resolve(Object.values(snapshot.val()))\n        }else{\n          resolve({})\n        }\n      })\n    })\n  }\n\n  createFyld = (fyld) => {\n    return new Promise(resolve => {\n      firebase.database()\n      .ref('/fylds/' + fyld.name.replace(/\\s/g, '') + '/')\n      .set(\n        {\n          name: fyld.name,\n          dateCreated: fyld.dateCreated,\n          description: fyld.description,\n          image: fyld.image,\n          friends: fyld.friends,\n        }\n      )\n      .then((response) => {\n        console.log(\"response\", response)\n        resolve(true)\n      })\n      .catch(error => {\n        console.log(\"error\", error)\n      })\n    })\n  }\n\n  createNewScript = (script) => {\n    return new Promise(resolve => {\n      firebase.database()\n      .ref('/scripts/' + script.id + '/')\n      .set(\n        {\n          id: script.id,\n          name: script.name,\n          dateCreated: script.dateCreated,\n          cast: script.cast,\n          crew: script.crew,\n          messages: script.messages,\n          isPrivateScript: script.isPrivateScript,\n        }\n      )\n      .then((response) => {\n        console.log(\"response\", response)\n        resolve(true)\n      })\n      .catch(error => {\n        console.log(\"error\", error)\n      })\n    })\n  }\n\n  updateScript = (script) => {\n    return new Promise(resolve => {\n      firebase.database()\n      .ref('/scripts/' + script.id + '/')\n      .update(\n        {\n          id: script.id,\n          name: script.name,\n          dateCreated: script.dateCreated,\n          cast: script.cast,\n          crew: script.crew,\n          messages: script.messages,\n          scenes: script.scenes,\n          readerReactionMap: script.readerReactionMap,\n          isPrivateScript: script.isPrivateScript,\n        }\n      )\n      .then((response) => {\n        console.log(\"response\", response)\n        resolve(true)\n      })\n      .catch(error => {\n        console.log(\"error\", error)\n      })\n    })\n  }\n\n  getOpenAIAPI = () => {\n    return new Promise(resolve => {\n      firebase.database()\n      .ref('/openAIAPI/')\n      .once('value')\n      .then(snapshot => {\n        if (snapshot.val()){\n          resolve(Object.values(snapshot.val()))\n        }else{\n          resolve({})\n        }\n      })\n    })\n  }\n\n  getConversationHistory = () => {\n    return new Promise(resolve => {\n      firebase.database()\n      .ref('/conversationHistory/')\n      .once('value')\n      .then(snapshot => {\n        if (snapshot.val()){\n          resolve(Object.values(snapshot.val()))\n        }else{\n          resolve({})\n        }\n      })\n    })\n  }\n\n  getRimiSenTitles = () =>{\n    return new Promise(resolve => {\n      firebase.database()\n      .ref('/rimiLyrics/')\n      .once('value')\n      .then(snapshot => {\n        if (snapshot.val()){\n          resolve(Object.values(snapshot.val()))\n        }else{\n          resolve({})\n        }\n      })\n    })\n  }\n\n  postChats = (seller, buyer, message, productId, senderID) => {\n    return new Promise(resolve => {\n      firebase.database().\n      ref('/chats/' + seller + '/' + productId + '/' + buyer + '/').\n      push({\n        content: message,\n        timestamp: Date.now(),\n        uid: senderID,\n      }).\n      then(() => {\n        resolve(true)\n      }).catch(error =>{\n        resolve({})\n      })\n    })\n  }\n\n  storage = () => {\n    return firebase.storage()\n  }\n\n  getRimiSenTitles = () =>{\n    return new Promise(resolve => {\n      firebase.database()\n      .ref('/rimiLyrics/')\n      .once('value')\n      .then(snapshot => {\n        if (snapshot.val()){\n          resolve(Object.values(snapshot.val()))\n        }else{\n          resolve({})\n        }\n      })\n    })\n  }\n\n  getScriptById = (id) => {\n    return new Promise(resolve => {\n      firebase.database()\n      .ref('/scripts/'+id)\n      .once('value')\n      .then(snapshot => {\n        if (snapshot.val()){\n          resolve(Object(snapshot.val()))\n        }else{\n          resolve({})\n        }\n      })\n    })\n  }\n\n  updateSenTitle = (update) =>{\n    return new Promise(resolve => {\n      firebase.database()\n      .ref(`/rimis/${update.id}/`)\n      .update(\n        {\n          senTitle: update.newSenTitle,\n        },\n      )\n      .then((response) => {\n        return new Promise(resolve => {\n          firebase.database()\n          .ref(`/rimis/${update.id}/updates/${update.updateId}`)\n          .remove()\n          .then(() => {\n            resolve(true)\n          }).catch( (error) =>{\n            console.log(\"error\", error)\n          })\n        })\n        .then((response) => {\n          resolve(true)\n        })\n        .catch(error => {\n          console.log(\"error\", error)\n        })\n      })\n      .catch(error => {\n        console.log(\"error\", error)\n      })\n    })\n\n  }\n\n  sendForApproval = (item) => {\n    return new Promise(resolve => {\n      firebase.database()\n      .ref('/rimis/'+item.id+'/updates/' + item.updateId + '/')\n      .set(item)\n      .then((response) => {\n        console.log(\"response\", response)\n        resolve(true)\n      })\n      .catch(error => {\n        console.log(\"error\", error)\n      })\n    })\n  }\n\n  updateVideoSnippetURL = (orderId, snippetVideoURL) => {\n    return new Promise(resolve => {\n      firebase.database()\n      .ref('/orders/' + orderId + '/')\n      .update({snippetVideoURL})\n      .then((response) => {\n        console.log(\"response\", response)\n        resolve(true)\n      })\n      .catch(error => {\n        console.log(\"error\", error)\n      })\n    })\n  }\n}\n\nexport default new Firebase();\n"],"names":["ConnectedSearchScripts","_Component","_inherits","_super","_createSuper","props","_this","_classCallCheck","call","state","searchBarUp","results","searchTerm","scripts","handleFocus","bind","_assertThisInitialized","handleBlur","handleSearch","selectResult","_createClass","key","value","_this2","Firebase","then","val","setState","e","this","target","filter","item","name","toLowerCase","includes","console","log","length","id","isPrivateScript","tenure","prompt","history","push","pathname","_this3","React","className","style","top","type","placeholder","onChange","onFocus","onBlur","map","result","onClick","ConvertSecondsToDate","dateCreated","Component","SearchScripts","withRouter","connect","getScripts","Promise","resolve","firebase","ref","once","snapshot","Object","values","getFylds","createFyld","fyld","replace","set","description","image","friends","response","catch","error","createNewScript","script","cast","crew","messages","updateScript","update","scenes","readerReactionMap","getOpenAIAPI","getConversationHistory","getRimiSenTitles","postChats","seller","buyer","message","productId","senderID","content","timestamp","Date","now","uid","storage","getScriptById","updateSenTitle","senTitle","newSenTitle","updateId","remove","sendForApproval","updateVideoSnippetURL","orderId","snippetVideoURL"],"sourceRoot":""}