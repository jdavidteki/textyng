{"version":3,"file":"static/js/main.d240c976.js","mappings":"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","sources":["src/components/Footer/Footer.js","src/components/Header/Header.js","src/Helpers/Helpers.js","src/firebase/firebase.js","src/components/Script/Script.js","src/components/EditableField/EditableField.js","src/components/CastMembers/CastMembers.js","src/components/Scenes/Scenes.js","src/components/FilePicker/FilePicker.js","src/components/RecordModal/RecordModal.js","src/components/MsgTypes/MsgTypes.js","src/components/TimeInput/TimeInput.js","src/components/CommentedPopup/CommentedPopup.js","src/components/EditScript/EditScript.js","src/components/NewScript/NewScript.js","src/components/ReaderView/ReaderView.js","src/components/HomePage/HomePage.js","src/components/SearchScripts/SearchScripts.js","src/components/Layout/Layout.js","src/App.js","src/Redux/Constants.js","src/Redux/Reducer.js","src/Redux/Store.js","src/firebase/config.js","index.js","webpack/bootstrap","webpack/runtime/chunk loaded","webpack/runtime/compat get default export","webpack/runtime/define property getters","webpack/runtime/global","webpack/runtime/hasOwnProperty shorthand","webpack/runtime/make namespace object","webpack/runtime/publicPath","webpack/runtime/jsonp chunk loading","webpack/startup"],"sourcesContent":["import React, { Component } from \"react\";\n\nimport \"./Footer.css\";\n\nclass Footer extends Component {\n  constructor(props){\n    super(props);\n\n    this.state = {\n      catSelected: \"textyng\",\n      findMeIconHover: \"#6c47db\",\n    }\n  }\n\n  render() {\n    return (\n      <div className={\"Footer-default\"}>\n        <div className=\"frame-142\">\n          <div className=\"Footer-greeting\">\n            everything is a message\n          </div>\n        </div>\n      </div>\n    )\n  };\n}\n\nexport default Footer;\n","import React, { Component } from \"react\";\nimport logo from '../../assets/logos/logo.png';\n\nimport { GetSvgIcon } from \"../../Helpers/Helpers.js\";\n\nimport \"./Header.css\";\n\nclass Header extends Component{\n  constructor(props){\n    super(props);\n\n    this.state = {\n      catSelected: \"textyng\",\n    }\n  }\n\n  handleCategoryClick(catSelected){\n    this.setState({\n      createIconHover: \"black\",\n      meCardsIconHover: \"black\",\n    })\n\n\n    if(catSelected == \"readerview\"){\n      this.setState({ createIconHover: \"#DCB69A\"})\n    }else if(catSelected == \"mecards\"){\n      this.setState({ meCardsIconHover: \"#DCB69A\"})\n    }\n\n    this.props.changePage(catSelected)\n  }\n\n  componentDidMount(){\n    let path = window.location.pathname;\n    this.setState({\n      createIconHover: path.includes(\"readerview/\") ? \"#DCB69A\" : 'black',\n      meCardsIconHover: path.includes(\"mecards/\") ? \"#DCB69A\" : 'black',\n    })\n\n    let element = document.getElementById(\"Header-logo\");\n    setInterval(function() {\n      let randomInterval = Math.floor(Math.random() * (3000 - 1000 + 1)) + 1000;\n      setTimeout(function() {\n\n        let currentBorderRadius = element.style.borderRadius;\n        if (currentBorderRadius === \"25%\") {\n          element.style.borderRadius = \"0\";\n        } else {\n          element.style.borderRadius = \"25%\";\n        }\n\n      }, randomInterval);\n    }, 4000); // 1000 milliseconds = 1 second\n  }\n\n  render(){\n    return (\n      <div className=\"Header\">\n        <div className=\"Header-logoWrapper\" onClick={() => this.handleCategoryClick(\"textyng\")}>\n          <img id=\"Header-logo\" className=\"Header-logo\" src={logo} alt=\"textyng.me.logo\" />\n        </div>\n        <div className=\"Header-mainMenu\">\n          <div className=\"Header-mainMenu-item Header-icon\" onClick={() => this.handleCategoryClick(\"searchscripts\")}>\n            {GetSvgIcon(\"createIcon\", this.state.createIconHover)}\n            <span className=\"Header-img-title\">scripts</span>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default Header;\n","import React, { Component } from \"react\";\n\nexport function GetSvgIcon(iconName, fillColor) {\n    if (iconName == \"createIcon\"){\n        return (\n            <svg data-name=\"Layer 1\" fill={fillColor} xmlns=\"http://www.w3.org/2000/svg\" height=\"24\" width=\"24\" viewBox=\"0 0 60 60\">\n                <defs></defs>\n                <title>Thinking</title>\n                <g id=\"TSizNs.tif\">\n                    <path className=\"cls-1\" d=\"M55.3,36.65v.9l0,.15c-.05.33-.08.67-.15,1a8.41,8.41,0,0,1-1.81,3.38,9.42,9.42,0,0,1-2.13,1.85.23.23,0,0,0-.11.24c0,.2,0,.4.07.6a9.07,9.07,0,0,1-.2,3.07,5.4,5.4,0,0,1-1.57,2.77,8.37,8.37,0,0,1-3.88,1.84,4.68,4.68,0,0,0-1.58.32.56.56,0,0,0-.2.17c-.22.33-.4.69-.63,1a7.5,7.5,0,0,1-2,2,8.09,8.09,0,0,1-3,1.06l-1.17.22H35.63L35,57.18a5.8,5.8,0,0,1-2.8-1.31l-.24-.2-.13.12a5.83,5.83,0,0,1-2.72,1.35c-.25,0-.51.08-.77.11h-.83l-.17,0c-.59-.08-1.19-.12-1.78-.24a7.53,7.53,0,0,1-2.55-1,7.82,7.82,0,0,1-2.84-3.19.36.36,0,0,0-.34-.22,10.57,10.57,0,0,1-3.49-.85,5.59,5.59,0,0,1-3.18-3.38,9.15,9.15,0,0,1-.28-4.19.23.23,0,0,0-.11-.27,11,11,0,0,1-2.4-2.16,7.22,7.22,0,0,1-1.66-5.53,9.36,9.36,0,0,1,1.39-4c.12-.2.32-.38.34-.59s-.14-.42-.23-.63a20.7,20.7,0,0,1-1.39-6,13.6,13.6,0,0,1,.43-4.58A10.33,10.33,0,0,1,12,15.88a10.87,10.87,0,0,1,4.9-2.78.3.3,0,0,0,.21-.17c.25-.45.48-.92.77-1.34a10.77,10.77,0,0,1,5.4-4,14,14,0,0,1,5.57-.77A5.64,5.64,0,0,1,31,7.32c.36.18.69.4,1.05.61l0,0a5.38,5.38,0,0,1,3-1.12,12.72,12.72,0,0,1,3,.12A12.37,12.37,0,0,1,42.62,8.4a10.09,10.09,0,0,1,4.32,4.54.3.3,0,0,0,.18.15,22.44,22.44,0,0,1,2.17.8,10.26,10.26,0,0,1,5.47,6.78,13.2,13.2,0,0,1,.38,3.6,15.32,15.32,0,0,1-.42,3.63,22.7,22.7,0,0,1-1.13,3.44.59.59,0,0,0,0,.6,9.43,9.43,0,0,1,1.55,3.81C55.23,36.05,55.26,36.35,55.3,36.65ZM40.16,51.87,40,51.75a6.3,6.3,0,0,1-2.42-3A8.41,8.41,0,0,1,37,45.4a2,2,0,0,1,4-.11c0,.42,0,.85.07,1.26a2.79,2.79,0,0,0,1.36,2.07,2.28,2.28,0,0,0,1.6.25,6.39,6.39,0,0,0,2.1-.68,2.58,2.58,0,0,0,1.41-2.38,7.73,7.73,0,0,0-.34-2.08,1.93,1.93,0,0,1,0-1,2,2,0,0,1,1.15-1.33,5.39,5.39,0,0,0,2.18-1.68,4.41,4.41,0,0,0,.81-3.24A5.32,5.32,0,0,0,51,35l-.14.11c-.4.33-.8.68-1.22,1a9.32,9.32,0,0,1-6.92,1.8,2.21,2.21,0,0,1-1.46-.67,1.84,1.84,0,0,1-.35-2A1.82,1.82,0,0,1,42.65,34a6.44,6.44,0,0,1,.86.09,5.23,5.23,0,0,0,2.72-.56,10.28,10.28,0,0,0,3.37-2.74,3.27,3.27,0,0,0,.5-.69,15.28,15.28,0,0,0,1.31-5.56,8.75,8.75,0,0,0-1.09-4.72,6.55,6.55,0,0,0-4.92-3.38A2,2,0,0,1,43.7,15a3.25,3.25,0,0,0-.23-.54,7,7,0,0,0-2.77-2.68,9.92,9.92,0,0,0-5.55-1.15.86.86,0,0,0-.8.59,4.88,4.88,0,0,0-.2.65,11.53,11.53,0,0,0-.21,2.49V51.17a5.62,5.62,0,0,0,0,.58,1.61,1.61,0,0,0,.73,1.32,1.69,1.69,0,0,0,.89.27c.54,0,1.08-.06,1.61-.09a4.65,4.65,0,0,0,2.28-.81A8.66,8.66,0,0,0,40.16,51.87Zm-26.73-23c.35-.16.68-.33,1-.47a10.22,10.22,0,0,1,3.22-.75,13.17,13.17,0,0,1,3.38.19c.63.12,1.25.33,1.88.45a2,2,0,0,1,1.57,2,1.94,1.94,0,0,1-2.13,1.83,8.56,8.56,0,0,1-.83-.23,10.88,10.88,0,0,0-4-.25,5.17,5.17,0,0,0-3.67,1.92,5.65,5.65,0,0,0-1.24,3.63A4.27,4.27,0,0,0,14,40.24a6.17,6.17,0,0,0,1.75,1.15,1.93,1.93,0,0,1,1.07,2.33,6.42,6.42,0,0,0-.34,2.3A2.54,2.54,0,0,0,17,47.46a3.43,3.43,0,0,0,1.68,1.08,8.26,8.26,0,0,0,2.61.39,2,2,0,0,1,1.08.3,2.25,2.25,0,0,1,.92,1.39,3.23,3.23,0,0,0,1.65,2.05,6,6,0,0,0,2.26.64,5.31,5.31,0,0,0,1.49,0A1.51,1.51,0,0,0,30,52a4.21,4.21,0,0,0,.06-.79q0-18.36,0-36.7c0-.68-.05-1.36-.1-2a4.13,4.13,0,0,0-.34-1.34.78.78,0,0,0-.65-.48,9.22,9.22,0,0,0-3.1.18,8.44,8.44,0,0,0-4.69,2.72A3.91,3.91,0,0,0,20.3,15a1.69,1.69,0,0,1-.79,1.06,2,2,0,0,1-.76.35c-.23,0-.46.09-.68.14a6.39,6.39,0,0,0-2.69,1.28,7.82,7.82,0,0,0-2.8,5.66,10.68,10.68,0,0,0,.1,2.46A14.58,14.58,0,0,0,13.43,28.82Z\"></path>\n                    <path className=\"cls-1\" d=\"M46.77,28.09a8.52,8.52,0,0,1-6.43-2.61,9.19,9.19,0,0,1-2-3.28,14.79,14.79,0,0,1-.53-1.9A1.91,1.91,0,0,1,39.46,18a2,2,0,0,1,2.26,1.69,6.5,6.5,0,0,0,1.84,3.55,3.31,3.31,0,0,0,2.07.94,6.86,6.86,0,0,0,1.81-.09A1.94,1.94,0,1,1,47.79,28C47.42,28,47,28.07,46.77,28.09Z\"></path>\n                    <path className=\"cls-1\" d=\"M18.37,35.87a2.68,2.68,0,0,1,1,.25A10,10,0,0,1,23,38.44a10.53,10.53,0,0,1,2.29,3.48,12.52,12.52,0,0,1,.86,3.47,1.94,1.94,0,0,1-3.81.68c-.07-.32-.05-.67-.09-1a6,6,0,0,0-2.88-4.7,7.77,7.77,0,0,0-1.55-.71,1.9,1.9,0,0,1-1.38-1.76A1.93,1.93,0,0,1,18.37,35.87Z\"></path>\n                    <path className=\"cls-1\" d=\"M20.77,24.11a2.57,2.57,0,0,1-1.26-.19,1.94,1.94,0,0,1,.83-3.7,5.66,5.66,0,0,0,1.79-.2,3.08,3.08,0,0,0,2.1-2.34,2,2,0,0,1,2-1.59,2,2,0,0,1,1.82,2.48,7,7,0,0,1-5.29,5.26A8.63,8.63,0,0,1,20.77,24.11Z\"></path>\n                </g>\n            </svg>\n        )\n    }\n    if (iconName == \"findMeIcon\"){\n        return (\n            <svg data-name=\"Layer 1\" fill={fillColor} xmlns=\"http://www.w3.org/2000/svg\" height=\"24\" width=\"24\" viewBox=\"0 0 60 60\">\n                <defs></defs>\n                <title>Connection</title>\n                <path className=\"cls-1\" d=\"M32,25.56a8.87,8.87,0,1,1,8.86-8.86A8.87,8.87,0,0,1,32,25.56ZM32,11.7a5,5,0,1,0,5,5A5,5,0,0,0,32,11.7Z\"></path>\n                <path className=\"cls-1\" d=\"M14.28,54.07a8.86,8.86,0,1,1,8.86-8.86A8.86,8.86,0,0,1,14.28,54.07Zm0-13.85a5,5,0,1,0,5,5A5,5,0,0,0,14.28,40.22Z\"></path>\n                <path className=\"cls-1\" d=\"M49.72,54.07a8.86,8.86,0,1,1,8.86-8.86A8.87,8.87,0,0,1,49.72,54.07Zm0-13.85a5,5,0,1,0,5,5A5,5,0,0,0,49.72,40.22Z\"></path>\n                <rect className=\"cls-1\" x=\"39.83\" y=\"20.42\" width=\"4\" height=\"19.68\" transform=\"translate(-9.47 24.46) rotate(-29.43)\"></rect>\n                <rect className=\"cls-1\" x=\"13.3\" y=\"28.26\" width=\"19.68\" height=\"4\" transform=\"translate(-14.59 35.55) rotate(-60.57)\"></rect>\n                <rect className=\"cls-1\" x=\"21.5\" y=\"43.21\" width=\"21\" height=\"4\"></rect>\n            </svg>\n        )\n    }\n    if (iconName == \"mecardsIcon\"){\n        return (\n            <svg data-name=\"Layer 1\" fill={fillColor} xmlns=\"http://www.w3.org/2000/svg\" height=\"24\" width=\"24\" viewBox=\"0 0 60 60\">\n                <defs></defs>\n                <title>Work</title>\n                <g id=\"iQFwDU.tif\">\n                    <path className=\"cls-1\" d=\"M54.09,53.15H44.18s-.07-.06-.12-.07a2.53,2.53,0,0,1-2-2.68V45.11H11.64A3.47,3.47,0,0,1,7.91,42a.9.9,0,0,0-.08-.21V39.74a1.3,1.3,0,0,1,1.37-.68c.87,0,1.75,0,2.67,0V15a6.27,6.27,0,0,1,0-.75,3.58,3.58,0,0,1,2.18-3.12c.21-.09.43-.16.64-.24H48.24a2.67,2.67,0,0,0,.26.09,4.31,4.31,0,0,1,3.63,4.52V27h.53a10.63,10.63,0,0,1,1.13,0,2.63,2.63,0,0,1,2.38,2.08v22A3,3,0,0,1,54.09,53.15ZM17.94,35H42.09v-.53c0-1.62,0-3.24,0-4.86A2.52,2.52,0,0,1,44.7,27h1.35V16.92H17.94ZM50.1,27c0-.11,0-.17,0-.23,0-3.93,0-7.87,0-11.8a1.9,1.9,0,0,0-.46-1.09,2.87,2.87,0,0,0-2.35-1H15.44A1.43,1.43,0,0,0,14,14.07a3.71,3.71,0,0,0-.1.94q0,11.75,0,23.5c0,.17,0,.33,0,.5H42.05V37H17.25c-1.06,0-1.38-.31-1.38-1.37V16.25c0-1,.32-1.36,1.35-1.36H47.15a.93.93,0,0,1,.93.78,3.56,3.56,0,0,1,.05.65V27Zm4,6.08h-10v14h10ZM42.06,41.1H9.85c.12,1.58.53,2,2,2H42.06Zm12.11,8H44.12a.53.53,0,0,0,0,.13v1c0,.71.16.88.89.88h8.44c.42,0,.72-.17.74-.62S54.17,49.63,54.17,49.15Zm0-18.19a1.19,1.19,0,0,0,0-.2c0-.31,0-.63,0-.94,0-.66-.18-.84-.83-.84H44.76c-.37,0-.63.15-.66.52s0,1,0,1.46Z\"></path>\n                    <path className=\"cls-1\" d=\"M54.17,53.63H44l-.12-.08a3,3,0,0,1-2.31-3.15V45.59h-30a3.94,3.94,0,0,1-4.18-3.47l-.1-.3v-2.2l.06-.11a1.79,1.79,0,0,1,1.81-.93c.6,0,1.2,0,1.82,0h.35V14.84a4.11,4.11,0,0,1,0-.7,4,4,0,0,1,2.46-3.49l.46-.17.37-.11H48.33l.18.07.09,0a4.8,4.8,0,0,1,4,5v11H53a7.85,7.85,0,0,1,.84,0,3.12,3.12,0,0,1,2.79,2.42l0,.14,0,22.15a3.48,3.48,0,0,1-2.39,2.39Zm-9.85-1H54A2.5,2.5,0,0,0,55.69,51V29.15a2.15,2.15,0,0,0-1.94-1.69c-.24,0-.48,0-.73,0H51.65v-12a3.82,3.82,0,0,0-3.26-4.05l-.24-.08H14.81l-.13,0-.42.16a3.1,3.1,0,0,0-1.89,2.74,5.43,5.43,0,0,0,0,.57v24.7h-1.3c-.64,0-1.26,0-1.88,0a.84.84,0,0,0-.86.35v1.83a1,1,0,0,1,.07.23,3,3,0,0,0,3.26,2.69H42.56V50.4a2.05,2.05,0,0,0,1.64,2.22Zm7.55-1H45c-1,0-1.37-.38-1.37-1.36l0-1.18.1-.36.38-.06H54.65v.91c0,.33,0,.66,0,1a1.11,1.11,0,0,1-1.22,1.07Zm-.52-1h2.07c.26,0,.26-.06.26-.16a8.58,8.58,0,0,0,0-.88H44.56v.64a1.17,1.17,0,0,0,0,.38s.07,0,.38,0Zm3.28-3.11h-11v-15h11Zm-10-1h9.07V33.52H44.6Zm-2.06-3.06H11.89c-1.77,0-2.38-.58-2.52-2.4l0-.51H42.54Zm-32.16-2c.13.87.42,1,1.51,1H41.58v-1Zm32.15-2.09H13.44l0-.61c0-.12,0-.24,0-.37q0-11.74,0-23.5a4.9,4.9,0,0,1,.11-1,1.91,1.91,0,0,1,1.9-1.58H47.3A3.35,3.35,0,0,1,50,13.53a2.46,2.46,0,0,1,.57,1.39c0,3.15,0,6.29,0,9.43v2.38a1.37,1.37,0,0,1,0,.19l-.05.43-.44.09H47.65V16.33a2.5,2.5,0,0,0,0-.55.46.46,0,0,0-.48-.4H17.22c-.77,0-.87.1-.87.88v19.4c0,.79.1.89.9.89H42.53Zm-28.18-1H41.58v-1H17.25c-1.32,0-1.86-.54-1.86-1.85V16.25c0-1.3.53-1.83,1.83-1.83h30a1.4,1.4,0,0,1,1.37,1.16,3.33,3.33,0,0,1,.07.75V26.48h1V24.35c0-3.14,0-6.28,0-9.42a1.4,1.4,0,0,0-.35-.79,2.39,2.39,0,0,0-2-.82H15.47a1,1,0,0,0-1,.85,3.58,3.58,0,0,0-.09.83V38.53Zm28.21-3.06H17.46v-19H46.53v11H44.7a2.05,2.05,0,0,0-2.13,2.14v5.87Zm-24.15-.95h23.2V29.6a3,3,0,0,1,3.09-3.1h.88V17.4H18.41Zm35.73-3.08H43.61v-.92c0-.36,0-.71,0-1.05a1,1,0,0,1,1.13-1h8.59c.91,0,1.3.39,1.31,1.32v.95c0,.05,0,.1,0,.19l-.07.4Zm-9.58-1h9.13q0-.33,0-.66c0-.26,0-.33,0-.34s-.07,0-.31,0H44.75a.68.68,0,0,0-.17,0C44.55,29.85,44.56,30.16,44.56,30.48Z\"></path>\n                </g>\n            </svg>\n        )\n    }\n}\n\nexport function GetSelectedLevelOptionAmount(value){\n    if (value == \"Regular Chicken Shawarma\"){\n        return \"12\"\n    }\n\n    if (value == \"Regular Beef Shawarma\"){\n        return \"14\"\n    }\n\n    if (value == \"Regular Combo (Chicken and Beef)\"){\n        return \"880\"\n    }\n\n    if (value == \"Owanbe Package\"){\n        return \"15\"\n    }\n\n    if (value == \"Regular Mega (Chicken, Beef, and Shrimp)\"){\n        return \"16\"\n    }\n\n    if (value == \"Double Sausage Chicken Shawarma\"){\n        return \"14\"\n    }\n}\n\nexport function GetSelectedStatusLevelLabel(value) {\n    value = parseInt(value)\n\n    if(value <= 20){\n      return \"received..\"\n    }\n\n    if(value >= 20 && value < 40){\n      return \"preparing..\"\n    }\n\n    if(value >= 40 && value < 60){\n      return \"cooking...\"\n    }\n\n    if(value >= 60 && value < 80){\n      return \"almost ready..\"\n    }\n\n    if(value >= 80 && value < 100){\n      return \"finishing touches\"\n    }\n\n    if(value == 100){\n        return \"food ready!\"\n    }\n\n    return \"i need igbo and shayo o!\"\n}\n\nexport function HmsToSecondsOnly(totalSecs) {\n    var str = totalSecs.substr(0,5)\n    var p = str.split(':'),\n        s = 0, m = 1;\n\n    while (p.length > 0) {\n        s += m * parseInt(p.pop(), 10);\n        m *= 60;\n    }\n\n    return s *1000 + ((parseInt(totalSecs.substr(6, 9), 10))/100);\n}\n","import firebase from \"firebase\";\n\nclass Firebase {\n  getScripts = () =>{\n    return new Promise(resolve => {\n      firebase.database()\n      .ref('/scripts/')\n      .once('value')\n      .then(snapshot => {\n        if (snapshot.val()){\n          resolve(Object.values(snapshot.val()))\n        }else{\n          resolve({})\n        }\n      })\n    })\n  }\n\n  createNewScript = (script) => {\n    return new Promise(resolve => {\n      firebase.database()\n      .ref('/scripts/' + script.id + '/')\n      .set(\n        {\n          id: script.id,\n          name: script.name,\n          dateCreated: script.dateCreated,\n          cast: script.cast,\n          crew: script.crew,\n          messages: script.messages,\n        }\n      )\n      .then((response) => {\n        console.log(\"response\", response)\n        resolve(true)\n      })\n      .catch(error => {\n        console.log(\"error\", error)\n      })\n    })\n  }\n\n  updateScript = (script) => {\n    return new Promise(resolve => {\n      firebase.database()\n      .ref('/scripts/' + script.id + '/')\n      .update(\n        {\n          id: script.id,\n          name: script.name,\n          dateCreated: script.dateCreated,\n          cast: script.cast,\n          crew: script.crew,\n          messages: script.messages,\n          scenes: script.scenes,\n          readerReactionMap: script.readerReactionMap,\n        }\n      )\n      .then((response) => {\n        console.log(\"response\", response)\n        resolve(true)\n      })\n      .catch(error => {\n        console.log(\"error\", error)\n      })\n    })\n  }\n\n  getRimiSenTitles = () =>{\n    return new Promise(resolve => {\n      firebase.database()\n      .ref('/rimiLyrics/')\n      .once('value')\n      .then(snapshot => {\n        if (snapshot.val()){\n          resolve(Object.values(snapshot.val()))\n        }else{\n          resolve({})\n        }\n      })\n    })\n  }\n\n  postChats = (seller, buyer, message, productId, senderID) => {\n    return new Promise(resolve => {\n      firebase.database().\n      ref('/chats/' + seller + '/' + productId + '/' + buyer + '/').\n      push({\n        content: message,\n        timestamp: Date.now(),\n        uid: senderID,\n      }).\n      then(() => {\n        resolve(true)\n      }).catch(error =>{\n        resolve({})\n      })\n    })\n  }\n\n  storage = () => {\n    return firebase.storage()\n  }\n\n  getRimiSenTitles = () =>{\n    return new Promise(resolve => {\n      firebase.database()\n      .ref('/rimiLyrics/')\n      .once('value')\n      .then(snapshot => {\n        if (snapshot.val()){\n          resolve(Object.values(snapshot.val()))\n        }else{\n          resolve({})\n        }\n      })\n    })\n  }\n\n  getScriptById = (id) => {\n    return new Promise(resolve => {\n      firebase.database()\n      .ref('/scripts/'+id)\n      .once('value')\n      .then(snapshot => {\n        if (snapshot.val()){\n          resolve(Object(snapshot.val()))\n        }else{\n          resolve({})\n        }\n      })\n    })\n  }\n\n  updateSenTitle = (update) =>{\n    return new Promise(resolve => {\n      firebase.database()\n      .ref(`/rimis/${update.id}/`)\n      .update(\n        {\n          senTitle: update.newSenTitle,\n        },\n      )\n      .then((response) => {\n        return new Promise(resolve => {\n          firebase.database()\n          .ref(`/rimis/${update.id}/updates/${update.updateId}`)\n          .remove()\n          .then(() => {\n            resolve(true)\n          }).catch( (error) =>{\n            console.log(\"error\", error)\n          })\n        })\n        .then((response) => {\n          resolve(true)\n        })\n        .catch(error => {\n          console.log(\"error\", error)\n        })\n      })\n      .catch(error => {\n        console.log(\"error\", error)\n      })\n    })\n\n  }\n\n  sendForApproval = (item) => {\n    return new Promise(resolve => {\n      firebase.database()\n      .ref('/rimis/'+item.id+'/updates/' + item.updateId + '/')\n      .set(item)\n      .then((response) => {\n        console.log(\"response\", response)\n        resolve(true)\n      })\n      .catch(error => {\n        console.log(\"error\", error)\n      })\n    })\n  }\n\n  updateVideoSnippetURL = (orderId, snippetVideoURL) => {\n    return new Promise(resolve => {\n      firebase.database()\n      .ref('/orders/' + orderId + '/')\n      .update({snippetVideoURL})\n      .then((response) => {\n        console.log(\"response\", response)\n        resolve(true)\n      })\n      .catch(error => {\n        console.log(\"error\", error)\n      })\n    })\n  }\n}\n\nexport default new Firebase();\n","import { DataArray } from \"@mui/icons-material\";\nimport React, { Component } from \"react\";\nimport firebase from \"../../firebase/firebase\";\n\nclass MessageNode {\n  constructor(data) {\n    this.data = data;\n    this.next = null;\n  }\n}\n\nclass Script {\n  constructor(name) {\n    var milliseconds = Math.floor(Date.now() / 1000)\n\n    this.name = name;\n    this.dateCreated = milliseconds\n    this.id = name + milliseconds\n    this.cast = [];\n    this.crew = [];\n    this.scenes = [];\n    this.head = null;\n    this.messages = new MessageNode();\n    this.node = {};\n    this.totalNoMsgs = 0;\n    this.readerReactionMap = new Map();\n  }\n\n  updateScriptName(name){\n    this.name = name\n    this.id = this.name + this.dateCreated\n  }\n\n  numberOfMessages() {\n    let count = 0;\n    let node = this.head;\n    while (node) {\n      count++;\n      node = node.next;\n    }\n    return count;\n  }\n\n  getScenes(){\n    return this.scenes\n  }\n\n  updateReaderReaction(emojiName, messageId){\n    if (!this.readerReactionMap.has(messageId)) {\n      this.readerReactionMap.set(messageId, []);\n    }\n    this.readerReactionMap.get(messageId).push(emojiName);\n\n    this.updateScriptFirebase()\n  }\n\n  getReaderReactionMap(){\n    return this.readerReactionMap\n  }\n\n  getTotalNumScenes(){\n    return this.getScenes().length\n  }\n\n  deleteScript() {\n    this.head = null;\n  }\n\n  getLastMessage() {\n    let lastNode = this.head;\n    if (lastNode) {\n      while (lastNode.next) {\n        lastNode = lastNode.next;\n      }\n    }\n    return lastNode;\n  }\n\n  getFirstMessage() {\n    return this.head;\n  }\n\n  addNewMessage(data) {\n    this.totalNoMsgs += 1\n    data.MsgIndex = this.totalNoMsgs\n\n    let newNode = new MessageNode(data);\n\n    if (!this.head) {\n      this.head = newNode;\n      return this.head;\n    }\n\n    let current = this.head;\n    while (current.next) {\n      current = current.next;\n    }\n    current.next = newNode;\n  }\n\n  deleteMessage(id){\n    if (this.head.data.id === id) {\n      this.head = this.head.next;\n    } else {\n      let current = this.head;\n      while (current.next) {\n        if (current.next.data.id === id) {\n          current.next = current.next.next;\n          break;\n        }\n        current = current.next;\n      }\n    }\n    return this.head;\n  }\n\n  getLastMessage() {\n    let current = this.head;\n\n    while (current.next) {\n      current = current.next;\n    }\n\n    return current.data.content\n  }\n\n  getNthMessage(n) {\n    n -= 1\n    let current = this.head;\n\n    for(var i = 0; i < n; i++){\n      if (current){\n        current = current.next;\n      }else{\n        //nth message doesn't exist\n        return \"\"\n      }\n    }\n\n    return current.data.content\n  }\n\n  getNthMessageNode(n) {\n    n -= 1\n    let current = this.head;\n\n    for(var i = 0; i < n; i++){\n      if (current.next){\n        current = current.next;\n      }else{\n        //nth message doesn't exist\n        return \"\"\n      }\n    }\n\n    return current.data\n  }\n\n  getAllMessagesStringList() {\n    let messages = []\n    let current = this.head;\n\n    while (current) {\n      messages.push(current.data.content)\n      current = current.next;\n    }\n\n    return messages\n  }\n\n  getAllMessagesStringListBySenderId(senderId){\n    let messages = []\n    let current = this.head;\n\n    while (current) {\n      if (current.data.senderId == senderId){\n        messages.push(current.data)\n      }\n      current = current.next;\n    }\n\n    return messages\n  }\n\n  getOnlyTextMsgsAsNodes(){\n    let messages = []\n    let current = this.head;\n\n    while (current) {\n      if(current.data.msgType == \"textMsg\"){\n        messages.push(current.data)\n      }\n      current = current.next;\n    }\n\n    return messages\n  }\n\n  getOnlyCommentsAsNodes(){\n    let messages = []\n    let current = this.head;\n\n    while (current) {\n      if(current.data.msgType == \"comment\"){\n        messages.push(current.data)\n      }\n      current = current.next;\n    }\n\n    return messages\n  }\n\n  getCommentByCastIdMsgId(castId, msgId) {\n    let allComments = this.getOnlyCommentsAsNodes()\n\n    const result = allComments.find(obj => obj.whoCommentedMsg === castId && obj.idOfMsgCommented === msgId);\n\n    if(result){\n      return result.content\n    }\n\n    return ''\n  }\n\n  getCommentNodeByCastIdMsgId(castId, msgId) {\n    let allComments = this.getOnlyCommentsAsNodes()\n    return allComments.find(obj => obj.whoCommentedMsg === castId && obj.idOfMsgCommented === msgId);\n  }\n\n  editNodeContent(nodeId, newContent){\n    let currentNode = this.head;\n    while (currentNode) {\n\n      if (currentNode.data.id === nodeId) {\n        currentNode.data.content = newContent;\n        break;\n      }\n      currentNode = currentNode.next;\n    }\n\n    this.updateScriptFirebase()\n  }\n\n  getOnlyLikedMsgsAsNodes(){\n    let messages = []\n    let current = this.head;\n\n    while (current) {\n      if(current.data.msgType == \"like\"){\n        messages.push(current.data)\n      }\n      current = current.next;\n    }\n\n    return messages\n  }\n\n  getAllMessagesAsNodes() {\n    let messages = []\n    let current = this.head;\n\n    while (current) {\n      messages.push(current.data)\n      current = current.next;\n    }\n\n    return messages\n  }\n\n  getSenderNameFromID(senderId){\n    const mergedArray = this.getAllCast().concat(this.getAllCrew());\n\n    const sender = mergedArray.find(obj => obj.id === senderId);\n    if(sender){\n      return sender.name\n    }else{\n      return \"\"\n    }\n  }\n\n  sendScriptToFirebase() {\n    let script = {\n      id: this.id,\n      name: this.name,\n      dateCreated: this.dateCreated,\n      cast: this.getAllCast(),\n      crew: this.getAllCrew(),\n      messages: this.getAllMessagesAsNodes(),\n      scenes: this.getAllScenes(),\n    }\n\n    firebase.createNewScript(script)\n  }\n\n  updateCast(cast){\n    this.cast = cast\n  }\n\n  updateScene(scenes){\n    this.scenes = scenes\n  }\n\n  updateScriptFirebase(){\n    let script = {\n      id: this.id,\n      name: this.name,\n      dateCreated: this.dateCreated,\n      cast: this.getAllCast(),\n      crew: this.getAllCrew(),\n      messages: this.getAllMessagesAsNodes(),\n      scenes: this.getAllScenes(),\n      readerReactionMap: JSON.stringify(Object.fromEntries(this.readerReactionMap)),\n    }\n\n    firebase.updateScript(script)\n  }\n\n  removeCast(cast){\n    let newCast = []\n\n    this.cast.forEach((existingCast) => {\n      if (existingCast.id != cast.id){\n        newCast.push(existingCast)\n      }\n    })\n\n    this.cast = newCast\n  }\n\n  addNewCrew(crew){\n    this.crew.push(crew)\n  }\n\n  getAllCast(){\n    return this.cast\n  }\n\n  getAllScenes(){\n    return this.scenes\n  }\n\n  getCastIdToName(){\n    const idNameMap = new Map();\n    for (const object of this.getAllCast) {\n      idNameMap.set(object.id, object.name);\n    }\n    return idNameMap;\n  }\n\n  getAllCrew(){\n    return this.crew\n  }\n\n  removeCrew(crew){\n    let newCrew = []\n\n    this.crew.forEach((existingCrew) => {\n      if (existingCrew.id != crew.id){\n        newCrew.push(existingCrew)\n      }\n    })\n\n    this.crew = newCrew\n  }\n\n  getScriptName() {\n    return this.name;\n  }\n\n  updateScriptName(name) {\n    this.name = name;\n  }\n\n  grabScriptFromFirebase(scriptId){\n    return new Promise(resolve => {\n      firebase.getScriptById(scriptId)\n      .then(val => {\n\n        if(val.messages){\n          let messages = val.messages\n          for(var i=0; i<messages.length; i++){\n            this.addNewMessage(messages[i])\n          }\n        }\n\n        //grab user reactions\n        let readerReactionMap = new Map();\n        if(val.readerReactionMap){\n          let javascriptObject = JSON.parse(val.readerReactionMap);\n          readerReactionMap = new Map(Object.entries(javascriptObject));\n        }\n\n        this.name = val.name;\n        this.dateCreated = val.dateCreated\n        this.id = val.id\n        this.cast = val.cast ? val.cast : []\n        this.crew = val.crew ? val.crew : []\n        this.scenes = val.scenes ? val.scenes : []\n        this.readerReactionMap = readerReactionMap\n      })\n      .then(() => {\n        resolve(this)\n      })\n    })\n  }\n\n  getNodeByMessageId(messageId){\n    let currentNode = this.head;\n    while (currentNode) {\n      if (currentNode.data.id === messageId) {\n        return currentNode;\n      }\n      currentNode = currentNode.next;\n    }\n    return null;\n  }\n\n  getMsgType(messageId){\n    let message = getNodeByMessageId(messageId)\n\n    if (message.msgType){\n      return message.msgType\n    }\n\n    return \"textMsg\"\n  }\n}\n\nexport default Script;","import React from \"react\";\n\nimport TextField from \"@material-ui/core/TextField\";\n\nimport \"./EditableField.css\";\n\nfunction EditableField(props) {\n  let oldName = \"textyng\"\n\n  if(props.name){\n    oldName = props.name\n  }\n  const [name, setName] = React.useState(oldName);\n  const [isNameFocused, setIsNamedFocused] = React.useState(false);\n\n  function onBlurFunction(){\n    setIsNamedFocused(false)\n    props.getScriptName([props.id, name])\n  }\n\n  return (\n    <div className=\"EditableField\">\n      {!isNameFocused ? (\n        <div\n          onClick={() => {\n            setIsNamedFocused(true);\n          }}\n        >\n          {name}\n        </div>\n      ) : (\n        <TextField\n          autoFocus\n          inputProps={{maxLength: 20, style: {fontSize: props.fontSize ? props.fontSize : 50}}}\n          value={name}\n          onChange={(event) => setName(event.target.value)}\n          onBlur={(event) => onBlurFunction()}\n\n        />\n      )}\n    </div>\n  );\n}\n\nexport default EditableField;\n","import React from \"react\";\nimport EditableField from \"../EditableField/EditableField\";\n\nimport \"./CastMembers.css\";\n\nfunction CastMembers(props) {\n  let defaultCast = [\n    {\n      name: \"Kiyo\",\n      id: 1,\n    },\n    {\n      name: \"Cast Member\",\n      id: 2,\n    },\n  ];\n\n  const [casts, setCast] = React.useState(props.cast && props.cast.length > 0 ? props.cast : defaultCast);\n  const [totalCast, setTotalCast] = React.useState(props.cast && props.cast.length > 0 ? props.cast.length : defaultCast.length);\n\n  function addNewCastMember() {\n    let newCast = {\n      name: \"Cast Member\",\n      id: totalCast + 1,\n    };\n    setCast(casts => [...casts, newCast]);\n    setTotalCast(totalCast + 1);\n    props.getAllCast(casts);\n  }\n\n  function updateCastName(name) {\n    let id = name[0];\n    let newName = name[1];\n\n    for (var i = 0; i < casts.length; i++) {\n      if (casts[i].id == id) {\n        casts[i].name = newName;\n      }\n    }\n\n    setCast(casts => [...casts]);\n    props.getAllCast(casts);\n  }\n\n  function updateActiveOption(value) {\n    var el = document.querySelectorAll(\".CastMembers-cast\");\n\n    for (let i = 0; i < el.length; i++) {\n      el[i].classList.remove(\"active\");\n    }\n\n    document.getElementById(\"CastMembers-castId-\" + value.id).classList.add(\"active\");\n\n    props.selectedCast ? props.selectedCast(value) : {};\n  }\n\n  return (\n    <div className=\"CastMembers\">\n      {casts.map(\n        (value, index) => (\n          <div\n            id={\"CastMembers-castId-\" + value.id}\n            className=\"CastMembers-cast\"\n            key={index}\n            onClick={() => updateActiveOption(value)}\n          >\n            <EditableField name={value.name} id={value.id} fontSize={16} getScriptName={updateCastName} />\n          </div>\n        )\n      )}\n\n      <div className=\"CastMembers-addCast CastMembers-cast\" onClick={() => addNewCastMember()}>\n        +\n      </div>\n    </div>\n  );\n}\n\nexport default CastMembers;\n","import React from \"react\";\nimport EditableField from \"../EditableField/EditableField\";\n\nimport \"./Scenes.css\";\n\nfunction Scenes(props) {\n  let defaultScenes = [\n    {\n      name: \"Bombay\",\n      id: 1,\n    },\n    {\n      name: \"Sheraton Hostel\",\n      id: 2,\n    },\n  ];\n\n  const [scenes, setScenes] = React.useState(props.scenes && props.scenes.length > 0 ? props.scenes : defaultScenes);\n  const [totalScenes, setTotalScenes] = React.useState(props.scenes && props.scenes.length > 0 ? props.scenes.length : defaultScenes.length);\n\n  function addNewScene() {\n    let newScene = {\n      name: \"Scene\",\n      id: totalScenes + 1,\n    };\n    setScenes(scenes => [...scenes, newScene]);\n    setTotalScenes(totalScenes + 1);\n    props.getAllScenes(scenes);\n  }\n\n  function updateSceneName(name) {\n    let id = name[0];\n    let newName = name[1];\n\n    for (var i = 0; i < scenes.length; i++) {\n      if (scenes[i].id == id) {\n        scenes[i].name = newName;\n      }\n    }\n\n    setScenes(scenes => [...scenes]);\n    props.getAllScenes(scenes);\n  }\n\n  function updateActiveOption(value) {\n    var el = document.querySelectorAll(\".Scenes-scene\");\n\n    for (let i = 0; i < el.length; i++) {\n      el[i].classList.remove(\"active\");\n    }\n\n    document.getElementById(\"Scenes-sceneId-\" + value.id).classList.add(\"active\");\n\n    props.selectedScene ? props.selectedScene(value) : {};\n  }\n\n  return (\n    <div className=\"Scenes\">\n      {scenes.map(\n        (value, index) => (\n          <div\n            id={\"Scenes-sceneId-\" + value.id}\n            className=\"Scenes-scene\"\n            key={index}\n            onClick={() => updateActiveOption(value)}\n          >\n            <EditableField name={value.name} id={value.id} fontSize={16} getScriptName={updateSceneName} />\n          </div>\n        )\n      )}\n\n      <div className=\"Scenes-addScene Scenes-scene\" onClick={() => addNewScene()}>\n        +\n      </div>\n    </div>\n  );\n}\n\nexport default Scenes;\n","import React, { useRef } from 'react';\nimport Firebase from \"../../firebase/firebase.js\";\n\nimport \"./FilePicker.css\"\n\nconst FilePicker = (props) => {\n  const fileInput = useRef(null);\n\n  const handleFileSelect = (event) => {\n    const file = event.target.files[0];\n    const storageRef = Firebase.storage().ref(props.msgType.replace(/ /g, \"\") + \"/\");\n    const fileRef = storageRef.child(file.name);\n    fileRef.put(file).then(() => {\n      fileRef.getDownloadURL().then(url => {\n        props.getImgURL(url)\n      });\n    });\n  }\n  return (\n    <div className=\"FilePicker\">\n        <span>{props.msgType}</span>\n        <input\n          type=\"file\"\n          ref={fileInput}\n          onChange={handleFileSelect}\n        />\n    </div>\n  );\n}\n\nexport default FilePicker;\n","import React from 'react';\nimport { Recorder } from 'react-voice-recorder';\nimport Firebase from \"../../firebase/firebase.js\";\n\nimport './RecordModal.css';\nimport \"react-voice-recorder/dist/index.css\";\n\nfunction RecordModal(props) {\n  const [isRecording, setIsRecording] = React.useState(false);\n  const [audioUrl, setAudioUrl] = React.useState(null);\n\n  function handleStartRecording() {\n    setIsRecording(true);\n  }\n\n  function handleStopRecording(blob) {\n    setIsRecording(false);\n    setAudioUrl(blob.blobURL);\n    const milliseconds = Math.floor(Date.now() / 1000)\n    const storageRef = Firebase.storage().ref(\"VoiceNotes/\" + milliseconds);\n\n    // Upload the audio to Firebase\n    const audioFile = new File([blob.blob], milliseconds.toString()+'audio.mp3', {\n        type: 'audio/mp3',\n        metadata: {\n            cors: [{\n              origin: ['http://localhost:19006'],\n            }],\n        },\n    });\n\n    storageRef.put(audioFile).then(snapshot => {\n        snapshot.ref.getDownloadURL().then(url => {\n            props.getVNURL(url)\n        });\n    });\n\n  }\n\n  return (\n    <div className=\"RecordModal\">\n      {isRecording ? (\n        <div className=\"RecordModal-modalPopup\">\n            <Recorder handleAudioStop={handleStopRecording} />\n        </div>\n      ) : (\n        <button onClick={handleStartRecording} className=\"RecordModal-recordBbutton\">\n          Start recording\n        </button>\n      )}\n      {audioUrl && (\n        <div>\n          <audio src={audioUrl} controls />\n        </div>\n      )}\n    </div>\n  );\n}\n\nexport default RecordModal;","import React from \"react\";\nimport FilePicker from \"../FilePicker/FilePicker.js\"\nimport RecordModal from \"../RecordModal/RecordModal.js\"\n\nimport \"./MsgTypes.css\";\n\nfunction MsgTypes(props) {\n  let msgTypes = [\n    \"Is Typing\",\n    \"Left Chat\",\n  ];\n\n  return (\n    <div className=\"MsgTypes\">\n      <div\n        className={\"MsgTypes-name\"}\n        onClick={() => props.grabScreenshot()}\n      >\n        Screen Shot\n      </div>\n      <div className={\"MsgTypes-name\"}>\n        <FilePicker\n          msgType=\"Insert Image\"\n          getImgURL={props.getInsertedImg}\n        />\n      </div>\n      <div className={\"MsgTypes-name\"}>\n        <RecordModal\n          msgType=\"Voice Note\"\n          getVNURL={props.getVNURL}\n        />\n      </div>\n      <div className={\"MsgTypes-name\"}>\n        <FilePicker\n          msgType=\"Upload Video\"\n          getImgURL={props.getUplodedVideo}\n        />\n      </div>\n      {msgTypes.map((value, index) => (\n        <div\n          id={\"MsgTypes-id-\" + index}\n          className={\"MsgTypes-name\"}\n          key={index}\n          onClick={() => props.selectedMsgType ? props.selectedMsgType(value) : {}}\n        >\n          {value}\n        </div>\n      ))}\n    </div>\n  );\n}\n\nexport default MsgTypes;\n","import React from \"react\";\n\nimport \"./TimeInput.css\";\n\nfunction TimeInput(props){\n    const [value, setValue] = React.useState(\"0:00\");\n\n    const onChange = (event) => {\n      setValue(event.target.value);\n    };\n\n    const onBlur = (event) => {\n      const value = event.target.value;\n      const seconds = Math.max(0, getSecondsFromHHMMSS(value));\n\n      props.inputTime(seconds)\n\n      const time = toHHMMSS(seconds);\n      setValue(time);\n    };\n\n    const getSecondsFromHHMMSS = (value) => {\n      const [str1, str2, str3] = value.split(\":\");\n\n      const val1 = Number(str1);\n      const val2 = Number(str2);\n      const val3 = Number(str3);\n\n      if (!isNaN(val1) && isNaN(val2) && isNaN(val3)) {\n        return val1;\n      }\n\n      if (!isNaN(val1) && !isNaN(val2) && isNaN(val3)) {\n        return val1 * 60 + val2;\n      }\n\n      if (!isNaN(val1) && !isNaN(val2) && !isNaN(val3)) {\n        return val1 * 60 * 60 + val2 * 60 + val3;\n      }\n\n      return 0;\n    };\n\n    const toHHMMSS = (secs) => {\n      const secNum = parseInt(secs.toString(), 10);\n      const hours = Math.floor(secNum / 3600);\n      const minutes = Math.floor(secNum / 60) % 60;\n      const seconds = secNum % 60;\n\n      return [hours, minutes, seconds]\n        .map((val) => (val < 10 ? `0${val}` : val))\n        .filter((val, index) => val !== \"00\" || index > 0)\n        .join(\":\")\n        .replace(/^0/, \"\");\n    };\n\n    if(props.spslm){\n        setValue(props.spslm)\n    }\n\n    return (\n        <input\n            className=\"TimeInput\"\n            type=\"text\"\n            onChange={onChange}\n            onBlur={onBlur}\n            value={value}\n        />\n    );\n};\n\nexport default TimeInput;","import React, { useState } from 'react';\nimport TextField from \"@material-ui/core/TextField\";\n\nimport \"./CommentedPopup.css\"\n\nfunction CommentedPopup(props) {\n  const [isVisible, setIsVisible] = useState(false);\n  const [inputValue, setInputValue] = useState(props.alreadySavedValue);\n\n  const handleShow = () => {\n    setIsVisible(true);\n  };\n\n  const handleSave = () => {\n    props.onSave(inputValue, props.idOfMsgCommented, props.whoSentCommentedMsg);\n    setIsVisible(false);\n  };\n\n  const handleClose = () => {\n    setIsVisible(false);\n  };\n\n  const handleInputChange = (event) => {\n    setInputValue(event.target.value);\n  };\n\n  return (\n    <div className=\"parent-element\">\n      {isVisible && (\n        <div id=\"popup\">\n          <div id=\"popup-content\">\n            <TextField\n              variant=\"outlined\"\n              value={inputValue}\n              placeholder=\"Type comment here\"\n              onChange={e => handleInputChange(e)}\n              multiline\n              minRows={4}\n            />\n            <button id=\"save\" onClick={handleSave}>Save</button>\n            <button id=\"close\" onClick={handleClose}>&times;</button>\n          </div>\n        </div>\n      )}\n      <button id=\"commented-button\" onClick={handleShow}>comment</button>\n    </div>\n  );\n}\n\nexport default CommentedPopup;\n","import React, { Component } from \"react\";\nimport TextField from \"@material-ui/core/TextField\";\nimport { connect } from \"react-redux\";\nimport { withRouter } from \"react-router-dom\";\nimport Script from \"../Script/Script.js\";\nimport EditableField from \"../EditableField/EditableField\";\nimport CastMembers from \"../CastMembers/CastMembers\";\nimport Scenes from \"../Scenes/Scenes\";\nimport MsgTypes from \"../MsgTypes/MsgTypes\";\nimport Button from \"@material-ui/core/Button\";\nimport TimeInput from \"../TimeInput/TimeInput.js\"\nimport CommentedPopup from \"../CommentedPopup/CommentedPopup.js\"\nimport html2canvas from 'html2canvas';\nimport Firebase from \"../../firebase/firebase\";\n\nimport \"./EditScript.css\";\n\nclass ConnectedEditScript extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      animateGreeting: \"EditScript-animategreeting\",\n      orderId: \"\",\n      script: props.script ? props.script : null,\n      isNewScript: props.isNewScript,\n      selectedCastId: 1,\n      selectedSceneId: 1,\n      selectedMsgType: \"\",\n      timeSinceLastMsg: \"\",\n      textMsg: \"\",\n      emotion: \"\",\n      allMessages: [],\n      spslm: 0,\n      likedByMap:  props.script ? props.script.getOnlyLikedMsgsAsNodes() : new Map(),\n    };\n  }\n\n  componentWillUnmount() {\n    clearInterval(this.intervalId);\n  }\n\n  componentDidMount() {\n    //hack: use this to fix github pages doing ?/ on pages\n    if (window.location.href.includes(\"?/\")){\n      let actualDestination = window.location.href.split(\"?/\")[1]\n\n      this.props.history.push({\n        pathname: \"/\" + actualDestination\n      });\n    }\n    \n    //TODO do this better\n    if (!this.state.isNewScript){\n      let scriptId = window.location.pathname.replaceAll(\"/editscript/\", \"\")\n\n      if(scriptId != \"\"){\n        var textyng = new Script(scriptId);\n        textyng.grabScriptFromFirebase(scriptId)\n        .then(() => {\n          this.setState({\n            script: textyng,\n            likedByMap: this.generateLikedMap(textyng.getOnlyLikedMsgsAsNodes())\n          })\n        })\n      }\n    }else{\n      this.setState({likedByMap: this.state.script.getOnlyLikedMsgsAsNodes()})\n    }\n\n    this.intervalId = setInterval(() => {\n      this.setState({ spslm: this.state.spslm + 1 });\n    }, 1000);\n  }\n\n  generateLikedMap(likedMessages){\n    let map = new Map();\n\n    for (let obj of likedMessages) {\n      let key = `${obj.msgLikedId}${obj.msgLikedSenderId}`;\n      map.set(key, true);\n    }\n\n    return map\n  }\n\n  getScriptName = (name) => {\n    this.state.script.updateScriptName(name[1])\n  }\n\n  getAllCast = (cast) => {\n    this.state.script.updateCast(cast)\n  }\n\n  getAllScenes = (scenes) => {\n    this.state.script.updateScene(scenes)\n  }\n\n  getSelectedCast = (cast) => {\n    this.setState({selectedCastId: cast.id}, () => {\n      this.setState({allMessages: this.state.script.getOnlyTextMsgsAsNodes()})\n    })\n  }\n\n  getSelectedScene = (scene) => {\n    this.setState({selectedSceneId: scene.id}, () => {\n      this.setState({allMessages: this.state.script.getOnlyTextMsgsAsNodes()})\n    })\n  }\n\n  getSelectedMsgType = (value) => {\n    this.setState({ textMsg: value}, () => {\n      this.addNewMessage()\n    });\n  }\n\n  alreadyBeenLikedByselectedCastId = (messageId) => {\n    let likedMsgID = `${messageId}${this.state.selectedCastId}`\n\n    if(this.state.likedByMap.has(likedMsgID)){\n      return this.state.likedByMap.get(likedMsgID)\n    }\n    return false\n  }\n\n  deleteLikedMessage(messageId, whoLikedMsg){\n    this.setState({\n      likedByMap: this.state.likedByMap.set(`${messageId}${whoLikedMsg}`, false)\n    })\n\n    let allMessages = this.state.script.getOnlyLikedMsgsAsNodes()\n    const result = allMessages.find(obj => obj.idOfMsgLiked === messageId && obj.whoLikedMsg === whoLikedMsg);\n\n    if(result.id){\n      this.deleteMessage(result.id)\n    }\n  }\n\n  addNewLikeMsg = (messageId, senderId) => {\n    if(!this.alreadyBeenLikedByselectedCastId(messageId)){\n\n      var milliseconds = Math.floor(Date.now() / 1000)\n\n      let tslmsg = this.state.timeSinceLastMsg\n      if(tslmsg == \"\" || tslmsg == 0){\n        tslmsg = this.state.spslm\n      }\n      let msgData = {\n        id: milliseconds,\n        timeStamp: milliseconds,\n        msgType: \"like\",\n        whoSentLikedMsg: senderId,\n        idOfMsgLiked: messageId,\n        whoLikedMsg: this.state.selectedCastId,\n        tslmsg: tslmsg,\n        sceneId: this.state.selectedSceneId\n      }\n      this.state.script.addNewMessage(msgData)\n\n      let updatedLikedByMap = new Map(this.state.likedByMap);\n      updatedLikedByMap.set(`${messageId}${this.state.selectedCastId}`, true);\n\n      this.setState({\n        likedByMap: updatedLikedByMap,\n        allMessages: this.state.script.getOnlyTextMsgsAsNodes(),\n        spslm: 0,\n      })\n    }else{\n      this.deleteLikedMessage(messageId, this.state.selectedCastId)\n    }\n  }\n\n  addNewMessage = () => {\n    var milliseconds = Math.floor(Date.now() / 1000)\n\n    let tslmsg = this.state.timeSinceLastMsg\n    if(tslmsg == \"\" || tslmsg == 0){\n      tslmsg = this.state.spslm\n    }\n\n    let msgData = {\n      id: milliseconds,\n      timeStamp: milliseconds,\n      content: this.state.textMsg,\n      emotion: this.state.emotion,\n      senderId: this.state.selectedCastId,\n      tslmsg: tslmsg,\n      msgType: \"textMsg\",\n      sceneId: this.state.selectedSceneId,\n    }\n\n    this.state.script.addNewMessage(msgData)\n    this.setState({\n      allMessages: this.state.script.getOnlyTextMsgsAsNodes(),\n      textMsg: \"\",\n      emotion: \"\",\n      spslm: 0,\n    })\n  }\n\n  addNewMsgComment = (comment, idOfMsgCommented, whoSentCommentedMsg) => {\n    var milliseconds = Math.floor(Date.now() / 1000)\n\n    let tslmsg = this.state.timeSinceLastMsg\n    if(tslmsg == \"\" || tslmsg == 0){\n      tslmsg = this.state.spslm\n    }\n\n    let msgData = {\n      id: milliseconds,\n      timeStamp: milliseconds,\n      msgType: \"comment\",\n      content: comment,\n      emotion: this.state.emotion,\n      whoSentCommentedMsg: whoSentCommentedMsg,\n      idOfMsgCommented: idOfMsgCommented,\n      whoCommentedMsg: this.state.selectedCastId,\n      tslmsg: tslmsg,\n      sceneId: this.state.selectedSceneId\n    }\n\n    this.state.script.addNewMessage(msgData)\n    this.setState({\n      allMessages: this.state.script.getOnlyTextMsgsAsNodes(),\n      textMsg: \"\",\n      emotion: \"\",\n      spslm: 0,\n    })\n  }\n\n  addNewMediaMsg = (mediaType, mediaURL, isImg, isAudio, isVideo) => {\n\n    var milliseconds = Math.floor(Date.now() / 1000)\n\n    let tslmsg = this.state.timeSinceLastMsg\n    if(tslmsg == \"\" || tslmsg == 0){\n      tslmsg = this.state.spslm\n    }\n\n    let msgData = {\n      id: milliseconds,\n      timeStamp: milliseconds,\n      content: mediaType,\n      emotion: this.state.emotion,\n      senderId: this.state.selectedCastId,\n      tslmsg: tslmsg,\n      isImg: isImg,\n      isAudio: isAudio,\n      isVideo: isVideo,\n      msgType: \"textMsg\",\n      url: mediaURL,\n      sceneId: this.state.selectedSceneId\n    }\n\n    this.state.script.addNewMessage(msgData)\n    this.setState({\n      allMessages: this.state.script.getOnlyTextMsgsAsNodes(),\n      textMsg: \"\",\n      emotion: \"\",\n      spslm: 0,\n    })\n  }\n\n  componentDidUpdate(){\n    if(this.state.script){\n      this.state.script.updateScriptFirebase()\n    }\n  }\n\n  getInputTime = (timeInSeconds) => {\n    this.setState({\n      timeSinceLastMsg: timeInSeconds,\n    })\n  }\n\n  deleteMessage = (id) => {\n    this.state.script.deleteMessage(id)\n    this.setState({allMessages: this.state.script.getOnlyTextMsgsAsNodes()},\n    () => {\n        this.state.script.updateScriptFirebase()\n    });\n  }\n\n  onSaveComment = (message, idOfMsgCommented, whoSentCommentedMsg) => {\n    let existingCommentNode = this.state.script.getCommentNodeByCastIdMsgId(this.state.selectedCastId, idOfMsgCommented)\n    if(existingCommentNode != nil){\n      this.state.script.editNodeContent(existingCommentNode.id, message)\n    }else{\n      this.addNewMsgComment(message, idOfMsgCommented, whoSentCommentedMsg)\n    }\n  }\n\n  grabScreenshot = (url) => {\n    const element = document.getElementById('EditScript-chatArea-id');\n\n    html2canvas(element).then(canvas => {\n      const imageData = canvas.toDataURL();\n      const milliseconds = Math.floor(Date.now() / 1000)\n      const storageRef = Firebase.storage().ref(\"ScreenShot/\" + milliseconds);\n      storageRef.putString(imageData, 'data_url').then(snapshot => {\n        snapshot.ref.getDownloadURL().then(downloadURL => {\n          console.log(`Image URL: ${downloadURL}`);\n          this.addNewMediaMsg(\"ScreenShot\", downloadURL, true, false, false)\n        });\n      });\n    });\n  }\n\n  getInsertedImg = (url) => {\n    console.log(\"url\", url)\n    this.addNewMediaMsg(\"InsertImage\", url, true, false, false)\n  }\n\n  getUplodedVideo = (url) => {\n    console.log(\"url\", url)\n    this.addNewMediaMsg(\"UploadedVideo\", url, false, false, true)\n  }\n\n  getVNURL = (url) => {\n    console.log(\"url\", url)\n    this.addNewMediaMsg(\"VoiceNote\", url, false, true, false)\n  }\n\n  render() {\n    if(this.state.script){\n        return (\n            <div className=\"EditScript\">\n                <div className=\"EditScript-container l-container\">\n                    <div className=\"EditScript-title\">\n                      <EditableField\n                        name={this.state.script.getScriptName()}\n                        getScriptName={this.getScriptName}\n                      />\n                    </div>\n                    <div className=\"EditScript-scenes\">\n                      <Scenes\n                        scenes = {this.state.script.getAllScenes()}\n                        selectedScene={this.getSelectedScene}\n                        getAllScenes={this.getAllScenes}\n                      />\n                    </div>\n                    <div className=\"EditScript-cast\">\n                      <CastMembers\n                        cast = {this.state.script.getAllCast()}\n                        selectedCast={this.getSelectedCast}\n                        getAllCast={this.getAllCast}\n                      />\n                    </div>\n                    <div className=\"EditScript-textView\">\n                      <MsgTypes\n                        grabScreenshot = {this.grabScreenshot}\n                        getInsertedImg = {this.getInsertedImg}\n                        selectedMsgType = {this.getSelectedMsgType}\n                        getUplodedVideo = {this.getUplodedVideo}\n                        getVNURL = {this.getVNURL}\n                      />\n                      <div id=\"EditScript-chatArea-id\" className=\"EditScript-chatArea\">\n                        {this.state.allMessages.length == 0 &&\n                          <span className=\"EditScript-castMemberPrompt\">click on a cast member to see messages</span>\n                        }\n                        {this.state.allMessages.map((value, index) => (\n                          (value.sceneId == this.state.selectedSceneId)\n                          &&\n                          <DynamicClassAssignment key={index} isActive={value.senderId == this.state.selectedCastId} value={value} index={index} >\n                            {value.isImg &&\n                              <img\n                                className=\"EditScript-imgMsg\"\n                                src={value.url}\n                              />\n                            }\n                            {value.isAudio &&\n                              <audio\n                                className=\"EditScript-audioMsg\"\n                                src={value.url}\n                                controls\n                              />\n                            }\n                            {value.isVideo &&\n                              <video\n                                className=\"EditScript-videoMsg\"\n                                src={value.url}\n                                controls\n                              />\n                            }\n                            <div>\n                              <span className=\"EditScript-msgIndex\">{value.MsgIndex}</span>\n                              <span className=\"EditScript-senderName\">{this.state.script.getSenderNameFromID(value.senderId)}</span>\n                              <span className=\"EditScript-senderEmotion\">{value.emotion ? '('+value.emotion + ')': ''}</span>\n                              <span>{value.content}</span>\n                            </div>\n                            <div className=\"EditScript-chatArea-msg-buttons\">\n                              <button className=\"EditScript-chatArea-msg-button\" onClick={() => this.deleteMessage(value.id)}>Delete</button>\n                              <button className=\"EditScript-chatArea-msg-button\" onClick={() => this.addNewLikeMsg(value.id, value.senderId)}>{this.alreadyBeenLikedByselectedCastId(value.id) ? \"Unlike\" : \"Like\"}</button>\n                              <CommentedPopup\n                                className=\"EditScript-chatArea-msg-button\"\n                                idOfMsgCommented={value.id}\n                                whoSentCommentedMsg={value.senderId}\n                                onSave={this.onSaveComment}\n                                alreadySavedValue={this.state.script.getCommentByCastIdMsgId(this.state.selectedCastId, value.id)}\n                              />\n                            </div>\n                          </DynamicClassAssignment>\n                        ))}\n                      </div>\n\n                      <div className=\"EditScript-sendMessage\">\n                        <TextField\n                          variant=\"outlined\"\n                          className=\"EditScript-sendMessage--input\"\n                          value={this.state.textMsg}\n                          placeholder=\"Type message here\"\n                          onChange={e => {\n                            this.setState({ textMsg: e.target.value });\n                          }}\n                        />\n\n                        <TextField\n                          variant=\"outlined\"\n                          className=\"EditScript-emotions--input\"\n                          value={this.state.emotion}\n                          placeholder=\"Type emotion here\"\n                          onChange={e => {\n                            this.setState({ emotion: e.target.value });\n                          }}\n                        />\n\n                        <TimeInput inputTime={this.getInputTime} />\n                      </div>\n                      \n\n                      <div className=\"EditScript-saveSubmit\">\n                        <div>\n                          <Button\n                            className=\"EditScript-saveSubmit--send\"\n                            variant=\"outlined\"\n                            color=\"primary\"\n                            onClick={() => this.addNewMessage()}\n                          >\n                            Send\n                          </Button>\n                        </div>\n                        <div>\n                          <Button\n                            className=\"EditScript-saveSubmit--save\"\n                            variant=\"outlined\"\n                            color=\"primary\"\n                            onClick={() => this.state.script.updateScriptFirebase()}\n                          >\n                            save\n                          </Button>\n                        </div>\n                      </div>\n                    </div>\n                </div>\n            </div>\n        );\n    }else{\n        return (\n            <div className=\"is-loading\">script loading...</div>\n        )\n    }\n  }\n}\n\nconst mapStateToProps = (state) => {\n  return {};\n};\n\nlet EditScript = withRouter(connect(mapStateToProps)(ConnectedEditScript));\nexport default withRouter(EditScript);\n\n\nconst DynamicClassAssignment = (props) =>{\n\n    if(props.isActive){\n        return (\n            <div className={\"EditScript-chatArea-msg active\"}>\n                {props.children}\n            </div>\n        );\n    }else{\n        return (\n            <div className={\"EditScript-chatArea-msg\"}>\n                {props.children}\n            </div>\n        );\n    }\n  }","import React, { Component } from \"react\";\nimport { connect } from \"react-redux\";\nimport { withRouter } from \"react-router-dom\";\nimport Script from \"../Script/Script.js\";\nimport EditScript from \"../EditScript/EditScript.js\";\n\nvar textyng = new Script(\"NewScript\");\n\nimport \"./NewScript.css\";\n\nclass ConnectedNewScript extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      script: textyng,\n    };\n  }\n\n  render() {\n    return (\n        <div className=\"NewScript\">\n          <EditScript isNewScript={true} script={this.state.script} />\n        </div>\n    );\n  }\n}\n\nconst mapStateToProps = (state) => {\n  return {};\n};\n\nlet NewScript = withRouter(connect(mapStateToProps)(ConnectedNewScript));\nexport default withRouter(NewScript);\n","import React, { Component } from \"react\";\nimport { connect } from \"react-redux\";\nimport { withRouter } from \"react-router-dom\";\nimport Script from \"../Script/Script.js\";\nimport { Emoji } from 'emoji-mart'\n\nimport \"./ReaderView.css\";\n\nclass ConnectedReaderView extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      script: null,\n      allMessages: [],\n      currentNodeIndex: 0,\n      selectedSceneId: 1,\n      timeoutId: null,\n      isPlaying: true,\n    };\n\n    this.emojis = [\n      {name: \"exploding_head\", set: \"twitter\", size: 14, className: \"ReaderView-reactionEmoji\"},\n      {name: \"relaxed\", set: \"twitter\", size: 14, className: \"ReaderView-reactionEmoji\"},\n      {name: \"astonished\", set: \"twitter\", size: 14, className: \"ReaderView-reactionEmoji\"},\n      {name: \"pensive\", set: \"twitter\", size: 14, className: \"ReaderView-reactionEmoji\"},\n      {name: \"angry\", set: \"twitter\", size: 14, className: \"ReaderView-reactionEmoji\"},\n      {name: \"scream\", set: \"twitter\", size: 14, className: \"ReaderView-reactionEmoji\"},\n      {name: \"kissing_heart\", set: \"twitter\", size: 14, className: \"ReaderView-reactionEmoji\"},\n      {name: \"rolling_on_the_floor_laughing\", set: \"twitter\", size: 14, className: \"ReaderView-reactionEmoji\"},\n    ]\n  }\n\n  componentDidMount() {\n    let scriptId = this.props.match.params.id\n    if (scriptId == \"\") {\n      scriptId = \"NewScript1674709550\"\n    }\n\n    let textyng = new Script(scriptId);\n    textyng\n      .grabScriptFromFirebase(scriptId)\n      .then(() => {\n        this.setState({ script: textyng }, () => {\n          this.updateCurrentNode();\n          this.startAutoPlay();\n        });\n      });\n  }\n\n  updateCurrentNode(index = 1) {\n    if (!this.state.script) {\n      return;\n    }\n    let sceneId = this.state.script.getNthMessageNode(index).sceneId;\n    if (sceneId === undefined) {\n        sceneId = this.state.script.getTotalNumScenes();\n    }\n    this.setState({\n        currentNodeIndex: index,\n        allMessages: this.state.script.getAllMessagesAsNodes().slice(0, index),\n        selectedSceneId: sceneId\n    });\n  }\n\n  startAutoPlay() {\n    if (this.state.isPlaying) {\n      this.setState({\n        timeoutId: setTimeout(() => {\n          this.handleNextClick();\n        }, this.state.script.getNthMessageNode(this.state.currentNodeIndex).tslmsg * 20)\n      });\n    }\n  }\n\n  handlePreviousClick = () => {\n    // check if script is null\n    if (!this.state.script) {\n        return;\n    }\n    clearTimeout(this.state.timeoutId);\n    this.setState(prevState => {\n        if (prevState.currentNodeIndex === 0) {\n            return {}; // no further action needed\n        }\n        let prevNodeIndex = prevState.currentNodeIndex - 1;\n        let sceneId = this.state.script.getNthMessageNode(prevNodeIndex).sceneId;\n        if (sceneId === undefined) {\n            sceneId = this.state.script.getTotalNumScenes();\n        }\n        let newAllMessages = prevState.allMessages.slice();\n        if (prevState.allMessages.length === 1) {\n            newAllMessages = prevState.allMessages; // don't update to an empty array\n        } else {\n            newAllMessages = this.state.script.getAllMessagesAsNodes().slice(0, prevNodeIndex);\n        }\n        return {\n            currentNodeIndex: prevNodeIndex,\n            allMessages: newAllMessages,\n            selectedSceneId: sceneId\n        };\n    });\n};\n\n\n  handlePlayPauseClick = () => {\n    clearTimeout(this.state.timeoutId);\n    this.setState(prevState => ({ isPlaying: !prevState.isPlaying }));\n  };\n\n  handleNextClick = () => {\n    clearTimeout(this.state.timeoutId);\n    this.updateCurrentNode(this.state.currentNodeIndex + 1);\n    this.startAutoPlay();\n  };\n\n  getScriptName = (name) => {\n    return name[1]\n  }\n\n  selectThisScene = (sceneId) => {\n    this.setState({\n      selectedSceneId: sceneId,\n      allMessages: this.state.script.getAllMessagesAsNodes(),\n    })\n  }\n\n  reactionClicked = (emojiName, messageId, event) => {\n    event.currentTarget.classList.add('shake');\n    this.state.script.updateReaderReaction(emojiName, messageId)\n  }\n\n  getReaderReactionFromMsg = () => {\n    let reactionArray = [];\n    this.state.allMessages.forEach(message => {\n      if(this.state.script.getReaderReactionMap().has(message.id.toString())) {\n        reactionArray.push(...this.state.script.getReaderReactionMap().get(message.id.toString()));\n      }\n    });\n\n    let readerEmojiReactions = reactionArray.map((emoji, index) => (\n      <Emoji\n        emoji={emoji}\n        set={\"twitter\"}\n        size={14}\n        key={index}\n        className=\"ReaderView-reactionEmoji\"\n      />\n    ));\n\n    return readerEmojiReactions\n  }\n\n  render() {\n\t\tif(this.state.allMessages && this.state.allMessages.length > 0){\n\t\t\treturn (\n        <div className=\"ReaderView\">\n          <div className=\"ReaderView-container l-container\">\n            <div className=\"ReaderView-title\">\n              {this.state.script.getScriptName()}\n            </div>\n            <div className=\"ReaderView-scenes\">\n              {this.state.script.getScenes()\n              .map((scene, index) =>\n                scene.id == this.state.selectedSceneId ? (\n                  <div key={index} onClick={() => this.selectThisScene(scene.id)} className=\"ReaderView-scene ReaderView-scene--currentScene\">\n                    {scene.name}\n                  </div>\n                ) : (\n                  <div key={index} onClick={() => this.selectThisScene(scene.id)} className=\"ReaderView-scene\">\n                    {scene.name}\n                  </div>\n                )\n              )}\n            </div>\n            <div className=\"ReaderView-textView\">\n              <div id=\"ReaderView-chatArea-id\" className=\"ReaderView-chatArea\">\n                {this.state.allMessages\n                .map((message, index) => (\n                  (message.sceneId == this.state.selectedSceneId)\n                  &&\n                  <div key={index} className=\"ReaderView-chatArea-msg\">\n                    {message.isImg &&\n                      <img\n                        className=\"ReaderView-imgMsg\"\n                        src={message.url}\n                      />\n                    }\n                    {message.isAudio &&\n                      <audio\n                        className=\"ReaderView-audioMsg\"\n                        src={message.url}\n                        controls\n                      />\n                    }\n                    {message.isVideo &&\n                      <video\n                        className=\"ReaderView-videoMsg\"\n                        src={message.url}\n                        controls\n                      />\n                    }\n                    {message.msgType == \"like\" &&\n                      <div\n                        className=\"ReaderView-msgLike\"\n                      >\n                        <span>\n                          {this.state.script.getSenderNameFromID(message.whoLikedMsg)}&nbsp;\n                          liked message&nbsp;\n                          {this.state.script.getNodeByMessageId(message.idOfMsgLiked).data.MsgIndex}&nbsp;\n                          by&nbsp;\n                          {this.state.script.getSenderNameFromID(message.whoSentLikedMsg)}&nbsp;\n                        </span>\n                      </div>\n                    }\n                    <div>\n                      <span className=\"ReaderView-msgIndex\">{message.MsgIndex}</span>\n                      <span className=\"ReaderView-senderName\">{this.state.script.getSenderNameFromID(message.senderId)}</span>\n                      <span className=\"ReaderView-senderEmotion\">{message.emotion ? '('+message.emotion + ')': ''}</span>\n                      <span>{message.content}</span>\n\n                      <div className=\"ReaderView-reactionEmojis\">\n                        {this.emojis.map((emoji, index)=> \n                          <div\n                            key={index}\n                            className=\"ReaderView-reactionEmoji\"\n                            onClick={(e) => this.reactionClicked(emoji.name, message.id, e)}\n                          >\n                            <Emoji \n                              emoji={emoji.name}\n                              set={emoji.set} \n                              size={emoji.size} \n                              key={emoji.name} \n                              className=\"ReaderView-reactionEmoji\"\n                            />\n                          </div>\n                        )}\n                      </div>\n                    </div>\n                  </div>\n                ))}\n              </div>\n            </div>\n            <div className=\"ReaderView-readerReaction--wrapper\">\n              <span>audience:</span> \n              <span className=\"ReaderView-readerReaction\"> {this.getReaderReactionFromMsg()}</span>                       \n            </div>\n            <div className=\"ReaderView-navigation\">\n              <div className=\"ReaderView-navigation--wrapper\">\n                <div className=\"previous-button\" onClick={this.handlePreviousClick}>\n                  <i className=\"fas fa-arrow-left\"></i>\n                </div>\n                <div className=\"play-pause-button\" onClick={this.handlePlayPauseClick}>\n                  {this.state.isPlaying ? \n                    <i className=\"fas fa-pause\"></i> : \n                    <i className=\"fas fa-play\"></i>\n                  }\n                </div>\n                <div className=\"next-button\" onClick={this.handleNextClick}>\n                  <i className=\"fas fa-arrow-right\"></i>\n                </div>\n              </div>\n            </div>\n          </div>\n        </div>\n    \t);\n\t\t}else{\n\t\t\treturn (\n        <div className=\"ReaderView is-loading\">\n\t\t\t\t\trytriving script\n        </div>\n    \t);\n\t\t}\n  }\n}\n\nconst mapStateToProps = (state) => {\n  return {};\n};\n\nlet ReaderView = withRouter(connect(mapStateToProps)(ConnectedReaderView));\nexport default withRouter(ReaderView);\n","import React, { Component } from 'react';\nimport { connect } from \"react-redux\";\nimport { withRouter } from \"react-router-dom\";\n\nimport './HomePage.css';\n\nclass ConnectedHomePage extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      leftText: '',\n      rightText: '',\n      leftCounter: 0,\n      rightCounter: 0,\n    };\n  }\n\n  componentDidMount() {\n    this.typeWriter();\n  }\n\n  typeWriter = () => {\n    const { leftText, rightText, leftCounter, rightCounter } = this.state;\n    const leftMessage = 'ryting';\n    const rightMessage = 'ryeading?';\n\n    if (leftCounter < leftMessage.length) {\n      this.setState({\n        leftText: leftText + leftMessage.charAt(leftCounter),\n        leftCounter: leftCounter + 1,\n      });\n    }\n\n    if (rightCounter < rightMessage.length) {\n      this.setState({\n        rightText: rightText + rightMessage.charAt(rightCounter),\n        rightCounter: rightCounter + 1,\n      });\n    }\n\n    setTimeout(this.typeWriter, 150);\n  };\n\n  render() {\n    const { leftText, rightText } = this.state;\n    return (\n      <div className=\"HomePage\">\n        <div className=\"HomePage__left-side\">\n          <div className=\"HomePage__left-side-a\" onClick={() => this.props.changePage(\"newscript\")}>\n            <h1 className=\"HomePage__text HomePage__text--glossy\">{leftText}</h1>\n          </div>\n        </div>\n        <div className=\"HomePage__demarcation\">\n          <div className=\"HomePage-or\">or</div>\n        </div>\n        <div className=\"HomePage__right-side\">\n          <div className=\"HomePage__right-side-a\" onClick={() => this.props.changePage(\"searchscripts\")}>\n            <h1 className=\"HomePage__text HomePage__text--glossy\">{rightText}</h1>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = (state) => {\n  return {};\n};\n\nlet HomePage = withRouter(connect(mapStateToProps)(ConnectedHomePage));\nexport default withRouter(HomePage);\n\n","import React, { Component } from 'react';\nimport { connect } from \"react-redux\";\nimport { withRouter } from \"react-router-dom\";\nimport Firebase from \"../../firebase/firebase\";\n\nimport \"./SearchScripts.css\";\n\nclass ConnectedSearchScripts extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            searchBarUp: false,\n            results: [],\n            searchTerm: \"\",\n            scripts: [],\n        };\n        this.handleFocus = this.handleFocus.bind(this);\n        this.handleBlur = this.handleBlur.bind(this);\n        this.handleSearch = this.handleSearch.bind(this);\n        this.selectResult = this.selectResult.bind(this);\n    }\n\n    componentDidMount(){\n       Firebase.getScripts().then( val => {\n        this.setState({\n            scripts: val,\n            results: val\n        })\n       })\n    }\n\n\n    handleSearch(e) {\n        this.setState({\n            searchTerm: e.target.value,\n        });\n\n        if (this.state.scripts) {\n            const results = this.state.scripts.filter((item) =>\n            item.name.toLowerCase().includes(e.target.value.toLowerCase())\n            )\n            this.setState({ results });\n        } else {\n            console.log('data is not defined');\n        }\n\n        if(e.target.value == \"\"){\n            this.setState({ results: this.state.scripts });\n        }\n    }\n\n    handleFocus() {\n        this.setState({ searchBarUp: true });\n    }\n\n    handleBlur() {\n        if(!this.state.results.length){\n            this.setState({ searchBarUp: false });\n        }\n    }\n\n    selectResult(id) {\n        this.props.history.push({\n            pathname: `/readerview/${id}`\n        });\n    }\n\n    render() {\n    return (\n        <div className=\"search-scripts\">\n        <div className=\"search-bar\" style={{ top: this.state.searchBarUp ? \"-25%\" : \"-15%\" }}>\n            <input type=\"text\" placeholder=\"what are you ryeading?\" onChange={this.handleSearch} onFocus={this.handleFocus} onBlur={this.handleBlur} />\n        </div>\n        <div className=\"search-results\">\n            {this.state.results.map((result) => (\n            <div className=\"search-eachResult\" key={result.id} onClick={() => this.selectResult(result.id)}>\n                <h3>{result.name}</h3>\n                <p>{result.id}</p>\n            </div>\n            ))}\n        </div>\n        </div>\n    );\n    }\n}\n\n\nconst mapStateToProps = (state) => {\n  return {};\n};\n\nlet SearchScripts = withRouter(connect(mapStateToProps)(ConnectedSearchScripts));\nexport default withRouter(SearchScripts);\n\n","import React, { Component } from \"react\";\nimport Footer from \"../Footer/Footer.js\";\nimport Header  from \"../Header/Header.js\";\nimport NewScript from \"../NewScript/NewScript.js\"\nimport ReaderView from \"../ReaderView/ReaderView.js\"\nimport EditScript from \"../EditScript/EditScript.js\"\nimport HomePage from \"../HomePage/HomePage.js\"\nimport SearchScripts from \"../SearchScripts/SearchScripts.js\"\n\nimport \"./Layout.css\";\n\n\nclass Layout extends Component{\n  constructor(props){\n    super(props);\n\n    this.state = {\n        pageName: this.props.pageName\n    }\n  }\n\n  componentDidMount(){\n    //hack: use this to fix github pages doing ?/ on pages\n    if (window.location.href.includes(\"?/\")){\n      let actualDestination = window.location.href.split(\"?/\")[1]\n\n      this.props.history.push({\n        pathname: \"/\" + actualDestination\n      });\n    }\n\n    document.getElementById(\"layoutContent\").classList.add(this.state.pageName);\n  }\n\n  componentDidUpdate(){\n\n    const layoutContent = document.getElementById(\"layoutContent\")\n\n    layoutContent.className = ''\n\n    layoutContent.classList.add(\"Layout-content\")\n    layoutContent.classList.add(this.state.pageName);\n  }\n\n  changePage = (pageToChange) => {\n    window.history.pushState('', 'New Page Title', '/' + pageToChange);\n    this.setState({pageName: pageToChange})\n  }\n\n  render(){\n    return (\n        <div className=\"Layout\">\n            <div className=\"Layout-header\">\n                <Header changePage={this.changePage}/>\n            </div>\n            <div className=\"Layout-content\" id=\"layoutContent\">\n                {this.state.pageName == \"textyng\" &&\n                    <HomePage changePage={this.changePage}/>\n                }\n                {this.state.pageName == \"newscript\" &&\n                    <NewScript changePage={this.changePage}/>\n                }\n                {this.state.pageName == \"readerview\" &&\n                    <ReaderView changePage={this.changePage}/>\n                }\n                {this.state.pageName == \"editscript\" &&\n                    <EditScript changePage={this.changePage}/>\n                }\n                {this.state.pageName == \"searchscripts\" &&\n                    <SearchScripts changePage={this.changePage}/>\n                }\n                \n            </div>\n            <div className=\"Layout-footer\">\n                <Footer />\n            </div>\n        </div>\n    )}\n}\n\nexport default Layout;\n","import React, { Component } from 'react';\nimport { HashRouter, Switch, Route } from 'react-router-dom';\nimport Layout from \"./components/Layout/Layout.js\"\n\nimport \"./App.css\";\n\n//textyng - everything is a message\n\nwindow.onresize = function() {\n  document.getElementsByClassName(\"App\").height = window.innerHeight;\n}\nwindow.onresize();\n\nclass App extends Component {\n  render() {\n    return (\n      <HashRouter>\n        <div className=\"App\">\n          <div className=\"App-content\">\n            <Switch>\n              <Route path=\"/\" exact component={() => (<Layout pageName=\"textyng\" />)}/>\n              <Route path=\"/textyng\"  exact component={() => (<Layout pageName=\"textyng\" />)}/>\n              <Route path=\"/newscript\" exact component={() => (<Layout pageName=\"newscript\" />)}/>\n              <Route path=\"/readerview/:id\" exact component={() => (<Layout pageName=\"readerview\" />)}/>\n              <Route path=\"/editscript/:id\" exact component={() => (<Layout pageName=\"editscript\" />)}/>\n              <Route path=\"/searchscripts\" exact component={() => (<Layout pageName=\"searchscripts\" />)}/>\n            </Switch>\n          </div>\n        </div>\n      </HashRouter>\n    );\n  }\n}\n\nexport default App;\n","export const SET_YOKIS = \"SET_YOKIS_ITEMS\";\n","import * as CONSTANTS from \"./Constants\";\n\n// If multiple components need access to some data, in that case we store such data in redux.\nconst initialState = {\n  yokis: [],\n};\n\nconst rootReducer = (state = initialState, action) => {\n  switch (action.type) {\n    case CONSTANTS.SET_YOKIS:\n      return { ...state, yokis: action.payload };\n    default:\n      return state;\n  }\n};\n\nexport default rootReducer;\n","import { createStore } from \"redux\";\nimport rootReducer from \"./Reducer\";\n\nconst store = createStore(rootReducer);\n\nexport default store;\n","const config = {\n  apiKey: \"AIzaSyCtlY88fmnAbNOZIRemBADFMvicXjKOjFQ\",\n  authDomain: \"textyng.firebaseapp.com\",\n  projectId: \"textyng\",\n  storageBucket: \"textyng.appspot.com\",\n  messagingSenderId: \"892488022331\",\n  appId: \"1:892488022331:web:25a6af11d37b5ef3939f1e\",\n  measurementId: \"G-X3VZXJEPLP\"\n};\n\nexport default config","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./src/App\";\nimport { BrowserRouter } from \"react-router-dom\";\nimport { Provider } from \"react-redux\";\nimport store from \"./src/Redux/Store\";\nimport firebase from \"firebase\";\nimport config from './src/firebase/config.js';\n\nif (!firebase.apps.length) {\n  firebase.initializeApp(config);\n}\n\nlet app = (\n  <Provider store={store}>\n    <BrowserRouter>\n      <App />\n    </BrowserRouter>\n  </Provider>\n);\n\nwindow.__MUI_USE_NEXT_TYPOGRAPHY_VARIANTS__ = true;\n\nReactDOM.render(app, document.getElementById(\"root\"));\n\n\n//persistence after page refresh\n\n// https://stackoverflow.com/questions/39097440/on-react-router-how-to-stay-logged-in-state-even-page-refresh","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n// expose the modules object (__webpack_modules__)\n__webpack_require__.m = __webpack_modules__;\n\n","var deferred = [];\n__webpack_require__.O = (result, chunkIds, fn, priority) => {\n\tif(chunkIds) {\n\t\tpriority = priority || 0;\n\t\tfor(var i = deferred.length; i > 0 && deferred[i - 1][2] > priority; i--) deferred[i] = deferred[i - 1];\n\t\tdeferred[i] = [chunkIds, fn, priority];\n\t\treturn;\n\t}\n\tvar notFulfilled = Infinity;\n\tfor (var i = 0; i < deferred.length; i++) {\n\t\tvar [chunkIds, fn, priority] = deferred[i];\n\t\tvar fulfilled = true;\n\t\tfor (var j = 0; j < chunkIds.length; j++) {\n\t\t\tif ((priority & 1 === 0 || notFulfilled >= priority) && Object.keys(__webpack_require__.O).every((key) => (__webpack_require__.O[key](chunkIds[j])))) {\n\t\t\t\tchunkIds.splice(j--, 1);\n\t\t\t} else {\n\t\t\t\tfulfilled = false;\n\t\t\t\tif(priority < notFulfilled) notFulfilled = priority;\n\t\t\t}\n\t\t}\n\t\tif(fulfilled) {\n\t\t\tdeferred.splice(i--, 1)\n\t\t\tvar r = fn();\n\t\t\tif (r !== undefined) result = r;\n\t\t}\n\t}\n\treturn result;\n};","// getDefaultExport function for compatibility with non-harmony modules\n__webpack_require__.n = (module) => {\n\tvar getter = module && module.__esModule ?\n\t\t() => (module['default']) :\n\t\t() => (module);\n\t__webpack_require__.d(getter, { a: getter });\n\treturn getter;\n};","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.g = (function() {\n\tif (typeof globalThis === 'object') return globalThis;\n\ttry {\n\t\treturn this || new Function('return this')();\n\t} catch (e) {\n\t\tif (typeof window === 'object') return window;\n\t}\n})();","__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))","// define __esModule on exports\n__webpack_require__.r = (exports) => {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","__webpack_require__.p = \"/\";","// no baseURI\n\n// object to store loaded and loading chunks\n// undefined = chunk not loaded, null = chunk preloaded/prefetched\n// [resolve, reject, Promise] = chunk loading, 0 = chunk loaded\nvar installedChunks = {\n\t179: 0\n};\n\n// no chunk on demand loading\n\n// no prefetching\n\n// no preloaded\n\n// no HMR\n\n// no HMR manifest\n\n__webpack_require__.O.j = (chunkId) => (installedChunks[chunkId] === 0);\n\n// install a JSONP callback for chunk loading\nvar webpackJsonpCallback = (parentChunkLoadingFunction, data) => {\n\tvar [chunkIds, moreModules, runtime] = data;\n\t// add \"moreModules\" to the modules object,\n\t// then flag all \"chunkIds\" as loaded and fire callback\n\tvar moduleId, chunkId, i = 0;\n\tif(chunkIds.some((id) => (installedChunks[id] !== 0))) {\n\t\tfor(moduleId in moreModules) {\n\t\t\tif(__webpack_require__.o(moreModules, moduleId)) {\n\t\t\t\t__webpack_require__.m[moduleId] = moreModules[moduleId];\n\t\t\t}\n\t\t}\n\t\tif(runtime) var result = runtime(__webpack_require__);\n\t}\n\tif(parentChunkLoadingFunction) parentChunkLoadingFunction(data);\n\tfor(;i < chunkIds.length; i++) {\n\t\tchunkId = chunkIds[i];\n\t\tif(__webpack_require__.o(installedChunks, chunkId) && installedChunks[chunkId]) {\n\t\t\tinstalledChunks[chunkId][0]();\n\t\t}\n\t\tinstalledChunks[chunkId] = 0;\n\t}\n\treturn __webpack_require__.O(result);\n}\n\nvar chunkLoadingGlobal = self[\"webpackChunkweb\"] = self[\"webpackChunkweb\"] || [];\nchunkLoadingGlobal.forEach(webpackJsonpCallback.bind(null, 0));\nchunkLoadingGlobal.push = webpackJsonpCallback.bind(null, chunkLoadingGlobal.push.bind(chunkLoadingGlobal));","// startup\n// Load entry module and return exports\n// This entry module depends on other loaded chunks and execution need to be delayed\nvar __webpack_exports__ = __webpack_require__.O(undefined, [606], () => (__webpack_require__(1050)))\n__webpack_exports__ = __webpack_require__.O(__webpack_exports__);\n"],"names":["Footer","props","state","catSelected","findMeIconHover","className","Component","Header","this","setState","createIconHover","meCardsIconHover","changePage","path","window","location","pathname","includes","element","document","getElementById","setInterval","randomInterval","Math","floor","random","setTimeout","currentBorderRadius","style","borderRadius","iconName","fillColor","onClick","handleCategoryClick","id","src","logo","alt","fill","xmlns","height","width","viewBox","d","x","y","transform","getScripts","Promise","resolve","firebase","ref","once","then","snapshot","val","Object","values","createNewScript","script","set","name","dateCreated","cast","crew","messages","response","console","log","catch","error","updateScript","update","scenes","readerReactionMap","getRimiSenTitles","postChats","seller","buyer","message","productId","senderID","push","content","timestamp","Date","now","uid","storage","getScriptById","updateSenTitle","senTitle","newSenTitle","updateId","remove","sendForApproval","item","updateVideoSnippetURL","orderId","snippetVideoURL","MessageNode","data","next","milliseconds","head","node","totalNoMsgs","Map","count","emojiName","messageId","has","get","updateScriptFirebase","getScenes","length","current","MsgIndex","newNode","n","i","senderId","msgType","castId","msgId","result","getOnlyCommentsAsNodes","find","obj","whoCommentedMsg","idOfMsgCommented","nodeId","newContent","currentNode","sender","getAllCast","concat","getAllCrew","getAllMessagesAsNodes","getAllScenes","JSON","stringify","fromEntries","newCast","forEach","existingCast","idNameMap","object","newCrew","existingCrew","scriptId","addNewMessage","javascriptObject","parse","entries","getNodeByMessageId","oldName","React","setName","isNameFocused","setIsNamedFocused","TextField","autoFocus","inputProps","maxLength","fontSize","value","onChange","event","target","onBlur","getScriptName","defaultCast","casts","setCast","totalCast","setTotalCast","updateCastName","newName","map","index","key","el","querySelectorAll","classList","add","selectedCast","updateActiveOption","addNewCastMember","defaultScenes","setScenes","totalScenes","setTotalScenes","updateSceneName","selectedScene","newScene","addNewScene","fileInput","useRef","type","file","files","fileRef","Firebase","replace","child","put","getDownloadURL","url","getImgURL","isRecording","setIsRecording","audioUrl","setAudioUrl","Recorder","handleAudioStop","blob","blobURL","storageRef","audioFile","File","toString","metadata","cors","origin","getVNURL","controls","grabScreenshot","getInsertedImg","getUplodedVideo","selectedMsgType","setValue","getSecondsFromHHMMSS","split","str1","str2","str3","val1","Number","val2","val3","isNaN","toHHMMSS","secs","secNum","parseInt","filter","join","spslm","seconds","max","inputTime","time","useState","isVisible","setIsVisible","alreadySavedValue","inputValue","setInputValue","variant","placeholder","e","multiline","minRows","onSave","whoSentCommentedMsg","ConnectedEditScript","updateScriptName","updateCast","updateScene","getSelectedCast","selectedCastId","allMessages","getOnlyTextMsgsAsNodes","getSelectedScene","scene","selectedSceneId","getSelectedMsgType","textMsg","alreadyBeenLikedByselectedCastId","likedMsgID","likedByMap","addNewLikeMsg","deleteLikedMessage","tslmsg","timeSinceLastMsg","msgData","timeStamp","whoSentLikedMsg","idOfMsgLiked","whoLikedMsg","sceneId","updatedLikedByMap","emotion","addNewMsgComment","comment","addNewMediaMsg","mediaType","mediaURL","isImg","isAudio","isVideo","getInputTime","timeInSeconds","deleteMessage","onSaveComment","existingCommentNode","getCommentNodeByCastIdMsgId","nil","editNodeContent","html2canvas","canvas","imageData","toDataURL","putString","downloadURL","animateGreeting","isNewScript","getOnlyLikedMsgsAsNodes","clearInterval","intervalId","href","actualDestination","history","replaceAll","textyng","Script","grabScriptFromFirebase","generateLikedMap","likedMessages","msgLikedId","msgLikedSenderId","DynamicClassAssignment","isActive","getSenderNameFromID","getCommentByCastIdMsgId","Button","color","EditScript","withRouter","connect","children","ConnectedNewScript","NewScript","ConnectedReaderView","handlePreviousClick","clearTimeout","timeoutId","prevState","currentNodeIndex","prevNodeIndex","getNthMessageNode","undefined","getTotalNumScenes","slice","handlePlayPauseClick","isPlaying","handleNextClick","updateCurrentNode","startAutoPlay","selectThisScene","reactionClicked","currentTarget","updateReaderReaction","getReaderReactionFromMsg","reactionArray","getReaderReactionMap","emoji","Emoji","size","emojis","match","params","ReaderView","ConnectedHomePage","typeWriter","leftText","rightText","leftCounter","rightCounter","leftMessage","rightMessage","charAt","HomePage","ConnectedSearchScripts","searchBarUp","results","searchTerm","scripts","handleFocus","bind","handleBlur","handleSearch","selectResult","toLowerCase","top","onFocus","SearchScripts","Layout","pageToChange","pushState","pageName","layoutContent","onresize","getElementsByClassName","innerHeight","App","HashRouter","Switch","Route","exact","component","SET_YOKIS","initialState","yokis","action","CONSTANTS","payload","createStore","rootReducer","apiKey","authDomain","projectId","storageBucket","messagingSenderId","appId","measurementId","config","app","Provider","store","BrowserRouter","__MUI_USE_NEXT_TYPOGRAPHY_VARIANTS__","ReactDOM","__webpack_module_cache__","__webpack_require__","moduleId","cachedModule","exports","module","__webpack_modules__","call","m","deferred","O","chunkIds","fn","priority","notFulfilled","Infinity","fulfilled","j","keys","every","splice","r","getter","__esModule","a","definition","o","defineProperty","enumerable","g","globalThis","Function","prop","prototype","hasOwnProperty","Symbol","toStringTag","p","installedChunks","chunkId","webpackJsonpCallback","parentChunkLoadingFunction","moreModules","runtime","some","chunkLoadingGlobal","self","__webpack_exports__"],"sourceRoot":""}