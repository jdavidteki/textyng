{"version":3,"file":"static/js/main.d2272dc7.js","mappings":"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","sources":["src/components/Footer/Footer.js","src/components/Header/Header.js","src/Helpers/Helpers.js","src/firebase/firebase.js","src/components/Script/Script.js","src/components/EditableField/EditableField.js","src/components/CastMembers/CastMembers.js","src/components/Scenes/Scenes.js","src/components/FilePicker/FilePicker.js","src/components/RecordModal/RecordModal.js","src/components/MsgTypes/MsgTypes.js","src/components/TimeInput/TimeInput.js","src/components/CommentedPopup/CommentedPopup.js","src/components/EditScript/EditScript.js","src/components/NewScript/NewScript.js","src/components/Conversation/Conversation.js","src/components/ReaderView/ReaderView.js","src/components/HomePage/HomePage.js","src/components/SearchScripts/SearchScripts.js","src/components/ScriptGenerator/ScriptGenerator.js","src/components/Layout/Layout.js","src/App.js","src/Redux/Constants.js","src/Redux/Reducer.js","src/Redux/Store.js","src/firebase/config.js","index.js","webpack/bootstrap","webpack/runtime/chunk loaded","webpack/runtime/compat get default export","webpack/runtime/define property getters","webpack/runtime/global","webpack/runtime/hasOwnProperty shorthand","webpack/runtime/make namespace object","webpack/runtime/publicPath","webpack/runtime/jsonp chunk loading","webpack/startup"],"sourcesContent":["import React, { Component } from \"react\";\n\nimport \"./Footer.css\";\n\nclass Footer extends Component {\n  constructor(props){\n    super(props);\n\n    this.state = {\n      catSelected: \"textyng\",\n      findMeIconHover: \"#6c47db\",\n    }\n  }\n\n  render() {\n    return (\n      <div className={\"Footer-default\"}>\n        <div className=\"frame-142\">\n          <div className=\"Footer-greeting\">\n            about everything\n          </div>\n        </div>\n      </div>\n    )\n  };\n}\n\nexport default Footer;\n","import React, { Component } from \"react\";\nimport logo from '../../assets/logos/logo.png';\n\nimport { GetSvgIcon } from \"../../Helpers/Helpers.js\";\n\nimport \"./Header.css\";\n\nclass Header extends Component{\n  constructor(props){\n    super(props);\n\n    this.state = {\n      catSelected: \"textyng\",\n    }\n  }\n\n  handleCategoryClick(catSelected){\n    this.setState({\n      createIconHover: \"black\",\n      meCardsIconHover: \"black\",\n    })\n\n\n    if(catSelected == \"readerview\"){\n      this.setState({ createIconHover: \"#DCB69A\"})\n    }else if(catSelected == \"mecards\"){\n      this.setState({ meCardsIconHover: \"#DCB69A\"})\n    }\n\n    this.props.changePage(catSelected)\n  }\n\n  componentDidMount(){\n    let path = window.location.pathname;\n    this.setState({\n      createIconHover: path.includes(\"readerview/\") ? \"#DCB69A\" : 'black',\n      meCardsIconHover: path.includes(\"mecards/\") ? \"#DCB69A\" : 'black',\n    })\n\n    let element = document.getElementById(\"Header-logo\");\n    setInterval(function() {\n      let randomInterval = Math.floor(Math.random() * (3000 - 1000 + 1)) + 1000;\n      setTimeout(function() {\n\n        let currentBorderRadius = element.style.borderRadius;\n        if (currentBorderRadius === \"25%\") {\n          element.style.borderRadius = \"0\";\n        } else {\n          element.style.borderRadius = \"25%\";\n        }\n\n      }, randomInterval);\n    }, 4000); // 1000 milliseconds = 1 second\n  }\n\n  render(){\n    return (\n      <div className=\"Header\">\n        <div className=\"Header-logoWrapper\" onClick={() => this.handleCategoryClick(\"textyng\")}>\n          <img id=\"Header-logo\" className=\"Header-logo\" src={logo} alt=\"textyng.me.logo\" />\n        </div>\n        <div className=\"Header-mainMenu\">\n          <div className=\"Header-mainMenu-item Header-icon\" onClick={() => this.handleCategoryClick(\"searchscripts\")}>\n            {GetSvgIcon(\"createIcon\", this.state.createIconHover)}\n            <span className=\"Header-img-title\">scripts</span>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default Header;\n","import React, { Component } from \"react\";\n\nexport function GetSvgIcon(iconName, fillColor) {\n    if (iconName == \"createIcon\"){\n        return (\n            <svg data-name=\"Layer 1\" fill={fillColor} xmlns=\"http://www.w3.org/2000/svg\" height=\"24\" width=\"24\" viewBox=\"0 0 60 60\">\n                <defs></defs>\n                <title>Thinking</title>\n                <g id=\"TSizNs.tif\">\n                    <path className=\"cls-1\" d=\"M55.3,36.65v.9l0,.15c-.05.33-.08.67-.15,1a8.41,8.41,0,0,1-1.81,3.38,9.42,9.42,0,0,1-2.13,1.85.23.23,0,0,0-.11.24c0,.2,0,.4.07.6a9.07,9.07,0,0,1-.2,3.07,5.4,5.4,0,0,1-1.57,2.77,8.37,8.37,0,0,1-3.88,1.84,4.68,4.68,0,0,0-1.58.32.56.56,0,0,0-.2.17c-.22.33-.4.69-.63,1a7.5,7.5,0,0,1-2,2,8.09,8.09,0,0,1-3,1.06l-1.17.22H35.63L35,57.18a5.8,5.8,0,0,1-2.8-1.31l-.24-.2-.13.12a5.83,5.83,0,0,1-2.72,1.35c-.25,0-.51.08-.77.11h-.83l-.17,0c-.59-.08-1.19-.12-1.78-.24a7.53,7.53,0,0,1-2.55-1,7.82,7.82,0,0,1-2.84-3.19.36.36,0,0,0-.34-.22,10.57,10.57,0,0,1-3.49-.85,5.59,5.59,0,0,1-3.18-3.38,9.15,9.15,0,0,1-.28-4.19.23.23,0,0,0-.11-.27,11,11,0,0,1-2.4-2.16,7.22,7.22,0,0,1-1.66-5.53,9.36,9.36,0,0,1,1.39-4c.12-.2.32-.38.34-.59s-.14-.42-.23-.63a20.7,20.7,0,0,1-1.39-6,13.6,13.6,0,0,1,.43-4.58A10.33,10.33,0,0,1,12,15.88a10.87,10.87,0,0,1,4.9-2.78.3.3,0,0,0,.21-.17c.25-.45.48-.92.77-1.34a10.77,10.77,0,0,1,5.4-4,14,14,0,0,1,5.57-.77A5.64,5.64,0,0,1,31,7.32c.36.18.69.4,1.05.61l0,0a5.38,5.38,0,0,1,3-1.12,12.72,12.72,0,0,1,3,.12A12.37,12.37,0,0,1,42.62,8.4a10.09,10.09,0,0,1,4.32,4.54.3.3,0,0,0,.18.15,22.44,22.44,0,0,1,2.17.8,10.26,10.26,0,0,1,5.47,6.78,13.2,13.2,0,0,1,.38,3.6,15.32,15.32,0,0,1-.42,3.63,22.7,22.7,0,0,1-1.13,3.44.59.59,0,0,0,0,.6,9.43,9.43,0,0,1,1.55,3.81C55.23,36.05,55.26,36.35,55.3,36.65ZM40.16,51.87,40,51.75a6.3,6.3,0,0,1-2.42-3A8.41,8.41,0,0,1,37,45.4a2,2,0,0,1,4-.11c0,.42,0,.85.07,1.26a2.79,2.79,0,0,0,1.36,2.07,2.28,2.28,0,0,0,1.6.25,6.39,6.39,0,0,0,2.1-.68,2.58,2.58,0,0,0,1.41-2.38,7.73,7.73,0,0,0-.34-2.08,1.93,1.93,0,0,1,0-1,2,2,0,0,1,1.15-1.33,5.39,5.39,0,0,0,2.18-1.68,4.41,4.41,0,0,0,.81-3.24A5.32,5.32,0,0,0,51,35l-.14.11c-.4.33-.8.68-1.22,1a9.32,9.32,0,0,1-6.92,1.8,2.21,2.21,0,0,1-1.46-.67,1.84,1.84,0,0,1-.35-2A1.82,1.82,0,0,1,42.65,34a6.44,6.44,0,0,1,.86.09,5.23,5.23,0,0,0,2.72-.56,10.28,10.28,0,0,0,3.37-2.74,3.27,3.27,0,0,0,.5-.69,15.28,15.28,0,0,0,1.31-5.56,8.75,8.75,0,0,0-1.09-4.72,6.55,6.55,0,0,0-4.92-3.38A2,2,0,0,1,43.7,15a3.25,3.25,0,0,0-.23-.54,7,7,0,0,0-2.77-2.68,9.92,9.92,0,0,0-5.55-1.15.86.86,0,0,0-.8.59,4.88,4.88,0,0,0-.2.65,11.53,11.53,0,0,0-.21,2.49V51.17a5.62,5.62,0,0,0,0,.58,1.61,1.61,0,0,0,.73,1.32,1.69,1.69,0,0,0,.89.27c.54,0,1.08-.06,1.61-.09a4.65,4.65,0,0,0,2.28-.81A8.66,8.66,0,0,0,40.16,51.87Zm-26.73-23c.35-.16.68-.33,1-.47a10.22,10.22,0,0,1,3.22-.75,13.17,13.17,0,0,1,3.38.19c.63.12,1.25.33,1.88.45a2,2,0,0,1,1.57,2,1.94,1.94,0,0,1-2.13,1.83,8.56,8.56,0,0,1-.83-.23,10.88,10.88,0,0,0-4-.25,5.17,5.17,0,0,0-3.67,1.92,5.65,5.65,0,0,0-1.24,3.63A4.27,4.27,0,0,0,14,40.24a6.17,6.17,0,0,0,1.75,1.15,1.93,1.93,0,0,1,1.07,2.33,6.42,6.42,0,0,0-.34,2.3A2.54,2.54,0,0,0,17,47.46a3.43,3.43,0,0,0,1.68,1.08,8.26,8.26,0,0,0,2.61.39,2,2,0,0,1,1.08.3,2.25,2.25,0,0,1,.92,1.39,3.23,3.23,0,0,0,1.65,2.05,6,6,0,0,0,2.26.64,5.31,5.31,0,0,0,1.49,0A1.51,1.51,0,0,0,30,52a4.21,4.21,0,0,0,.06-.79q0-18.36,0-36.7c0-.68-.05-1.36-.1-2a4.13,4.13,0,0,0-.34-1.34.78.78,0,0,0-.65-.48,9.22,9.22,0,0,0-3.1.18,8.44,8.44,0,0,0-4.69,2.72A3.91,3.91,0,0,0,20.3,15a1.69,1.69,0,0,1-.79,1.06,2,2,0,0,1-.76.35c-.23,0-.46.09-.68.14a6.39,6.39,0,0,0-2.69,1.28,7.82,7.82,0,0,0-2.8,5.66,10.68,10.68,0,0,0,.1,2.46A14.58,14.58,0,0,0,13.43,28.82Z\"></path>\n                    <path className=\"cls-1\" d=\"M46.77,28.09a8.52,8.52,0,0,1-6.43-2.61,9.19,9.19,0,0,1-2-3.28,14.79,14.79,0,0,1-.53-1.9A1.91,1.91,0,0,1,39.46,18a2,2,0,0,1,2.26,1.69,6.5,6.5,0,0,0,1.84,3.55,3.31,3.31,0,0,0,2.07.94,6.86,6.86,0,0,0,1.81-.09A1.94,1.94,0,1,1,47.79,28C47.42,28,47,28.07,46.77,28.09Z\"></path>\n                    <path className=\"cls-1\" d=\"M18.37,35.87a2.68,2.68,0,0,1,1,.25A10,10,0,0,1,23,38.44a10.53,10.53,0,0,1,2.29,3.48,12.52,12.52,0,0,1,.86,3.47,1.94,1.94,0,0,1-3.81.68c-.07-.32-.05-.67-.09-1a6,6,0,0,0-2.88-4.7,7.77,7.77,0,0,0-1.55-.71,1.9,1.9,0,0,1-1.38-1.76A1.93,1.93,0,0,1,18.37,35.87Z\"></path>\n                    <path className=\"cls-1\" d=\"M20.77,24.11a2.57,2.57,0,0,1-1.26-.19,1.94,1.94,0,0,1,.83-3.7,5.66,5.66,0,0,0,1.79-.2,3.08,3.08,0,0,0,2.1-2.34,2,2,0,0,1,2-1.59,2,2,0,0,1,1.82,2.48,7,7,0,0,1-5.29,5.26A8.63,8.63,0,0,1,20.77,24.11Z\"></path>\n                </g>\n            </svg>\n        )\n    }\n    if (iconName == \"findMeIcon\"){\n        return (\n            <svg data-name=\"Layer 1\" fill={fillColor} xmlns=\"http://www.w3.org/2000/svg\" height=\"24\" width=\"24\" viewBox=\"0 0 60 60\">\n                <defs></defs>\n                <title>Connection</title>\n                <path className=\"cls-1\" d=\"M32,25.56a8.87,8.87,0,1,1,8.86-8.86A8.87,8.87,0,0,1,32,25.56ZM32,11.7a5,5,0,1,0,5,5A5,5,0,0,0,32,11.7Z\"></path>\n                <path className=\"cls-1\" d=\"M14.28,54.07a8.86,8.86,0,1,1,8.86-8.86A8.86,8.86,0,0,1,14.28,54.07Zm0-13.85a5,5,0,1,0,5,5A5,5,0,0,0,14.28,40.22Z\"></path>\n                <path className=\"cls-1\" d=\"M49.72,54.07a8.86,8.86,0,1,1,8.86-8.86A8.87,8.87,0,0,1,49.72,54.07Zm0-13.85a5,5,0,1,0,5,5A5,5,0,0,0,49.72,40.22Z\"></path>\n                <rect className=\"cls-1\" x=\"39.83\" y=\"20.42\" width=\"4\" height=\"19.68\" transform=\"translate(-9.47 24.46) rotate(-29.43)\"></rect>\n                <rect className=\"cls-1\" x=\"13.3\" y=\"28.26\" width=\"19.68\" height=\"4\" transform=\"translate(-14.59 35.55) rotate(-60.57)\"></rect>\n                <rect className=\"cls-1\" x=\"21.5\" y=\"43.21\" width=\"21\" height=\"4\"></rect>\n            </svg>\n        )\n    }\n    if (iconName == \"mecardsIcon\"){\n        return (\n            <svg data-name=\"Layer 1\" fill={fillColor} xmlns=\"http://www.w3.org/2000/svg\" height=\"24\" width=\"24\" viewBox=\"0 0 60 60\">\n                <defs></defs>\n                <title>Work</title>\n                <g id=\"iQFwDU.tif\">\n                    <path className=\"cls-1\" d=\"M54.09,53.15H44.18s-.07-.06-.12-.07a2.53,2.53,0,0,1-2-2.68V45.11H11.64A3.47,3.47,0,0,1,7.91,42a.9.9,0,0,0-.08-.21V39.74a1.3,1.3,0,0,1,1.37-.68c.87,0,1.75,0,2.67,0V15a6.27,6.27,0,0,1,0-.75,3.58,3.58,0,0,1,2.18-3.12c.21-.09.43-.16.64-.24H48.24a2.67,2.67,0,0,0,.26.09,4.31,4.31,0,0,1,3.63,4.52V27h.53a10.63,10.63,0,0,1,1.13,0,2.63,2.63,0,0,1,2.38,2.08v22A3,3,0,0,1,54.09,53.15ZM17.94,35H42.09v-.53c0-1.62,0-3.24,0-4.86A2.52,2.52,0,0,1,44.7,27h1.35V16.92H17.94ZM50.1,27c0-.11,0-.17,0-.23,0-3.93,0-7.87,0-11.8a1.9,1.9,0,0,0-.46-1.09,2.87,2.87,0,0,0-2.35-1H15.44A1.43,1.43,0,0,0,14,14.07a3.71,3.71,0,0,0-.1.94q0,11.75,0,23.5c0,.17,0,.33,0,.5H42.05V37H17.25c-1.06,0-1.38-.31-1.38-1.37V16.25c0-1,.32-1.36,1.35-1.36H47.15a.93.93,0,0,1,.93.78,3.56,3.56,0,0,1,.05.65V27Zm4,6.08h-10v14h10ZM42.06,41.1H9.85c.12,1.58.53,2,2,2H42.06Zm12.11,8H44.12a.53.53,0,0,0,0,.13v1c0,.71.16.88.89.88h8.44c.42,0,.72-.17.74-.62S54.17,49.63,54.17,49.15Zm0-18.19a1.19,1.19,0,0,0,0-.2c0-.31,0-.63,0-.94,0-.66-.18-.84-.83-.84H44.76c-.37,0-.63.15-.66.52s0,1,0,1.46Z\"></path>\n                    <path className=\"cls-1\" d=\"M54.17,53.63H44l-.12-.08a3,3,0,0,1-2.31-3.15V45.59h-30a3.94,3.94,0,0,1-4.18-3.47l-.1-.3v-2.2l.06-.11a1.79,1.79,0,0,1,1.81-.93c.6,0,1.2,0,1.82,0h.35V14.84a4.11,4.11,0,0,1,0-.7,4,4,0,0,1,2.46-3.49l.46-.17.37-.11H48.33l.18.07.09,0a4.8,4.8,0,0,1,4,5v11H53a7.85,7.85,0,0,1,.84,0,3.12,3.12,0,0,1,2.79,2.42l0,.14,0,22.15a3.48,3.48,0,0,1-2.39,2.39Zm-9.85-1H54A2.5,2.5,0,0,0,55.69,51V29.15a2.15,2.15,0,0,0-1.94-1.69c-.24,0-.48,0-.73,0H51.65v-12a3.82,3.82,0,0,0-3.26-4.05l-.24-.08H14.81l-.13,0-.42.16a3.1,3.1,0,0,0-1.89,2.74,5.43,5.43,0,0,0,0,.57v24.7h-1.3c-.64,0-1.26,0-1.88,0a.84.84,0,0,0-.86.35v1.83a1,1,0,0,1,.07.23,3,3,0,0,0,3.26,2.69H42.56V50.4a2.05,2.05,0,0,0,1.64,2.22Zm7.55-1H45c-1,0-1.37-.38-1.37-1.36l0-1.18.1-.36.38-.06H54.65v.91c0,.33,0,.66,0,1a1.11,1.11,0,0,1-1.22,1.07Zm-.52-1h2.07c.26,0,.26-.06.26-.16a8.58,8.58,0,0,0,0-.88H44.56v.64a1.17,1.17,0,0,0,0,.38s.07,0,.38,0Zm3.28-3.11h-11v-15h11Zm-10-1h9.07V33.52H44.6Zm-2.06-3.06H11.89c-1.77,0-2.38-.58-2.52-2.4l0-.51H42.54Zm-32.16-2c.13.87.42,1,1.51,1H41.58v-1Zm32.15-2.09H13.44l0-.61c0-.12,0-.24,0-.37q0-11.74,0-23.5a4.9,4.9,0,0,1,.11-1,1.91,1.91,0,0,1,1.9-1.58H47.3A3.35,3.35,0,0,1,50,13.53a2.46,2.46,0,0,1,.57,1.39c0,3.15,0,6.29,0,9.43v2.38a1.37,1.37,0,0,1,0,.19l-.05.43-.44.09H47.65V16.33a2.5,2.5,0,0,0,0-.55.46.46,0,0,0-.48-.4H17.22c-.77,0-.87.1-.87.88v19.4c0,.79.1.89.9.89H42.53Zm-28.18-1H41.58v-1H17.25c-1.32,0-1.86-.54-1.86-1.85V16.25c0-1.3.53-1.83,1.83-1.83h30a1.4,1.4,0,0,1,1.37,1.16,3.33,3.33,0,0,1,.07.75V26.48h1V24.35c0-3.14,0-6.28,0-9.42a1.4,1.4,0,0,0-.35-.79,2.39,2.39,0,0,0-2-.82H15.47a1,1,0,0,0-1,.85,3.58,3.58,0,0,0-.09.83V38.53Zm28.21-3.06H17.46v-19H46.53v11H44.7a2.05,2.05,0,0,0-2.13,2.14v5.87Zm-24.15-.95h23.2V29.6a3,3,0,0,1,3.09-3.1h.88V17.4H18.41Zm35.73-3.08H43.61v-.92c0-.36,0-.71,0-1.05a1,1,0,0,1,1.13-1h8.59c.91,0,1.3.39,1.31,1.32v.95c0,.05,0,.1,0,.19l-.07.4Zm-9.58-1h9.13q0-.33,0-.66c0-.26,0-.33,0-.34s-.07,0-.31,0H44.75a.68.68,0,0,0-.17,0C44.55,29.85,44.56,30.16,44.56,30.48Z\"></path>\n                </g>\n            </svg>\n        )\n    }\n}\n\nexport function GetSelectedLevelOptionAmount(value){\n    if (value == \"Regular Chicken Shawarma\"){\n        return \"12\"\n    }\n\n    if (value == \"Regular Beef Shawarma\"){\n        return \"14\"\n    }\n\n    if (value == \"Regular Combo (Chicken and Beef)\"){\n        return \"880\"\n    }\n\n    if (value == \"Owanbe Package\"){\n        return \"15\"\n    }\n\n    if (value == \"Regular Mega (Chicken, Beef, and Shrimp)\"){\n        return \"16\"\n    }\n\n    if (value == \"Double Sausage Chicken Shawarma\"){\n        return \"14\"\n    }\n}\n\nexport function GetSelectedStatusLevelLabel(value) {\n    value = parseInt(value)\n\n    if(value <= 20){\n      return \"received..\"\n    }\n\n    if(value >= 20 && value < 40){\n      return \"preparing..\"\n    }\n\n    if(value >= 40 && value < 60){\n      return \"cooking...\"\n    }\n\n    if(value >= 60 && value < 80){\n      return \"almost ready..\"\n    }\n\n    if(value >= 80 && value < 100){\n      return \"finishing touches\"\n    }\n\n    if(value == 100){\n        return \"food ready!\"\n    }\n\n    return \"i need igbo and shayo o!\"\n}\n\nexport function HmsToSecondsOnly(totalSecs) {\n    var str = totalSecs.substr(0,5)\n    var p = str.split(':'),\n        s = 0, m = 1;\n\n    while (p.length > 0) {\n        s += m * parseInt(p.pop(), 10);\n        m *= 60;\n    }\n\n    return s *1000 + ((parseInt(totalSecs.substr(6, 9), 10))/100);\n}\n\n\nexport function ConvertSecondsToDate(secondString) {\n    var months = ['January', 'February', 'March', 'April', 'May', 'June', 'July', 'August', 'September', 'October', 'November', 'December'];\n    var date;\n    try {\n      date = new Date(parseInt(secondString) * 1000);\n    } catch (error) {\n      date = new Date(1996, 2, 13);\n    }\n    var month = months[date.getMonth()];\n    var day = date.getDate();\n    var year = date.getFullYear();\n    return `${month} ${day}, ${year}`;\n  }","import firebase from \"firebase\";\n\nclass Firebase {\n  getScripts = () =>{\n    return new Promise(resolve => {\n      firebase.database()\n      .ref('/scripts/')\n      .once('value')\n      .then(snapshot => {\n        if (snapshot.val()){\n          resolve(Object.values(snapshot.val()))\n        }else{\n          resolve({})\n        }\n      })\n    })\n  }\n\n  createNewScript = (script) => {\n    return new Promise(resolve => {\n      firebase.database()\n      .ref('/scripts/' + script.id + '/')\n      .set(\n        {\n          id: script.id,\n          name: script.name,\n          dateCreated: script.dateCreated,\n          cast: script.cast,\n          crew: script.crew,\n          messages: script.messages,\n          isPrivateScript: script.isPrivateScript,\n        }\n      )\n      .then((response) => {\n        console.log(\"response\", response)\n        resolve(true)\n      })\n      .catch(error => {\n        console.log(\"error\", error)\n      })\n    })\n  }\n\n  updateScript = (script) => {\n    return new Promise(resolve => {\n      firebase.database()\n      .ref('/scripts/' + script.id + '/')\n      .update(\n        {\n          id: script.id,\n          name: script.name,\n          dateCreated: script.dateCreated,\n          cast: script.cast,\n          crew: script.crew,\n          messages: script.messages,\n          scenes: script.scenes,\n          readerReactionMap: script.readerReactionMap,\n          isPrivateScript: script.isPrivateScript,\n        }\n      )\n      .then((response) => {\n        console.log(\"response\", response)\n        resolve(true)\n      })\n      .catch(error => {\n        console.log(\"error\", error)\n      })\n    })\n  }\n\n  getOpenAIAPI = () => {\n    return new Promise(resolve => {\n      firebase.database()\n      .ref('/openAIAPI/')\n      .once('value')\n      .then(snapshot => {\n        if (snapshot.val()){\n          resolve(Object.values(snapshot.val()))\n        }else{\n          resolve({})\n        }\n      })\n    })\n  }\n\n  getConversationHistory = () => {\n    return new Promise(resolve => {\n      firebase.database()\n      .ref('/conversationHistory/')\n      .once('value')\n      .then(snapshot => {\n        if (snapshot.val()){\n          resolve(Object.values(snapshot.val()))\n        }else{\n          resolve({})\n        }\n      })\n    })\n  }\n\n  getRimiSenTitles = () =>{\n    return new Promise(resolve => {\n      firebase.database()\n      .ref('/rimiLyrics/')\n      .once('value')\n      .then(snapshot => {\n        if (snapshot.val()){\n          resolve(Object.values(snapshot.val()))\n        }else{\n          resolve({})\n        }\n      })\n    })\n  }\n\n  postChats = (seller, buyer, message, productId, senderID) => {\n    return new Promise(resolve => {\n      firebase.database().\n      ref('/chats/' + seller + '/' + productId + '/' + buyer + '/').\n      push({\n        content: message,\n        timestamp: Date.now(),\n        uid: senderID,\n      }).\n      then(() => {\n        resolve(true)\n      }).catch(error =>{\n        resolve({})\n      })\n    })\n  }\n\n  storage = () => {\n    return firebase.storage()\n  }\n\n  getRimiSenTitles = () =>{\n    return new Promise(resolve => {\n      firebase.database()\n      .ref('/rimiLyrics/')\n      .once('value')\n      .then(snapshot => {\n        if (snapshot.val()){\n          resolve(Object.values(snapshot.val()))\n        }else{\n          resolve({})\n        }\n      })\n    })\n  }\n\n  getScriptById = (id) => {\n    return new Promise(resolve => {\n      firebase.database()\n      .ref('/scripts/'+id)\n      .once('value')\n      .then(snapshot => {\n        if (snapshot.val()){\n          resolve(Object(snapshot.val()))\n        }else{\n          resolve({})\n        }\n      })\n    })\n  }\n\n  updateSenTitle = (update) =>{\n    return new Promise(resolve => {\n      firebase.database()\n      .ref(`/rimis/${update.id}/`)\n      .update(\n        {\n          senTitle: update.newSenTitle,\n        },\n      )\n      .then((response) => {\n        return new Promise(resolve => {\n          firebase.database()\n          .ref(`/rimis/${update.id}/updates/${update.updateId}`)\n          .remove()\n          .then(() => {\n            resolve(true)\n          }).catch( (error) =>{\n            console.log(\"error\", error)\n          })\n        })\n        .then((response) => {\n          resolve(true)\n        })\n        .catch(error => {\n          console.log(\"error\", error)\n        })\n      })\n      .catch(error => {\n        console.log(\"error\", error)\n      })\n    })\n\n  }\n\n  sendForApproval = (item) => {\n    return new Promise(resolve => {\n      firebase.database()\n      .ref('/rimis/'+item.id+'/updates/' + item.updateId + '/')\n      .set(item)\n      .then((response) => {\n        console.log(\"response\", response)\n        resolve(true)\n      })\n      .catch(error => {\n        console.log(\"error\", error)\n      })\n    })\n  }\n\n  updateVideoSnippetURL = (orderId, snippetVideoURL) => {\n    return new Promise(resolve => {\n      firebase.database()\n      .ref('/orders/' + orderId + '/')\n      .update({snippetVideoURL})\n      .then((response) => {\n        console.log(\"response\", response)\n        resolve(true)\n      })\n      .catch(error => {\n        console.log(\"error\", error)\n      })\n    })\n  }\n}\n\nexport default new Firebase();\n","import { DataArray } from \"@mui/icons-material\";\nimport React, { Component } from \"react\";\nimport firebase from \"../../firebase/firebase\";\n\nclass MessageNode {\n  constructor(data) {\n    this.data = data;\n    this.next = null;\n  }\n}\n\nclass Script {\n  constructor(name) {\n    var milliseconds = Math.floor(Date.now() / 1000)\n\n    this.name = name;\n    this.dateCreated = milliseconds\n    this.id = name + milliseconds\n    this.cast = [];\n    this.crew = [];\n    this.scenes = [];\n    this.head = null;\n    this.messages = new MessageNode();\n    this.node = {};\n    this.totalNoMsgs = 0;\n    this.readerReactionMap = new Map();\n    this.isPrivateScript = false;\n  }\n\n  updateScriptName(name){\n    this.name = name\n    this.updateIsPrivateScript()\n  }\n\n  updateIsPrivateScript(){\n    if(this.name.startsWith(\"yyyy\")){\n      this.isPrivateScript = true\n    }\n  }\n\n  numberOfMessages() {\n    let count = 0;\n    let node = this.head;\n    while (node) {\n      count++;\n      node = node.next;\n    }\n    return count;\n  }\n\n  getScenes(){\n    return this.scenes\n  }\n\n  updateReaderReaction(emojiName, messageId){\n    if (!this.readerReactionMap.has(messageId)) {\n      this.readerReactionMap.set(messageId, []);\n    }\n    this.readerReactionMap.get(messageId).push(emojiName);\n\n    this.updateScriptFirebase()\n  }\n\n  getReaderReactionMap(){\n    return this.readerReactionMap\n  }\n\n  getTotalNumScenes(){\n    return this.getScenes().length\n  }\n\n  deleteScript() {\n    this.head = null;\n  }\n\n  getLastMessage() {\n    let lastNode = this.head;\n    if (lastNode) {\n      while (lastNode.next) {\n        lastNode = lastNode.next;\n      }\n    }\n    return lastNode;\n  }\n\n  getFirstMessage() {\n    return this.head;\n  }\n\n  addNewMessage(data) {\n    this.totalNoMsgs += 1\n    data.MsgIndex = this.totalNoMsgs\n\n    let newNode = new MessageNode(data);\n\n    if (!this.head) {\n      this.head = newNode;\n      return this.head;\n    }\n\n    let current = this.head;\n    while (current.next) {\n      current = current.next;\n    }\n    current.next = newNode;\n  }\n\n  deleteMessage(id){\n    if (this.head.data.id === id) {\n      this.head = this.head.next;\n    } else {\n      let current = this.head;\n      while (current.next) {\n        if (current.next.data.id === id) {\n          current.next = current.next.next;\n          break;\n        }\n        current = current.next;\n      }\n    }\n    return this.head;\n  }\n\n  getLastMessage() {\n    let current = this.head;\n\n    while (current.next) {\n      current = current.next;\n    }\n\n    return current.data.content\n  }\n\n  getNthMessage(n) {\n    n -= 1\n    let current = this.head;\n\n    for(var i = 0; i < n; i++){\n      if (current){\n        current = current.next;\n      }else{\n        //nth message doesn't exist\n        return \"\"\n      }\n    }\n\n    return current.data.content\n  }\n\n  getNthMessageNode(n) {\n    n -= 1\n    let current = this.head;\n\n    for(var i = 0; i < n; i++){\n      if (current.next){\n        current = current.next;\n      }else{\n        //nth message doesn't exist\n        return \"\"\n      }\n    }\n\n    if (current){\n      return current.data\n    }\n\n    return null\n  }\n\n  getAllMessagesStringList() {\n    let messages = []\n    let current = this.head;\n\n    while (current) {\n      messages.push(current.data.content)\n      current = current.next;\n    }\n\n    return messages\n  }\n\n  getAllMessagesStringListBySenderId(senderId){\n    let messages = []\n    let current = this.head;\n\n    while (current) {\n      if (current.data.senderId == senderId){\n        messages.push(current.data)\n      }\n      current = current.next;\n    }\n\n    return messages\n  }\n\n  getOnlyTextMsgsAsNodes(){\n    let messages = []\n    let current = this.head;\n\n    while (current) {\n      if(current.data.msgType == \"textMsg\"){\n        messages.push(current.data)\n      }\n      current = current.next;\n    }\n\n    return messages\n  }\n\n  getOnlyCommentsAsNodes(){\n    let messages = []\n    let current = this.head;\n\n    while (current) {\n      if(current.data.msgType == \"comment\"){\n        messages.push(current.data)\n      }\n      current = current.next;\n    }\n\n    return messages\n  }\n\n  getCommentByCastIdMsgId(castId, msgId) {\n    let allComments = this.getOnlyCommentsAsNodes()\n\n    const result = allComments.find(obj => obj.whoCommentedMsg === castId && obj.idOfMsgCommented === msgId);\n\n    if(result){\n      return result.content\n    }\n\n    return ''\n  }\n\n  getCommentNodeByCastIdMsgId(castId, msgId) {\n    let allComments = this.getOnlyCommentsAsNodes()\n    return allComments.find(obj => obj.whoCommentedMsg === castId && obj.idOfMsgCommented === msgId);\n  }\n\n  editNodeContent(nodeId, newContent){\n    let currentNode = this.head;\n    while (currentNode) {\n\n      if (currentNode.data.id === nodeId) {\n        currentNode.data.content = newContent;\n        break;\n      }\n      currentNode = currentNode.next;\n    }\n\n    this.updateScriptFirebase()\n  }\n\n  getOnlyLikedMsgsAsNodes(){\n    let messages = []\n    let current = this.head;\n\n    while (current) {\n      if(current.data.msgType == \"like\"){\n        messages.push(current.data)\n      }\n      current = current.next;\n    }\n\n    return messages\n  }\n\n  getAllMessagesAsNodes() {\n    let messages = []\n    let current = this.head;\n\n    while (current) {\n      messages.push(current.data)\n      current = current.next;\n    }\n\n    return messages\n  }\n\n  getSenderNameFromID(senderId){\n    const mergedArray = this.getAllCast().concat(this.getAllCrew());\n\n    const sender = mergedArray.find(obj => obj.id === senderId);\n    if(sender){\n      return sender.name\n    }else{\n      return \"\"\n    }\n  }\n\n  sendScriptToFirebase() {\n    let script = {\n      id: this.id,\n      name: this.name,\n      dateCreated: this.dateCreated,\n      cast: this.getAllCast(),\n      crew: this.getAllCrew(),\n      messages: this.getAllMessagesAsNodes(),\n      scenes: this.getAllScenes(),\n      isPrivateScript: this.isPrivateScript,\n    }\n\n    firebase.createNewScript(script)\n  }\n\n  updateCast(cast){\n    this.cast = cast\n  }\n\n  updateScene(scenes){\n    this.scenes = scenes\n  }\n\n  //might have to update how we should understand this\n  isEmptyScript(){\n    return this.name == \"NewScript\"\n  }\n\n  updateScriptFirebase(){\n\n    if (!this.isEmptyScript()){\n      let script = {\n        id: this.id,\n        name: this.name,\n        dateCreated: this.dateCreated,\n        cast: this.getAllCast(),\n        crew: this.getAllCrew(),\n        messages: this.getAllMessagesAsNodes(),\n        scenes: this.getAllScenes(),\n        readerReactionMap: JSON.stringify(Object.fromEntries(this.readerReactionMap)),\n        isPrivateScript: this.isPrivateScript,\n      }\n  \n      firebase.updateScript(script)\n    }\n  }\n\n  removeCast(cast){\n    let newCast = []\n\n    this.cast.forEach((existingCast) => {\n      if (existingCast.id != cast.id){\n        newCast.push(existingCast)\n      }\n    })\n\n    this.cast = newCast\n  }\n\n  addNewCrew(crew){\n    this.crew.push(crew)\n  }\n\n  getAllCast(){\n    return this.cast\n  }\n\n  getAllScenes(){\n    return this.scenes\n  }\n\n  getCastIdToName(){\n    const idNameMap = new Map();\n    for (const object of this.getAllCast) {\n      idNameMap.set(object.id, object.name);\n    }\n    return idNameMap;\n  }\n\n  getAllCrew(){\n    return this.crew\n  }\n\n  removeCrew(crew){\n    let newCrew = []\n\n    this.crew.forEach((existingCrew) => {\n      if (existingCrew.id != crew.id){\n        newCrew.push(existingCrew)\n      }\n    })\n\n    this.crew = newCrew\n  }\n\n  getScriptName() {\n    return this.name;\n  }\n  \n  grabScriptFromFirebase(scriptId){\n    return new Promise(resolve => {\n      firebase.getScriptById(scriptId)\n      .then(val => {\n\n        if(val.messages){\n          let messages = val.messages\n          for(var i=0; i<messages.length; i++){\n            this.addNewMessage(messages[i])\n          }\n        }\n\n        //grab user reactions\n        let readerReactionMap = new Map();\n        if(val.readerReactionMap){\n          let javascriptObject = JSON.parse(val.readerReactionMap);\n          readerReactionMap = new Map(Object.entries(javascriptObject));\n        }\n\n        this.name = val.name;\n        this.dateCreated = val.dateCreated\n        this.id = val.id\n        this.cast = val.cast ? val.cast : []\n        this.crew = val.crew ? val.crew : []\n        this.scenes = val.scenes ? val.scenes : []\n        this.readerReactionMap = readerReactionMap\n        this.isPrivateScript = val.isPrivateScript ? val.isPrivateScript : false\n      })\n      .then(() => {\n        resolve(this)\n      })\n    })\n  }\n\n  getNodeByMessageId(messageId){\n    let currentNode = this.head;\n    while (currentNode) {\n      if (currentNode.data.id === messageId) {\n        return currentNode;\n      }\n      currentNode = currentNode.next;\n    }\n    return null;\n  }\n\n  getMsgType(messageId){\n    let message = getNodeByMessageId(messageId)\n\n    if (message.msgType){\n      return message.msgType\n    }\n\n    return \"textMsg\"\n  }\n}\n\nexport default Script;","import React from \"react\";\n\nimport TextField from \"@material-ui/core/TextField\";\n\nimport \"./EditableField.css\";\n\nfunction EditableField(props) {\n  let oldName = \"textyng\"\n\n  if(props.name){\n    oldName = props.name\n  }\n  const [name, setName] = React.useState(oldName);\n  const [isNameFocused, setIsNamedFocused] = React.useState(false);\n\n  function onBlurFunction(){\n    setIsNamedFocused(false)\n    props.getScriptName([props.id, name])\n  }\n\n  return (\n    <div className=\"EditableField\">\n      {!isNameFocused ? (\n        <div\n          onClick={() => {\n            setIsNamedFocused(true);\n          }}\n        >\n          {name}\n        </div>\n      ) : (\n        <TextField\n          autoFocus\n          inputProps={{maxLength: 20, style: {fontSize: props.fontSize ? props.fontSize : 50}}}\n          value={name}\n          onChange={(event) => setName(event.target.value)}\n          onBlur={(event) => onBlurFunction()}\n\n        />\n      )}\n    </div>\n  );\n}\n\nexport default EditableField;\n","import React from \"react\";\nimport EditableField from \"../EditableField/EditableField\";\n\nimport \"./CastMembers.css\";\n\nfunction CastMembers(props) {\n  let defaultCast = [\n    {\n      name: \"Kiyo\",\n      id: 1,\n    },\n    {\n      name: \"Cast Member\",\n      id: 2,\n    },\n  ];\n\n  const [casts, setCast] = React.useState(props.cast && props.cast.length > 0 ? props.cast : defaultCast);\n  const [totalCast, setTotalCast] = React.useState(props.cast && props.cast.length > 0 ? props.cast.length : defaultCast.length);\n\n  function addNewCastMember() {\n    let newCast = {\n      name: \"Cast Member\",\n      id: totalCast + 1,\n    };\n    setCast(casts => [...casts, newCast]);\n    setTotalCast(totalCast + 1);\n    props.getAllCast(casts);\n  }\n\n  function updateCastName(name) {\n    let id = name[0];\n    let newName = name[1];\n\n    for (var i = 0; i < casts.length; i++) {\n      if (casts[i].id == id) {\n        casts[i].name = newName;\n      }\n    }\n\n    setCast(casts => [...casts]);\n    props.getAllCast(casts);\n  }\n\n  function updateActiveOption(value) {\n    var el = document.querySelectorAll(\".CastMembers-cast\");\n\n    for (let i = 0; i < el.length; i++) {\n      el[i].classList.remove(\"active\");\n    }\n\n    document.getElementById(\"CastMembers-castId-\" + value.id).classList.add(\"active\");\n\n    props.selectedCast ? props.selectedCast(value) : {};\n  }\n\n  return (\n    <div className=\"CastMembers\">\n      {casts.map(\n        (value, index) => (\n          <div\n            id={\"CastMembers-castId-\" + value.id}\n            className=\"CastMembers-cast\"\n            key={index}\n            onClick={() => updateActiveOption(value)}\n          >\n            <EditableField name={value.name} id={value.id} fontSize={16} getScriptName={updateCastName} />\n          </div>\n        )\n      )}\n\n      <div className=\"CastMembers-addCast CastMembers-cast\" onClick={() => addNewCastMember()}>\n        +\n      </div>\n    </div>\n  );\n}\n\nexport default CastMembers;\n","import React from \"react\";\nimport EditableField from \"../EditableField/EditableField\";\n\nimport \"./Scenes.css\";\n\nfunction Scenes(props) {\n  let defaultScenes = [\n    {\n      name: \"Bombay\",\n      id: 1,\n    },\n    {\n      name: \"Sheraton Hostel\",\n      id: 2,\n    },\n  ];\n\n  const [scenes, setScenes] = React.useState(props.scenes && props.scenes.length > 0 ? props.scenes : defaultScenes);\n  const [totalScenes, setTotalScenes] = React.useState(props.scenes && props.scenes.length > 0 ? props.scenes.length : defaultScenes.length);\n\n  function addNewScene() {\n    let newScene = {\n      name: \"Scene\",\n      id: totalScenes + 1,\n    };\n    setScenes(scenes => [...scenes, newScene]);\n    setTotalScenes(totalScenes + 1);\n    props.getAllScenes(scenes);\n  }\n\n  function updateSceneName(name) {\n    let id = name[0];\n    let newName = name[1];\n\n    for (var i = 0; i < scenes.length; i++) {\n      if (scenes[i].id == id) {\n        scenes[i].name = newName;\n      }\n    }\n\n    setScenes(scenes => [...scenes]);\n    props.getAllScenes(scenes);\n  }\n\n  function updateActiveOption(value) {\n    var el = document.querySelectorAll(\".Scenes-scene\");\n\n    for (let i = 0; i < el.length; i++) {\n      el[i].classList.remove(\"active\");\n    }\n\n    document.getElementById(\"Scenes-sceneId-\" + value.id).classList.add(\"active\");\n\n    props.selectedScene ? props.selectedScene(value) : {};\n  }\n\n  return (\n    <div className=\"Scenes\">\n      {scenes.map(\n        (value, index) => (\n          <div\n            id={\"Scenes-sceneId-\" + value.id}\n            className=\"Scenes-scene\"\n            key={index}\n            onClick={() => updateActiveOption(value)}\n          >\n            <EditableField name={value.name} id={value.id} fontSize={16} getScriptName={updateSceneName} />\n          </div>\n        )\n      )}\n\n      <div className=\"Scenes-addScene Scenes-scene\" onClick={() => addNewScene()}>\n        +\n      </div>\n    </div>\n  );\n}\n\nexport default Scenes;\n","import React, { useRef } from 'react';\nimport Firebase from \"../../firebase/firebase.js\";\n\nimport \"./FilePicker.css\"\n\nconst FilePicker = (props) => {\n  const fileInput = useRef(null);\n\n  const handleFileSelect = (event) => {\n    const file = event.target.files[0];\n    const storageRef = Firebase.storage().ref(props.msgType.replace(/ /g, \"\") + \"/\");\n    const fileRef = storageRef.child(file.name);\n    fileRef.put(file).then(() => {\n      fileRef.getDownloadURL().then(url => {\n        props.getImgURL(url)\n      });\n    });\n  }\n  return (\n    <div className=\"FilePicker\">\n        <span>{props.msgType}</span>\n        <input\n          className=\"file-input\"\n          type=\"file\"\n          ref={fileInput}\n          onChange={handleFileSelect}\n        />\n    </div>\n  );\n}\n\nexport default FilePicker;\n","import React from 'react';\nimport { Recorder } from 'react-voice-recorder';\nimport Firebase from \"../../firebase/firebase.js\";\n\nimport './RecordModal.css';\nimport \"react-voice-recorder/dist/index.css\";\n\nfunction RecordModal(props) {\n  const [isRecording, setIsRecording] = React.useState(false);\n  const [audioUrl, setAudioUrl] = React.useState(null);\n\n  function handleStartRecording() {\n    setIsRecording(true);\n  }\n\n  function handleStopRecording(blob) {\n    setIsRecording(false);\n    setAudioUrl(blob.blobURL);\n    const milliseconds = Math.floor(Date.now() / 1000)\n    const storageRef = Firebase.storage().ref(\"VoiceNotes/\" + milliseconds);\n\n    // Upload the audio to Firebase\n    const audioFile = new File([blob.blob], milliseconds.toString()+'audio.mp3', {\n        type: 'audio/mp3',\n        metadata: {\n            cors: [{\n              origin: ['http://localhost:19006'],\n            }],\n        },\n    });\n\n    storageRef.put(audioFile).then(snapshot => {\n        snapshot.ref.getDownloadURL().then(url => {\n            props.getVNURL(url)\n        });\n    });\n\n  }\n\n  return (\n    <div className=\"RecordModal\">\n      {isRecording ? (\n        <div className=\"RecordModal-modalPopup\">\n            <Recorder handleAudioStop={handleStopRecording} />\n        </div>\n      ) : (\n        <button onClick={handleStartRecording} className=\"RecordModal-recordBbutton\">\n          Start recording\n        </button>\n      )}\n      {audioUrl && (\n        <div>\n          <audio src={audioUrl} controls />\n        </div>\n      )}\n    </div>\n  );\n}\n\nexport default RecordModal;","import React from \"react\";\nimport FilePicker from \"../FilePicker/FilePicker.js\"\nimport RecordModal from \"../RecordModal/RecordModal.js\"\n\nimport \"./MsgTypes.css\";\n\nfunction MsgTypes(props) {\n  let msgTypes = [\n    \"Thinking...\",\n    \"Left Scene\",\n  ];\n\n  return (\n    <div className=\"MsgTypes\">\n      <div\n        className={\"MsgTypes-name\"}\n        onClick={() => props.grabScreenshot()}\n      >\n        Screen Shot\n      </div>\n      <div className={\"MsgTypes-name\"}>\n        <FilePicker\n          msgType=\"Upload Image\"\n          getImgURL={props.getInsertedImg}\n        />\n      </div>\n      <div className={\"MsgTypes-name\"}>\n        <RecordModal\n          msgType=\"Voice Note\"\n          getVNURL={props.getVNURL}\n        />\n      </div>\n      <div className={\"MsgTypes-name\"}>\n        <FilePicker\n          msgType=\"Upload Video\"\n          getImgURL={props.getUplodedVideo}\n        />\n      </div>\n      {msgTypes.map((value, index) => (\n        <div\n          id={\"MsgTypes-id-\" + index}\n          className={\"MsgTypes-name\"}\n          key={index}\n          onClick={() => props.selectedMsgType ? props.selectedMsgType(value) : {}}\n        >\n          {value}\n        </div>\n      ))}\n    </div>\n  );\n}\n\nexport default MsgTypes;\n","import React from \"react\";\n\nimport \"./TimeInput.css\";\n\nfunction TimeInput(props){\n    const [value, setValue] = React.useState(\"0:00\");\n\n    const onChange = (event) => {\n      setValue(event.target.value);\n    };\n\n    const onBlur = (event) => {\n      const value = event.target.value;\n      const seconds = Math.max(0, getSecondsFromHHMMSS(value));\n\n      props.inputTime(seconds)\n\n      const time = toHHMMSS(seconds);\n      setValue(time);\n    };\n\n    const getSecondsFromHHMMSS = (value) => {\n      const [str1, str2, str3] = value.split(\":\");\n\n      const val1 = Number(str1);\n      const val2 = Number(str2);\n      const val3 = Number(str3);\n\n      if (!isNaN(val1) && isNaN(val2) && isNaN(val3)) {\n        return val1;\n      }\n\n      if (!isNaN(val1) && !isNaN(val2) && isNaN(val3)) {\n        return val1 * 60 + val2;\n      }\n\n      if (!isNaN(val1) && !isNaN(val2) && !isNaN(val3)) {\n        return val1 * 60 * 60 + val2 * 60 + val3;\n      }\n\n      return 0;\n    };\n\n    const toHHMMSS = (secs) => {\n      const secNum = parseInt(secs.toString(), 10);\n      const hours = Math.floor(secNum / 3600);\n      const minutes = Math.floor(secNum / 60) % 60;\n      const seconds = secNum % 60;\n\n      return [hours, minutes, seconds]\n        .map((val) => (val < 10 ? `0${val}` : val))\n        .filter((val, index) => val !== \"00\" || index > 0)\n        .join(\":\")\n        .replace(/^0/, \"\");\n    };\n\n    if(props.spslm){\n        setValue(props.spslm)\n    }\n\n    return (\n        <input\n            className=\"TimeInput\"\n            type=\"text\"\n            onChange={onChange}\n            onBlur={onBlur}\n            value={value}\n        />\n    );\n};\n\nexport default TimeInput;","import React, { useState } from 'react';\nimport TextField from \"@material-ui/core/TextField\";\n\nimport \"./CommentedPopup.css\"\n\nfunction CommentedPopup(props) {\n  const [isVisible, setIsVisible] = useState(false);\n  const [inputValue, setInputValue] = useState(props.alreadySavedValue);\n\n  const handleShow = () => {\n    setIsVisible(true);\n  };\n\n  const handleSave = () => {\n    props.onSave(inputValue, props.idOfMsgCommented, props.whoSentCommentedMsg);\n    setIsVisible(false);\n  };\n\n  const handleClose = () => {\n    setIsVisible(false);\n  };\n\n  const handleInputChange = (event) => {\n    setInputValue(event.target.value);\n  };\n\n  return (\n    <div className=\"parent-element\">\n      {isVisible && (\n        <div id=\"popup\">\n          <div id=\"popup-content\">\n            <TextField\n              variant=\"outlined\"\n              value={inputValue}\n              placeholder=\"Type comment here\"\n              onChange={e => handleInputChange(e)}\n              multiline\n              minRows={4}\n            />\n            <button id=\"save\" onClick={handleSave}>Save</button>\n            <button id=\"close\" onClick={handleClose}>&times;</button>\n          </div>\n        </div>\n      )}\n      <button id=\"commented-button\" onClick={handleShow}>comment</button>\n    </div>\n  );\n}\n\nexport default CommentedPopup;\n","import React, { Component } from \"react\";\nimport TextField from \"@material-ui/core/TextField\";\nimport { connect } from \"react-redux\";\nimport { withRouter } from \"react-router-dom\";\nimport Script from \"../Script/Script.js\";\nimport EditableField from \"../EditableField/EditableField\";\nimport CastMembers from \"../CastMembers/CastMembers\";\nimport Scenes from \"../Scenes/Scenes\";\nimport MsgTypes from \"../MsgTypes/MsgTypes\";\nimport Button from \"@material-ui/core/Button\";\nimport TimeInput from \"../TimeInput/TimeInput.js\"\nimport CommentedPopup from \"../CommentedPopup/CommentedPopup.js\"\nimport html2canvas from 'html2canvas';\nimport Firebase from \"../../firebase/firebase\";\n\nimport \"./EditScript.css\";\n\nclass ConnectedEditScript extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      animateGreeting: \"EditScript-animategreeting\",\n      orderId: \"\",\n      script: props.script ? props.script : null,\n      isNewScript: props.isNewScript,\n      selectedCastId: 1,\n      selectedSceneId: 1,\n      selectedMsgType: \"\",\n      timeSinceLastMsg: \"\",\n      textMsg: \"\",\n      emotion: \"\",\n      allMessages: [],\n      spslm: 0,\n      likedByMap:  props.script ? props.script.getOnlyLikedMsgsAsNodes() : new Map(),\n    };\n  }\n\n  componentWillUnmount() {\n    clearInterval(this.intervalId);\n  }\n\n  componentDidMount() {\n    //hack: use this to fix github pages doing ?/ on pages\n    if (window.location.href.includes(\"?/\")){\n      let actualDestination = window.location.href.split(\"?/\")[1]\n\n      this.props.history.push({\n        pathname: \"/\" + actualDestination\n      });\n    }\n    \n    //TODO do this better\n    if (!this.state.isNewScript){\n      let scriptId = window.location.pathname.replaceAll(\"/editscript/\", \"\")\n\n      if(scriptId != \"\"){\n        var textyng = new Script(scriptId);\n        textyng.grabScriptFromFirebase(scriptId)\n        .then(() => {\n          this.setState({\n            script: textyng,\n            likedByMap: this.generateLikedMap(textyng.getOnlyLikedMsgsAsNodes())\n          })\n        })\n      }\n    }else{\n      this.setState({likedByMap: this.generateLikedMap(this.state.script.getOnlyLikedMsgsAsNodes())})\n    }\n\n    this.intervalId = setInterval(() => {\n      this.setState({ spslm: this.state.spslm + 1 });\n    }, 1000);\n  }\n\n  generateLikedMap(likedMessages){\n    let map = new Map();\n\n    for (let obj of likedMessages) {\n      let key = `${obj.msgLikedId}${obj.msgLikedSenderId}`;\n      map.set(key, true);\n    }\n\n    return map\n  }\n\n  getScriptName = (name) => {\n    this.state.script.updateScriptName(name[1])\n  }\n\n  getAllCast = (cast) => {\n    this.state.script.updateCast(cast)\n  }\n\n  getAllScenes = (scenes) => {\n    this.state.script.updateScene(scenes)\n  }\n\n  getSelectedCast = (cast) => {\n    this.setState({selectedCastId: cast.id}, () => {\n      this.setState({allMessages: this.state.script.getAllMessagesAsNodes()})\n    })\n  }\n\n  getSelectedScene = (scene) => {\n    this.setState({selectedSceneId: scene.id}, () => {\n      this.setState({allMessages: this.state.script.getAllMessagesAsNodes()})\n    })\n  }\n\n  getSelectedMsgType = (value) => {\n    this.setState({ textMsg: value}, () => {\n      this.addNewMessage()\n    });\n  }\n\n  alreadyBeenLikedByselectedCastId = (messageId) => {\n    let likedMsgID = `${messageId}${this.state.selectedCastId}`\n\n    if(this.state.likedByMap.has(likedMsgID)){\n      return this.state.likedByMap.get(likedMsgID)\n    }\n    return false\n  }\n\n  deleteLikedMessage(messageId, whoLikedMsg){\n    this.setState({\n      likedByMap: this.state.likedByMap.set(`${messageId}${whoLikedMsg}`, false)\n    })\n\n    let allMessages = this.state.script.getOnlyLikedMsgsAsNodes()\n    const result = allMessages.find(obj => obj.idOfMsgLiked === messageId && obj.whoLikedMsg === whoLikedMsg);\n\n    if(result.id){\n      this.deleteMessage(result.id)\n    }\n  }\n\n  addNewLikeMsg = (messageId, senderId) => {\n    if(!this.alreadyBeenLikedByselectedCastId(messageId)){\n\n      var milliseconds = Math.floor(Date.now() / 1000)\n\n      let tslmsg = this.state.timeSinceLastMsg\n      if(tslmsg == \"\" || tslmsg == 0){\n        tslmsg = this.state.spslm\n      }\n      let msgData = {\n        id: milliseconds,\n        timeStamp: milliseconds,\n        msgType: \"like\",\n        whoSentLikedMsg: senderId,\n        idOfMsgLiked: messageId,\n        whoLikedMsg: this.state.selectedCastId,\n        tslmsg: tslmsg,\n        sceneId: this.state.selectedSceneId\n      }\n      this.state.script.addNewMessage(msgData)\n\n      let updatedLikedByMap = new Map(this.state.likedByMap);\n      updatedLikedByMap.set(`${messageId}${this.state.selectedCastId}`, true);\n\n      this.setState({\n        likedByMap: updatedLikedByMap,\n        allMessages: this.state.script.getAllMessagesAsNodes(),\n        spslm: 0,\n      })\n    }else{\n      this.deleteLikedMessage(messageId, this.state.selectedCastId)\n    }\n  }\n\n  addNewMessage = () => {\n    var milliseconds = Math.floor(Date.now() / 1000)\n\n    let tslmsg = this.state.timeSinceLastMsg\n    if(tslmsg == \"\" || tslmsg == 0){\n      tslmsg = this.state.spslm\n    }\n\n    let msgData = {\n      id: milliseconds,\n      timeStamp: milliseconds,\n      content: this.state.textMsg,\n      emotion: this.state.emotion,\n      senderId: this.state.selectedCastId,\n      tslmsg: tslmsg,\n      msgType: \"textMsg\",\n      sceneId: this.state.selectedSceneId,\n    }\n\n    if(this.isActionMsg()){\n      msgData.msgType = \"action\"\n    }\n\n    if(this.isAuthorActionMsg()){ \n      msgData.msgType = \"authorAction\"\n    }\n\n    this.state.script.addNewMessage(msgData)\n    this.setState({\n      allMessages: this.state.script.getOnlyTextMsgsAsNodes(),\n      textMsg: \"\",\n      emotion: \"\",\n      spslm: 0,\n    })\n  }\n\n  isActionMsg(){\n    return this.state.emotion == \"y:\"\n  }\n\n  isAuthorActionMsg(){\n    return this.state.emotion == \"yy:\"\n  }\n\n  addNewMsgComment = (comment, idOfMsgCommented, whoSentCommentedMsg) => {\n    var milliseconds = Math.floor(Date.now() / 1000)\n\n    let tslmsg = this.state.timeSinceLastMsg\n    if(tslmsg == \"\" || tslmsg == 0){\n      tslmsg = this.state.spslm\n    }\n\n    let msgData = {\n      id: milliseconds,\n      timeStamp: milliseconds,\n      msgType: \"comment\",\n      content: comment,\n      emotion: this.state.emotion,\n      whoSentCommentedMsg: whoSentCommentedMsg,\n      idOfMsgCommented: idOfMsgCommented,\n      whoCommentedMsg: this.state.selectedCastId,\n      tslmsg: tslmsg,\n      sceneId: this.state.selectedSceneId\n    }\n\n    this.state.script.addNewMessage(msgData)\n    this.setState({\n      allMessages: this.state.script.getOnlyTextMsgsAsNodes(),\n      textMsg: \"\",\n      emotion: \"\",\n      spslm: 0,\n    })\n  }\n\n  addNewMediaMsg = (mediaType, mediaURL, isImg, isAudio, isVideo) => {\n\n    var milliseconds = Math.floor(Date.now() / 1000)\n\n    let tslmsg = this.state.timeSinceLastMsg\n    if(tslmsg == \"\" || tslmsg == 0){\n      tslmsg = this.state.spslm\n    }\n\n    let msgData = {\n      id: milliseconds,\n      timeStamp: milliseconds,\n      content: mediaType,\n      emotion: this.state.emotion,\n      senderId: this.state.selectedCastId,\n      tslmsg: tslmsg,\n      isImg: isImg,\n      isAudio: isAudio,\n      isVideo: isVideo,\n      msgType: \"textMsg\",\n      url: mediaURL,\n      sceneId: this.state.selectedSceneId\n    }\n\n    this.state.script.addNewMessage(msgData)\n    this.setState({\n      allMessages: this.state.script.getOnlyTextMsgsAsNodes(),\n      textMsg: \"\",\n      emotion: \"\",\n      spslm: 0,\n    })\n  }\n\n\n  componentDidUpdate(){\n    if(this.state.script){\n      this.state.script.updateScriptFirebase()\n    }\n  }\n\n  getInputTime = (timeInSeconds) => {\n    this.setState({\n      timeSinceLastMsg: timeInSeconds,\n    })\n  }\n\n  deleteMessage = (id) => {\n    this.state.script.deleteMessage(id)\n    this.setState({allMessages: this.state.script.getOnlyTextMsgsAsNodes()},\n    () => {\n        this.state.script.updateScriptFirebase()\n    });\n  }\n\n  onSaveComment = (message, idOfMsgCommented, whoSentCommentedMsg) => {\n    let existingCommentNode = this.state.script.getCommentNodeByCastIdMsgId(this.state.selectedCastId, idOfMsgCommented)\n    if(existingCommentNode != nil){\n      this.state.script.editNodeContent(existingCommentNode.id, message)\n    }else{\n      this.addNewMsgComment(message, idOfMsgCommented, whoSentCommentedMsg)\n    }\n  }\n\n  grabScreenshot = (url) => {\n    const element = document.getElementById('EditScript-chatArea-id');\n\n    html2canvas(element).then(canvas => {\n      const imageData = canvas.toDataURL();\n      const milliseconds = Math.floor(Date.now() / 1000)\n      const storageRef = Firebase.storage().ref(\"ScreenShot/\" + milliseconds);\n      storageRef.putString(imageData, 'data_url').then(snapshot => {\n        snapshot.ref.getDownloadURL().then(downloadURL => {\n          this.addNewMediaMsg(\"ScreenShot\", downloadURL, true, false, false)\n        });\n      });\n    });\n  }\n\n  getInsertedImg = (url) => {\n    this.addNewMediaMsg(\"InsertImage\", url, true, false, false)\n  }\n\n  getUplodedVideo = (url) => {\n    this.addNewMediaMsg(\"UploadedVideo\", url, false, false, true)\n  }\n\n  getVNURL = (url) => {\n    this.addNewMediaMsg(\"VoiceNote\", url, false, true, false)\n  }\n\n  render() {\n    if(this.state.script){\n        return (\n            <div className=\"EditScript\">\n                <div className=\"EditScript-container l-container\">\n                    <div className=\"EditScript-title\">\n                      <EditableField\n                        name={this.state.script.getScriptName()}\n                        getScriptName={this.getScriptName}\n                      />\n                    </div>\n                    <div className=\"EditScript-scenes\">\n                      <Scenes\n                        scenes = {this.state.script.getAllScenes()}\n                        selectedScene={this.getSelectedScene}\n                        getAllScenes={this.getAllScenes}\n                      />\n                    </div>\n                    <div className=\"EditScript-cast\">\n                      <CastMembers\n                        cast = {this.state.script.getAllCast()}\n                        selectedCast={this.getSelectedCast}\n                        getAllCast={this.getAllCast}\n                      />\n                    </div>\n                    <div className=\"EditScript-textView\">\n                      <MsgTypes\n                        grabScreenshot = {this.grabScreenshot}\n                        getInsertedImg = {this.getInsertedImg}\n                        selectedMsgType = {this.getSelectedMsgType}\n                        getUplodedVideo = {this.getUplodedVideo}\n                        getVNURL = {this.getVNURL}\n                      />\n                      <div id=\"EditScript-chatArea-id\" className=\"EditScript-chatArea\">\n                        {this.state.allMessages.length == 0 &&\n                          <span className=\"EditScript-castMemberPrompt\">click on a cast member to see messages</span>\n                        }\n                        {this.state.allMessages.map((message, index) => (\n                          (message.sceneId == this.state.selectedSceneId)\n                          &&\n                          <DynamicClassAssignment key={index} isActive={message.senderId == this.state.selectedCastId && message.msgType != \"authorAction\"} message={message} index={index} >\n                            {message.isImg &&\n                              <img\n                                className=\"EditScript-imgMsg\"\n                                src={message.url}\n                              />\n                            }\n                            {message.isAudio &&\n                              <audio\n                                className=\"EditScript-audioMsg\"\n                                src={message.url}\n                                controls\n                              />\n                            }\n                            {message.isVideo &&\n                              <video\n                                className=\"EditScript-videoMsg\"\n                                src={message.url}\n                                controls\n                              />\n                            }\n                            {/* //TODO: delete very msgtype like of an original message if original message was deleted */}\n                            {message.msgType == \"like\" && this.state.script.getNodeByMessageId(message.idOfMsgLiked) &&\n                              <div\n                                className=\"ReaderView-msgLike\"\n                              >\n                                <span>\n                                  {this.state.script.getSenderNameFromID(message.whoLikedMsg)}&nbsp;\n                                  liked message&nbsp;\n                                  {this.state.script.getNodeByMessageId(message.idOfMsgLiked).data.MsgIndex}&nbsp;\n                                  by&nbsp;\n                                  {this.state.script.getSenderNameFromID(message.whoSentLikedMsg)}&nbsp;\n                                </span>\n                              </div>\n                            }\n                            {message.msgType == \"action\" &&\n                              <div\n                                className=\"EditScript-msgTypeAction glowing-text\"\n                              >\n                                  <span className=\"EditScript-senderName\">{this.state.script.getSenderNameFromID(message.senderId)}</span>\n                                  <span>y: {message.content}</span> \n                              </div>\n                            }\n                            {message.msgType == \"authorAction\" &&\n                              <div\n                                className=\"EditScript-msgTypeAuthorAction glowing-text\"\n                              >\n                                <div className=\"EditScript-content\">\n                                  yy: {message.content}\n                                </div>\n                              </div>\n                            }\n                            {message.msgType != \"action\" && message.msgType != \"authorAction\" &&\n                              <div className=\"EditScript-isnotactionMsg\">\n                                <span className=\"EditScript-senderName\">{this.state.script.getSenderNameFromID(message.senderId)}</span>\n                                <span className=\"EditScript-senderEmotion\">{message.emotion ? '('+message.emotion + ')': ''}</span>\n                                <span>{message.content}</span>\n                              </div>\n                            }  \n\n                            {/* TODO: find a better way to do this */}\n                            <span className=\"EditScript-msgIndex\">{message.MsgIndex}</span>\n                            <div className=\"EditScript-chatArea-msg-buttons\">\n                              <button className=\"EditScript-chatArea-msg-button\" onClick={() => this.deleteMessage(message.id)}>Delete</button>\n                              <button className=\"EditScript-chatArea-msg-button\" onClick={() => this.addNewLikeMsg(message.id, message.senderId)}>{this.alreadyBeenLikedByselectedCastId(message.id) ? \"Unlike\" : \"Like\"}</button>\n                              <CommentedPopup\n                                className=\"EditScript-chatArea-msg-button\"\n                                idOfMsgCommented={message.id}\n                                whoSentCommentedMsg={message.senderId}\n                                onSave={this.onSaveComment}\n                                alreadySavedValue={this.state.script.getCommentByCastIdMsgId(this.state.selectedCastId, message.id)}\n                              />\n                            </div>\n                            \n                          </DynamicClassAssignment>\n                        ))}\n                      </div>\n\n                      <div className=\"EditScript-sendMessage\">\n                        <TextField\n                          variant=\"outlined\"\n                          className=\"EditScript-sendMessage--input\"\n                          value={this.state.textMsg}\n                          placeholder=\"Type message here\"\n                          onChange={e => {\n                            this.setState({ textMsg: e.target.value });\n                          }}\n                        />\n\n                        <TextField\n                          variant=\"outlined\"\n                          className=\"EditScript-emotions--input\"\n                          value={this.state.emotion}\n                          placeholder=\"Type emotion here\"\n                          onChange={e => {\n                            this.setState({ emotion: e.target.value });\n                          }}\n                        />\n\n                        <TimeInput inputTime={this.getInputTime} />\n                      </div>\n                      \n\n                      <div className=\"EditScript-saveSubmit\">\n                        <div>\n                          <Button\n                            className=\"EditScript-saveSubmit--send\"\n                            variant=\"outlined\"\n                            color=\"primary\"\n                            onClick={() => this.addNewMessage()}\n                          >\n                            Send\n                          </Button>\n                        </div>\n                        <div>\n                          <Button\n                            className=\"EditScript-saveSubmit--save\"\n                            variant=\"outlined\"\n                            color=\"primary\"\n                            onClick={() => this.state.script.updateScriptFirebase()}\n                          >\n                            save\n                          </Button>\n                        </div>\n                      </div>\n                    </div>\n                </div>\n            </div>\n        );\n    }else{\n        return (\n            <div className=\"is-loading\">script loading...</div>\n        )\n    }\n  }\n}\n\nconst mapStateToProps = (state) => {\n  return {};\n};\n\nlet EditScript = withRouter(connect(mapStateToProps)(ConnectedEditScript));\nexport default withRouter(EditScript);\n\n\nconst DynamicClassAssignment = (props) =>{\n\n    if(props.isActive){\n        return (\n            <div className={\"EditScript-chatArea-msg active\"}>\n                {props.children}\n            </div>\n        );\n    }else{\n        return (\n            <div className={\"EditScript-chatArea-msg\"}>\n                {props.children}\n            </div>\n        );\n    }\n  }","import React, { Component } from \"react\";\nimport { connect } from \"react-redux\";\nimport { withRouter } from \"react-router-dom\";\nimport Script from \"../Script/Script.js\";\nimport EditScript from \"../EditScript/EditScript.js\";\n\nvar textyng = new Script(\"NewScript\");\n\nimport \"./NewScript.css\";\n\nclass ConnectedNewScript extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      script: textyng,\n    };\n  }\n\n  render() {\n    return (\n        <div className=\"NewScript\">\n          <EditScript isNewScript={true} script={this.state.script} />\n        </div>\n    );\n  }\n}\n\nconst mapStateToProps = (state) => {\n  return {};\n};\n\nlet NewScript = withRouter(connect(mapStateToProps)(ConnectedNewScript));\nexport default withRouter(NewScript);\n","import React, { Component } from 'react';\nimport axios from 'axios';\nimport Firebase from \"../../firebase/firebase.js\";\n\nimport './Conversation.css';\n\nclass Conversation extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      userInput: '',\n      conversationHistory: [],\n      isTyping: false // added state for typing indicator\n    };\n    this.handleInputChange = this.handleInputChange.bind(this);\n    this.handleSubmit = this.handleSubmit.bind(this);\n    this.scrollDown = this.scrollDown.bind(this); // bind scrollDown function to this component\n  }\n\n  handleInputChange(event) {\n    this.setState({ userInput: event.target.value });\n  }\n\n  async handleSubmit(event) {\n    event.preventDefault();\n    const userInput = this.state.userInput.trim();\n    if (!userInput) return;\n    const conversationHistory = [\n      ...this.state.conversationHistory,\n      { speaker: \"user\", text: userInput },\n    ];\n    this.setState({\n      conversationHistory,\n      userInput: \"\",\n      isTyping: true,\n    });\n  \n    let aiResponse = \"\";\n  \n    try {  \n      if (process.env.NODE_ENV === \"production\") {    \n        const openAIAPI = await Firebase.getOpenAIAPI();\n        const openaiApiKey = Array.isArray(openAIAPI) ? openAIAPI.join(\"\") : openAIAPI;\n        const conversationHistory = await Firebase.getConversationHistory()\n        const conversationHistoryString = conversationHistory.join(\"\");\n\n        const { Configuration, OpenAIApi } = require(\"openai\");\n        const configuration = new Configuration({\n          apiKey: openaiApiKey,\n        });\n        const openai = new OpenAIApi(configuration);\n        const response = await openai.createCompletion({\n          model: \"text-davinci-003\",\n          prompt: `${conversationHistoryString}\\nUser: ${userInput}\\nAI:`,\n          max_tokens: 150,\n          n: 1,\n          stop: [\"\\nUser:\", \"AI:\"]\n        });\n  \n        aiResponse = response.data.choices[0].text.trim();\n      } else {\n        const response = await axios.post(\"http://localhost:5000/ask\", {\n          inputText: userInput,\n        });\n\n        aiResponse = response.data\n      }\n  \n      const newConversationHistory = [\n        ...this.state.conversationHistory,\n        { speaker: \"ai\", text: aiResponse },\n      ];\n      this.setState(\n        { conversationHistory: newConversationHistory, isTyping: false },\n        this.scrollDown\n      );\n    } catch (error) {\n      console.log(error);\n    }\n  }\n  \n  // this function will scroll the conversationHistory div to the bottom\n  scrollDown() {\n    const conversationHistory = document.querySelector('.Conversation-history');\n    conversationHistory.scrollTop = conversationHistory.scrollHeight;\n  }\n\n  oncloseCoonversationClick() {\n    this.props.oncloseCoonversationClick();\n  }\n  \n  render() {\n    const { conversationHistory, userInput, isTyping } = this.state;\n\n    return (\n      <div className=\"Conversation-container l-container\">\n        <div className=\"Conversation-history\">\n          {conversationHistory.map((message, i) => (\n            <div key={i} className={\"Conversation-message\"}>\n              <div className=\"message-text\">{message.text}</div>\n            </div>\n          ))}\n          {isTyping && // render typing indicator if isTyping is true\n            <div className=\"Conversation-message ai Conversation-loader\">\n              <div className=\"message-text\">\n                <div className=\"typing-indicator\">\n                  <span></span>\n                  <span></span>\n                  <span></span>\n                </div>\n              </div>\n            </div>\n          }\n        </div>\n        <form className=\"Conversation-input\" onSubmit={this.handleSubmit}>\n          <input type=\"text\" value={userInput} onChange={this.handleInputChange} />\n          <button type=\"submit\">Send</button>\n        </form>\n      </div>\n    );\n  }\n}\n\nexport default Conversation;\n","import React, { Component } from \"react\";\nimport { connect } from \"react-redux\";\nimport { withRouter } from \"react-router-dom\";\nimport Script from \"../Script/Script.js\";\nimport { Emoji } from 'emoji-mart'\nimport Conversation from \"../Conversation/Conversation.js\";\n\nimport \"./ReaderView.css\";\n\nclass ConnectedReaderView extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      script: null,\n      allMessages: [],\n      currentNodeIndex: 0,\n      selectedSceneId: 1,\n      timeoutId: null,\n      isPlaying: true,\n      showConversation: false,\n    };\n\n    this.emojis = [\n      {name: \"rolling_on_the_floor_laughing\", set: \"twitter\", size: 14, className: \"ReaderView-reactionEmoji\"},\n      {name: \"relaxed\", set: \"twitter\", size: 14, className: \"ReaderView-reactionEmoji\"},\n      {name: \"angry\", set: \"twitter\", size: 14, className: \"ReaderView-reactionEmoji\"},\n      {name: \"astonished\", set: \"twitter\", size: 14, className: \"ReaderView-reactionEmoji\"},\n      {name: \"kissing_heart\", set: \"twitter\", size: 14, className: \"ReaderView-reactionEmoji\"},\n      {name: \"exploding_head\", set: \"twitter\", size: 14, className: \"ReaderView-reactionEmoji\"},\n      {name: \"pensive\", set: \"twitter\", size: 14, className: \"ReaderView-reactionEmoji\"},\n      {name: \"scream\", set: \"twitter\", size: 14, className: \"ReaderView-reactionEmoji\"},\n    ]\n  }\n\n  componentDidUpdate(){\n    if(document.querySelector('.ReaderView-chatArea')){\n      const chatArea = document.querySelector(\".ReaderView-chatArea\");\n      const startPosition = chatArea.scrollTop;\n      const endPosition = chatArea.scrollHeight;\n      const duration = 1000; // 1 second\n      const numberOfSteps = 10;\n      const stepDuration = duration / numberOfSteps;\n      const scrollAmount = (endPosition - startPosition) / numberOfSteps;\n      \n      let currentStep = 0;\n    \n      const animateScrollStep = function() {\n        chatArea.scrollTop += scrollAmount;\n        currentStep++;\n        if (currentStep < numberOfSteps) {\n          setTimeout(animateScrollStep, stepDuration);\n        }\n      }\n    \n      setTimeout(animateScrollStep, stepDuration);\n    }\n\n    const currentScene = document.querySelector(\".ReaderView-scene--currentScene\");\n    const scenes = document.querySelector(\".ReaderView-scenes\");\n    if (currentScene) {\n      scenes.scrollLeft = currentScene.offsetLeft - scenes.offsetLeft - (scenes.offsetWidth - currentScene.offsetWidth) / 2;\n    }\n\n    if(document.querySelector('.ReaderView-readerReaction')){\n      const chatArea = document.querySelector(\".ReaderView-readerReaction\");\n      chatArea.scrollLeft = chatArea.scrollWidth;\n    }\n\n    const msgElements = document.querySelectorAll(\".ReaderView-chatArea-msg\");\n    for (const msgElement of msgElements) {\n      if (msgElement.getAttribute(\"data-attribute-ispotagonist\") === \"true\") {\n        msgElement.classList.add(\"isProtagonist\");\n      }\n    }\n  }\n\n  componentDidMount() {\n    let scriptId = this.props.match.params.id\n    if (scriptId == \"\") {\n      scriptId = \"NewScript1674709550\"\n    }\n\n    let textyng = new Script(scriptId);\n    textyng\n      .grabScriptFromFirebase(scriptId)\n      .then(() => {\n        this.setState({ script: textyng }, () => {\n          this.updateCurrentNode();\n          // this.startAutoPlay(); TODO: uncomment this line to autoplay\n          this.handleNextClick();\n        });\n      });\n  }\n\n  updateCurrentNode(index = this.state.currentNodeIndex + 1) {\n    if (!this.state.script || !this.state.script.getNthMessageNode(index)) {\n      return;\n    }\n  \n    let sceneId = this.state.script.getNthMessageNode(index).sceneId;\n    if (sceneId === undefined) {\n        sceneId = this.state.script.getTotalNumScenes();\n    }\n    this.setState({\n        currentNodeIndex: index,\n        allMessages: this.state.script.getAllMessagesAsNodes().slice(0, index),\n        selectedSceneId: sceneId\n    });\n  }\n\n  startAutoPlay() {\n    if (this.state.isPlaying && this.state.currentNodeIndex < this.state.script.getAllMessagesAsNodes().length) {\n      this.setState({\n        timeoutId: setTimeout(() => {\n          this.handleNextClick();\n        }, this.state.script.getNthMessageNode(this.state.currentNodeIndex).tslmsg * 20)\n      });\n    }\n  }\n\n  handlePreviousClick = () => {\n    // check if script is null\n    if (!this.state.script) {\n        return;\n    }\n    clearTimeout(this.state.timeoutId);\n    this.setState(prevState => {\n        if (prevState.currentNodeIndex === 0) {\n            return {}; // no further action needed\n        }\n        let prevNodeIndex = prevState.currentNodeIndex - 1;\n        let sceneId = this.state.script.getNthMessageNode(prevNodeIndex).sceneId;\n        if (sceneId === undefined) {\n            sceneId = this.state.script.getTotalNumScenes();\n        }\n        let newAllMessages = prevState.allMessages.slice();\n        if (prevState.allMessages.length === 1) {\n            newAllMessages = prevState.allMessages; // don't update to an empty array\n        } else {\n            newAllMessages = this.state.script.getAllMessagesAsNodes().slice(0, prevNodeIndex);\n        }\n        return {\n            currentNodeIndex: prevNodeIndex,\n            allMessages: newAllMessages,\n            selectedSceneId: sceneId\n        };\n    });\n  };\n\n  handleSpanClick = () => {\n    console.log(\"span clicked\")\n    this.setState({ showConversation: true });\n  }\n\n  handlePlayPauseClick = () => {\n    clearTimeout(this.state.timeoutId);\n    this.setState(prevState => ({ isPlaying: !prevState.isPlaying }));\n  };\n\n  handleNextClick = () => {\n    clearTimeout(this.state.timeoutId);\n    this.updateCurrentNode(this.state.currentNodeIndex + 1);\n    // this.startAutoPlay(); //TODO: uncomment this line to autoplay\n  };\n\n  getScriptName = (name) => {\n    return name[1]\n  }\n\n  selectThisScene = (sceneId) => {\n    this.setState({\n      selectedSceneId: sceneId,\n      allMessages: this.state.script.getAllMessagesAsNodes(),\n    })\n  }\n\n  reactionClicked = (emojiName, messageId, event) => {\n    event.currentTarget.classList.add('shake');\n    this.state.script.updateReaderReaction(emojiName, messageId)\n  }\n\n  getReaderReactionFromMsg = () => {\n    let reactionArray = [];\n    this.state.allMessages.forEach(message => {\n      if(this.state.script.getReaderReactionMap().has(message.id.toString())) {\n        reactionArray.push(...this.state.script.getReaderReactionMap().get(message.id.toString()));\n      }\n    });\n\n    let readerEmojiReactions = reactionArray.map((emoji, index) => (\n      <Emoji\n        emoji={emoji}\n        set={\"twitter\"}\n        size={14}\n        key={index}\n        className=\"ReaderView-reactionEmoji\"\n      />\n    ));\n\n    return readerEmojiReactions\n  }\n\n  closeConversation = () => {\n    this.setState({ showConversation: false });\n  }\n\n  render() {\n    const { script, selectedMessageIndex } = this.state;\n    const senderName = (message) => script.getSenderNameFromID(message.senderId);\n    \n\t\tif(this.state.allMessages && this.state.allMessages.length > 0){\n\t\t\treturn (\n        <div className=\"ReaderView\">\n          <div className=\"ReaderView-container l-container\">\n            <div className=\"ReaderView-title\">\n              {this.state.script.getScriptName()}\n            </div>\n            <div className=\"ReaderView-scenes\">\n              {this.state.script.getScenes()\n              .map((scene, index) =>\n                scene.id == this.state.selectedSceneId ? (\n                  <div key={index} onClick={() => this.selectThisScene(scene.id)} className=\"ReaderView-scene ReaderView-scene--currentScene\">\n                    {scene.name}\n                  </div>\n                ) : (\n                  <div key={index} onClick={() => this.selectThisScene(scene.id)} className=\"ReaderView-scene\">\n                    {scene.name}\n                  </div>\n                )\n              )}\n            </div>\n            <div className=\"ReaderView-msgCounts\">\n              {this.state.allMessages.length} / {this.state.script.getAllMessagesAsNodes().length}\n            </div>\n            <div className=\"ReaderView-textView\">\n              <div id=\"ReaderView-chatArea-id\" className=\"ReaderView-chatArea\">\n                {this.state.allMessages\n                .map((message, index) => (\n                  (message.sceneId == this.state.selectedSceneId)\n                  &&\n                  <div key={index} className=\"ReaderView-chatArea-msg\" data-attribute-ispotagonist={message.senderId === 1 ? true : false}>\n                    {message.isImg &&\n                      <img\n                        className=\"ReaderView-imgMsg\"\n                        src={message.url}\n                      />\n                    }\n                    {message.isAudio &&\n                      <audio\n                        className=\"ReaderView-audioMsg\"\n                        src={message.url}\n                        controls\n                      />\n                    }\n                    {message.isVideo &&\n                      <video\n                        className=\"ReaderView-videoMsg\"\n                        src={message.url}\n                        controls\n                      />\n                    }\n                    {/* //TODO: delete very msgtype like of an original message if original message was deleted */}\n                    {message.msgType == \"like\" && this.state.script.getNodeByMessageId(message.idOfMsgLiked) &&\n                      <div\n                        className=\"ReaderView-msgLike\"\n                      >\n                        <span>\n                          {this.state.script.getSenderNameFromID(message.whoLikedMsg)}&nbsp;\n                          liked message&nbsp;\n                          {this.state.script.getNodeByMessageId(message.idOfMsgLiked).data.MsgIndex}&nbsp;\n                          by&nbsp;\n                          {this.state.script.getSenderNameFromID(message.whoSentLikedMsg)}&nbsp;\n                        </span>\n                      </div>\n                    }\n                    {message.msgType == \"action\" &&\n                      <div\n                        className=\"ReaderView-msgTypeAction glowing-text\"\n                      >\n                          <span className=\"ReaderView-senderName\">{this.state.script.getSenderNameFromID(message.senderId)}</span>\n                          <span>y: {message.content}</span> \n                      </div>\n                    }\n                    {message.msgType == \"authorAction\" &&\n                      <div\n                        className=\"ReaderView-msgTypeAuthorAction glowing-text\"\n                      >\n                        <div className=\"ReaderView-content\">\n                          yy: {message.content}\n                        </div>\n                      </div>\n                    }\n                    {message.msgType != \"action\" && message.msgType != \"authorAction\" &&\n                      <div className=\"ReaderView-isnotactionMsg\">\n                        {this.state.showConversation ? (\n                          <div className=\"ReaderView-conversation-container\">\n                            <div className=\"ReaderView-conversation-close\" onClick={this.closeConversation}>\n                              X\n                            </div>\n                            <Conversation\n                              className = \"ReaderView-conversation\"\n                              messages={script.messages}\n                              selectedMessageIndex={selectedMessageIndex}\n                              oncloseCoonversationClick={this.closeConversation}\n                              senderName={senderName}  \n                            />\n                          </div>\n                        ) : (\n                          <span className=\"ReaderView-senderName checking something!\" onClick={this.handleSpanClick}>\n                            {this.state.script.getSenderNameFromID(message.senderId)}\n                          </span>\n                        )}\n                        <span className=\"ReaderView-senderEmotion\">{message.emotion ? '('+message.emotion + ')': ''}</span>\n                        <span>{message.content}</span>\n                      </div>\n                    }  \n                    <span className=\"ReaderView-msgIndex\">{message.MsgIndex}</span>\n                    <div className=\"ReaderView-reactionEmojis-container\">\n                      <div className=\"ReaderView-reactionEmojis\">\n                        {this.emojis.map((emoji, index)=> \n                          <div\n                            key={index}\n                            className=\"ReaderView-reactionEmoji\"\n                            onClick={(e) => this.reactionClicked(emoji.name, message.id, e)}\n                          >\n                            <Emoji \n                              emoji={emoji.name}\n                              set={emoji.set} \n                              size={emoji.size} \n                              key={emoji.name} \n                              className=\"ReaderView-reactionEmoji\"\n                            />\n                          </div>\n                        )}\n                      </div>\n                    </div>\n                  </div>\n                ))}\n              </div>\n            </div>\n            <div className=\"ReaderView-readerReaction--wrapper\">\n              <div className=\"ReaderView-readerReaction\"> {this.getReaderReactionFromMsg()}</div>                       \n            </div>\n            <div className=\"ReaderView-navigation\">\n              <div className=\"ReaderView-navigation--wrapper\">\n                <div className=\"previous-button\" onClick={this.handlePreviousClick}>\n                  <i className=\"fas fa-arrow-left\"></i>\n                </div>\n                {/* <div className=\"play-pause-button\" onClick={this.handlePlayPauseClick}>\n                  {this.state.isPlaying ? \n                    <i className=\"fas fa-pause\"></i> : \n                    <i className=\"fas fa-play\"></i>\n                  }  //TODO: add play pause functionality\n                </div> */}\n                <div className=\"next-button\" onClick={this.handleNextClick}>\n                  <i className=\"fas fa-arrow-right\"></i>\n                </div>\n              </div>\n            </div>\n          </div>\n        </div>\n    \t);\n\t\t}else{\n\t\t\treturn (\n        <div className=\"ReaderView is-loading\">\n\t\t\t\t\trytriving script\n        </div>\n    \t);\n\t\t}\n  }\n}\n\nconst mapStateToProps = (state) => {\n  return {};\n};\n\nlet ReaderView = withRouter(connect(mapStateToProps)(ConnectedReaderView));\nexport default withRouter(ReaderView);\n","import React, { Component } from 'react';\nimport { connect } from \"react-redux\";\nimport { withRouter } from \"react-router-dom\";\n\nimport './HomePage.css';\n\nclass ConnectedHomePage extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      leftText: '',\n      rightText: '',\n      leftCounter: 0,\n      rightCounter: 0,\n    };\n  }\n\n  componentDidMount() {\n    this.typeWriter();\n  }\n\n  typeWriter = () => {\n    const { leftText, rightText, leftCounter, rightCounter } = this.state;\n    const leftMessage = 'ryting';\n    const rightMessage = 'ryeading?';\n\n    if (leftCounter < leftMessage.length) {\n      this.setState({\n        leftText: leftText + leftMessage.charAt(leftCounter),\n        leftCounter: leftCounter + 1,\n      });\n    }\n\n    if (rightCounter < rightMessage.length) {\n      this.setState({\n        rightText: rightText + rightMessage.charAt(rightCounter),\n        rightCounter: rightCounter + 1,\n      });\n    }\n\n    setTimeout(this.typeWriter, 150);\n  };\n\n  render() {\n    const { leftText, rightText } = this.state;\n    return (\n      <div className=\"HomePage\">\n        <div className=\"HomePage__left-side\">\n          <div className=\"HomePage__left-side-a\" onClick={() => this.props.changePage(\"newscript\")}>\n            <h1 className=\"HomePage__text HomePage__text--glossy\">{leftText}</h1>\n          </div>\n        </div>\n        <div className=\"HomePage__demarcation\">\n          <div className=\"HomePage-or\">or</div>\n        </div>\n        <div className=\"HomePage__right-side\">\n          <div className=\"HomePage__right-side-a\" onClick={() => this.props.changePage(\"searchscripts\")}>\n            <h1 className=\"HomePage__text HomePage__text--glossy\">{rightText}</h1>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = (state) => {\n  return {};\n};\n\nlet HomePage = withRouter(connect(mapStateToProps)(ConnectedHomePage));\nexport default withRouter(HomePage);\n\n","import React, { Component } from 'react';\nimport { connect } from \"react-redux\";\nimport { withRouter } from \"react-router-dom\";\nimport Firebase from \"../../firebase/firebase\";\nimport { ConvertSecondsToDate } from \"../../Helpers/Helpers.js\";\n\nimport \"./SearchScripts.css\";\n\nclass ConnectedSearchScripts extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            searchBarUp: false,\n            results: [],\n            searchTerm: \"\",\n            scripts: [],\n        };\n        this.handleFocus = this.handleFocus.bind(this);\n        this.handleBlur = this.handleBlur.bind(this);\n        this.handleSearch = this.handleSearch.bind(this);\n        this.selectResult = this.selectResult.bind(this);\n    }\n\n    componentDidMount(){\n       Firebase.getScripts().then( val => {\n        this.setState({\n            scripts: val,\n            results: val\n        })\n       })\n    }\n\n\n    handleSearch(e) {\n        this.setState({\n            searchTerm: e.target.value,\n        });\n\n        if (this.state.scripts) {\n            const results = this.state.scripts.filter((item) =>\n            item.name.toLowerCase().includes(e.target.value.toLowerCase())\n            )\n            this.setState({ results });\n        } else {\n            console.log('data is not defined');\n        }\n\n        if(e.target.value == \"\"){\n            this.setState({ results: this.state.scripts });\n        }\n    }\n\n    handleFocus() {\n        this.setState({ searchBarUp: true });\n    }\n\n    handleBlur() {\n        if(!this.state.results.length){\n            this.setState({ searchBarUp: false });\n        }\n    }\n\n    selectResult(id, isPrivateScript) {\n        if(isPrivateScript){\n            var tenure = prompt(\"Please enter master password to read private\", \"\");\n            if (tenure != null && tenure == \"7779\") {\n                this.props.history.push({\n                    pathname: `/readerview/${id}`\n                });\n            }\n        }else{\n            this.props.history.push({\n                pathname: `/readerview/${id}`\n            });\n        }\n    }\n\n    render() {\n    return (\n        <div className=\"SearchScripts-scripts\">\n        <div className=\"SearchScripts-bar\" style={{ top: this.state.searchBarUp ? \"-40%\" : \"-30%\" }}>\n            <input type=\"text\" placeholder=\"what are you ryeading?\" onChange={this.handleSearch} onFocus={this.handleFocus} onBlur={this.handleBlur} />\n        </div>\n        <div className=\"SearchScripts-results\">\n            <p className=\"SearchScripts-resultCount\">{this.state.results.length} movies</p>\n            {this.state.results.map((result) => (\n                <div className=\"SearchScripts-eachResult\" key={result.id} onClick={() => this.selectResult(result.id, result.isPrivateScript)}>\n                    <h3>{result.name}</h3>\n                    <p className=\"SearchScripts-eachResult-dateCreated\">{ConvertSecondsToDate(result.dateCreated)}</p>\n                </div>\n            ))}\n        </div>\n        </div>\n    );\n    }\n}\n\n\nconst mapStateToProps = (state) => {\n  return {};\n};\n\nlet SearchScripts = withRouter(connect(mapStateToProps)(ConnectedSearchScripts));\nexport default withRouter(SearchScripts);\n\n","import React, { Component } from \"react\";\nimport \"./ScriptGenerator.css\";\n\nclass ScriptGenerator extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      inputJson: \"\",\n      outputScript: \"\",\n      scriptName: \"\",\n      castMembers: [],\n      messages: [],\n      error: \"\",\n    };\n  }\n\n  handleChange = (event) => {\n    const inputJson = event.target.value;\n    this.setState({ inputJson });\n  };\n\n  generateScript = () => {\n    try {\n      const data = JSON.parse(this.state.inputJson);\n      const scriptName = data.name;\n      const messages = data.messages || [];\n      const castMembers = data.cast.map((member) => member.name);\n      const messagesByMsgIndex = messages.slice().sort((a, b) => a.msgIndex - b.msgIndex);\n      const scriptLines = [];\n      scriptLines.push(`${scriptName.toUpperCase()}`);\n    \n      for (let i = 0; i < messagesByMsgIndex.length; i++) {\n        const message = messagesByMsgIndex[i];\n        const member = castMembers[message.senderId - 1];\n        scriptLines.push(`\\n${member.toUpperCase()}:`);\n        scriptLines.push(`${member}: ${message.content}`);\n      }\n    \n      const outputScript = scriptLines.join(\"\\n\");\n      this.setState({ outputScript, scriptName, castMembers, messages });\n    } catch (error) {\n      this.setState({ error: \"Invalid JSON input\" });\n    }\n  };\n  \n  render() {\n    const { inputJson, outputScript, scriptName, messages, error } = this.state;\n    let castMembers = [];\n  \n    if (outputScript) {\n      castMembers = messages.reduce((members, message) => {\n        if (!members.includes(message.senderId)) {\n          members.push(message.senderId);\n        }\n        return members;\n      }, []);\n    }\n  \n    return (\n      <div className=\"script-generator l-container\">\n        <div className=\"script-generator__header\">Script Generator</div>\n        <div className=\"script-generator__content\">\n          <div className=\"script-generator__input-wrapper\">\n            <textarea\n              className=\"script-generator__input\"\n              value={inputJson}\n              onChange={this.handleChange}\n              placeholder=\"Paste your JSON here\"\n            />\n          </div>\n          <button className=\"script-generator__button\" onClick={this.generateScript}>\n            Generate Script\n          </button>\n          {error && <div className=\"script-generator__error\">{error}</div>}\n          {outputScript && (\n            <div className=\"script-generator__output-wrapper\">\n              <div className=\"script-generator__output-header\">{scriptName.toUpperCase()}</div>\n              <div className=\"script-generator__cast\">\n                {outputScript}\n              </div>\n            </div>\n          )}\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default ScriptGenerator;","import React, { Component } from \"react\";\nimport Footer from \"../Footer/Footer.js\";\nimport Header  from \"../Header/Header.js\";\nimport NewScript from \"../NewScript/NewScript.js\"\nimport ReaderView from \"../ReaderView/ReaderView.js\"\nimport EditScript from \"../EditScript/EditScript.js\"\nimport HomePage from \"../HomePage/HomePage.js\"\nimport SearchScripts from \"../SearchScripts/SearchScripts.js\"\nimport Conversation from \"../Conversation/Conversation.js\"\nimport ScriptGenerator from \"../ScriptGenerator/ScriptGenerator.js\"\n\nimport \"./Layout.css\";\n\n\nclass Layout extends Component{\n  constructor(props){\n    super(props);\n\n    this.state = {\n        pageName: this.props.pageName\n    }\n  }\n\n  componentDidMount(){\n    //hack: use this to fix github pages doing ?/ on pages\n    if (window.location.href.includes(\"?/\")){\n      let actualDestination = window.location.href.split(\"?/\")[1]\n\n      this.props.history.push({\n        pathname: \"/\" + actualDestination\n      });\n    }\n\n    document.getElementById(\"layoutContent\").classList.add(this.state.pageName);\n  }\n\n  componentDidUpdate(){\n\n    const layoutContent = document.getElementById(\"layoutContent\")\n\n    layoutContent.className = ''\n\n    layoutContent.classList.add(\"Layout-content\")\n    layoutContent.classList.add(this.state.pageName);\n  }\n\n  changePage = (pageToChange) => {\n    window.history.pushState('', 'New Page Title', '/' + pageToChange);\n    this.setState({pageName: pageToChange})\n  }\n\n  render(){\n    return (\n        <div className=\"Layout\">\n            <div className=\"Layout-header\">\n                <Header changePage={this.changePage}/>\n            </div>\n            <div className=\"Layout-content\" id=\"layoutContent\">\n                {this.state.pageName == \"textyng\" &&\n                    <HomePage changePage={this.changePage}/>\n                }\n                {this.state.pageName == \"newscript\" &&\n                    <NewScript changePage={this.changePage}/>\n                }\n                {this.state.pageName == \"readerview\" &&\n                    <ReaderView changePage={this.changePage}/>\n                }\n                {this.state.pageName == \"editscript\" &&\n                    <EditScript changePage={this.changePage}/>\n                }\n                {this.state.pageName == \"searchscripts\" &&\n                    <SearchScripts changePage={this.changePage}/>\n                }\n                {this.state.pageName == \"conversation\" &&\n                    <Conversation changePage={this.changePage}/>\n                }   \n                {this.state.pageName == \"scriptgenerator\" &&\n                    <ScriptGenerator changePage={this.changePage}/>\n                }            \n            </div>\n            <div className=\"Layout-footer\">\n                <Footer />\n            </div>\n        </div>\n    )}\n}\n\nexport default Layout;\n","import React, { Component } from 'react';\nimport { BrowserRouter, HashRouter, Switch, Route } from 'react-router-dom';\nimport Layout from \"./components/Layout/Layout.js\"\n\nimport \"./App.css\";\n\nconst Router = process.env.NODE_ENV === 'production' ? HashRouter : BrowserRouter;\n\n\n//textyng - about everything\n\nwindow.onresize = function() {\n  document.getElementsByClassName(\"App\").height = window.innerHeight;\n}\nwindow.onresize();\n\nclass App extends Component {\n  render() {\n    return (\n        <Router>\n            <div className=\"App\">\n                <div className=\"App-content\">\n                    <Switch>\n                        <Route path=\"/\" exact component={() => (<Layout pageName=\"textyng\" />)} />\n                        <Route path=\"/textyng\" exact component={() => (<Layout pageName=\"textyng\" />)} />\n                        <Route path=\"/newscript\" exact component={() => (<Layout pageName=\"newscript\" />)} />\n                        <Route path=\"/readerview/:id\" exact component={() => (<Layout pageName=\"readerview\" />)} />\n                        <Route path=\"/editscript/:id\" exact component={() => (<Layout pageName=\"editscript\" />)} />\n                        <Route path=\"/searchscripts\" exact component={() => (<Layout pageName=\"searchscripts\" />)} />\n                        <Route path=\"/conversation\" exact component={() => (<Layout pageName=\"conversation\" />)} />\n                        <Route path=\"/scriptgenerator\" exact component={() => (<Layout pageName=\"scriptgenerator\" />)} />\n                    </Switch>\n                </div>\n            </div>\n        </Router>\n    );\n}\n}\n\nexport default App;\n","export const SET_YOKIS = \"SET_YOKIS_ITEMS\";\n","import * as CONSTANTS from \"./Constants\";\n\n// If multiple components need access to some data, in that case we store such data in redux.\nconst initialState = {\n  yokis: [],\n};\n\nconst rootReducer = (state = initialState, action) => {\n  switch (action.type) {\n    case CONSTANTS.SET_YOKIS:\n      return { ...state, yokis: action.payload };\n    default:\n      return state;\n  }\n};\n\nexport default rootReducer;\n","import { createStore } from \"redux\";\nimport rootReducer from \"./Reducer\";\n\nconst store = createStore(rootReducer);\n\nexport default store;\n","const config = {\n  apiKey: \"AIzaSyCtlY88fmnAbNOZIRemBADFMvicXjKOjFQ\",\n  authDomain: \"textyng.firebaseapp.com\",\n  projectId: \"textyng\",\n  storageBucket: \"textyng.appspot.com\",\n  messagingSenderId: \"892488022331\",\n  appId: \"1:892488022331:web:25a6af11d37b5ef3939f1e\",\n  measurementId: \"G-X3VZXJEPLP\"\n};\n\nexport default config","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./src/App\";\nimport { BrowserRouter } from \"react-router-dom\";\nimport { Provider } from \"react-redux\";\nimport store from \"./src/Redux/Store\";\nimport firebase from \"firebase\";\nimport config from './src/firebase/config.js';\n\nif (!firebase.apps.length) {\n  firebase.initializeApp(config);\n}\n\nlet app = (\n  <Provider store={store}>\n    <BrowserRouter>\n      <App />\n    </BrowserRouter>\n  </Provider>\n);\n\nwindow.__MUI_USE_NEXT_TYPOGRAPHY_VARIANTS__ = true;\n\nReactDOM.render(app, document.getElementById(\"root\"));\n\n\n//persistence after page refresh\n\n// https://stackoverflow.com/questions/39097440/on-react-router-how-to-stay-logged-in-state-even-page-refresh","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n// expose the modules object (__webpack_modules__)\n__webpack_require__.m = __webpack_modules__;\n\n","var deferred = [];\n__webpack_require__.O = (result, chunkIds, fn, priority) => {\n\tif(chunkIds) {\n\t\tpriority = priority || 0;\n\t\tfor(var i = deferred.length; i > 0 && deferred[i - 1][2] > priority; i--) deferred[i] = deferred[i - 1];\n\t\tdeferred[i] = [chunkIds, fn, priority];\n\t\treturn;\n\t}\n\tvar notFulfilled = Infinity;\n\tfor (var i = 0; i < deferred.length; i++) {\n\t\tvar [chunkIds, fn, priority] = deferred[i];\n\t\tvar fulfilled = true;\n\t\tfor (var j = 0; j < chunkIds.length; j++) {\n\t\t\tif ((priority & 1 === 0 || notFulfilled >= priority) && Object.keys(__webpack_require__.O).every((key) => (__webpack_require__.O[key](chunkIds[j])))) {\n\t\t\t\tchunkIds.splice(j--, 1);\n\t\t\t} else {\n\t\t\t\tfulfilled = false;\n\t\t\t\tif(priority < notFulfilled) notFulfilled = priority;\n\t\t\t}\n\t\t}\n\t\tif(fulfilled) {\n\t\t\tdeferred.splice(i--, 1)\n\t\t\tvar r = fn();\n\t\t\tif (r !== undefined) result = r;\n\t\t}\n\t}\n\treturn result;\n};","// getDefaultExport function for compatibility with non-harmony modules\n__webpack_require__.n = (module) => {\n\tvar getter = module && module.__esModule ?\n\t\t() => (module['default']) :\n\t\t() => (module);\n\t__webpack_require__.d(getter, { a: getter });\n\treturn getter;\n};","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.g = (function() {\n\tif (typeof globalThis === 'object') return globalThis;\n\ttry {\n\t\treturn this || new Function('return this')();\n\t} catch (e) {\n\t\tif (typeof window === 'object') return window;\n\t}\n})();","__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))","// define __esModule on exports\n__webpack_require__.r = (exports) => {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","__webpack_require__.p = \"/\";","// no baseURI\n\n// object to store loaded and loading chunks\n// undefined = chunk not loaded, null = chunk preloaded/prefetched\n// [resolve, reject, Promise] = chunk loading, 0 = chunk loaded\nvar installedChunks = {\n\t179: 0\n};\n\n// no chunk on demand loading\n\n// no prefetching\n\n// no preloaded\n\n// no HMR\n\n// no HMR manifest\n\n__webpack_require__.O.j = (chunkId) => (installedChunks[chunkId] === 0);\n\n// install a JSONP callback for chunk loading\nvar webpackJsonpCallback = (parentChunkLoadingFunction, data) => {\n\tvar [chunkIds, moreModules, runtime] = data;\n\t// add \"moreModules\" to the modules object,\n\t// then flag all \"chunkIds\" as loaded and fire callback\n\tvar moduleId, chunkId, i = 0;\n\tif(chunkIds.some((id) => (installedChunks[id] !== 0))) {\n\t\tfor(moduleId in moreModules) {\n\t\t\tif(__webpack_require__.o(moreModules, moduleId)) {\n\t\t\t\t__webpack_require__.m[moduleId] = moreModules[moduleId];\n\t\t\t}\n\t\t}\n\t\tif(runtime) var result = runtime(__webpack_require__);\n\t}\n\tif(parentChunkLoadingFunction) parentChunkLoadingFunction(data);\n\tfor(;i < chunkIds.length; i++) {\n\t\tchunkId = chunkIds[i];\n\t\tif(__webpack_require__.o(installedChunks, chunkId) && installedChunks[chunkId]) {\n\t\t\tinstalledChunks[chunkId][0]();\n\t\t}\n\t\tinstalledChunks[chunkId] = 0;\n\t}\n\treturn __webpack_require__.O(result);\n}\n\nvar chunkLoadingGlobal = self[\"webpackChunkweb\"] = self[\"webpackChunkweb\"] || [];\nchunkLoadingGlobal.forEach(webpackJsonpCallback.bind(null, 0));\nchunkLoadingGlobal.push = webpackJsonpCallback.bind(null, chunkLoadingGlobal.push.bind(chunkLoadingGlobal));","// startup\n// Load entry module and return exports\n// This entry module depends on other loaded chunks and execution need to be delayed\nvar __webpack_exports__ = __webpack_require__.O(undefined, [313], () => (__webpack_require__(579)))\n__webpack_exports__ = __webpack_require__.O(__webpack_exports__);\n"],"names":["Footer","props","state","catSelected","findMeIconHover","className","Component","Header","this","setState","createIconHover","meCardsIconHover","changePage","path","window","location","pathname","includes","element","document","getElementById","setInterval","randomInterval","Math","floor","random","setTimeout","currentBorderRadius","style","borderRadius","iconName","fillColor","onClick","handleCategoryClick","id","src","logo","alt","fill","xmlns","height","width","viewBox","d","x","y","transform","getScripts","Promise","resolve","firebase","ref","once","then","snapshot","val","Object","values","createNewScript","script","set","name","dateCreated","cast","crew","messages","isPrivateScript","response","console","log","catch","error","updateScript","update","scenes","readerReactionMap","getOpenAIAPI","getConversationHistory","getRimiSenTitles","postChats","seller","buyer","message","productId","senderID","push","content","timestamp","Date","now","uid","storage","getScriptById","updateSenTitle","senTitle","newSenTitle","updateId","remove","sendForApproval","item","updateVideoSnippetURL","orderId","snippetVideoURL","MessageNode","data","next","milliseconds","head","node","totalNoMsgs","Map","updateIsPrivateScript","startsWith","count","emojiName","messageId","has","get","updateScriptFirebase","getScenes","length","current","MsgIndex","newNode","n","i","senderId","msgType","castId","msgId","result","getOnlyCommentsAsNodes","find","obj","whoCommentedMsg","idOfMsgCommented","nodeId","newContent","currentNode","sender","getAllCast","concat","getAllCrew","getAllMessagesAsNodes","getAllScenes","isEmptyScript","JSON","stringify","fromEntries","newCast","forEach","existingCast","idNameMap","object","newCrew","existingCrew","scriptId","addNewMessage","javascriptObject","parse","entries","getNodeByMessageId","oldName","React","setName","isNameFocused","setIsNamedFocused","TextField","autoFocus","inputProps","maxLength","fontSize","value","onChange","event","target","onBlur","getScriptName","defaultCast","casts","setCast","totalCast","setTotalCast","updateCastName","newName","map","index","key","el","querySelectorAll","classList","add","selectedCast","updateActiveOption","addNewCastMember","defaultScenes","setScenes","totalScenes","setTotalScenes","updateSceneName","selectedScene","newScene","addNewScene","fileInput","useRef","type","file","files","fileRef","Firebase","replace","child","put","getDownloadURL","url","getImgURL","isRecording","setIsRecording","audioUrl","setAudioUrl","Recorder","handleAudioStop","blob","blobURL","storageRef","audioFile","File","toString","metadata","cors","origin","getVNURL","controls","grabScreenshot","getInsertedImg","getUplodedVideo","selectedMsgType","setValue","getSecondsFromHHMMSS","split","str1","str2","str3","val1","Number","val2","val3","isNaN","toHHMMSS","secs","secNum","parseInt","filter","join","spslm","seconds","max","inputTime","time","useState","isVisible","setIsVisible","alreadySavedValue","inputValue","setInputValue","variant","placeholder","e","multiline","minRows","onSave","whoSentCommentedMsg","ConnectedEditScript","updateScriptName","updateCast","updateScene","getSelectedCast","selectedCastId","allMessages","getSelectedScene","scene","selectedSceneId","getSelectedMsgType","textMsg","alreadyBeenLikedByselectedCastId","likedMsgID","likedByMap","addNewLikeMsg","deleteLikedMessage","tslmsg","timeSinceLastMsg","msgData","timeStamp","whoSentLikedMsg","idOfMsgLiked","whoLikedMsg","sceneId","updatedLikedByMap","emotion","isActionMsg","isAuthorActionMsg","getOnlyTextMsgsAsNodes","addNewMsgComment","comment","addNewMediaMsg","mediaType","mediaURL","isImg","isAudio","isVideo","getInputTime","timeInSeconds","deleteMessage","onSaveComment","existingCommentNode","getCommentNodeByCastIdMsgId","nil","editNodeContent","html2canvas","canvas","imageData","toDataURL","putString","downloadURL","animateGreeting","isNewScript","getOnlyLikedMsgsAsNodes","clearInterval","intervalId","href","actualDestination","history","generateLikedMap","replaceAll","textyng","Script","grabScriptFromFirebase","likedMessages","msgLikedId","msgLikedSenderId","DynamicClassAssignment","isActive","getSenderNameFromID","getCommentByCastIdMsgId","Button","color","EditScript","withRouter","connect","children","ConnectedNewScript","NewScript","Conversation","userInput","conversationHistory","isTyping","handleInputChange","bind","handleSubmit","scrollDown","preventDefault","trim","speaker","text","aiResponse","openAIAPI","openaiApiKey","Array","isArray","conversationHistoryString","require","Configuration","OpenAIApi","configuration","apiKey","openai","createCompletion","model","prompt","max_tokens","stop","choices","axios","inputText","newConversationHistory","querySelector","scrollTop","scrollHeight","oncloseCoonversationClick","onSubmit","ConnectedReaderView","handlePreviousClick","clearTimeout","timeoutId","prevState","currentNodeIndex","prevNodeIndex","getNthMessageNode","undefined","getTotalNumScenes","slice","handleSpanClick","showConversation","handlePlayPauseClick","isPlaying","handleNextClick","updateCurrentNode","selectThisScene","reactionClicked","currentTarget","updateReaderReaction","getReaderReactionFromMsg","reactionArray","getReaderReactionMap","emoji","Emoji","size","closeConversation","emojis","chatArea","startPosition","endPosition","scrollAmount","currentStep","animateScrollStep","duration","currentScene","scrollLeft","offsetLeft","offsetWidth","scrollWidth","msgElement","getAttribute","match","params","selectedMessageIndex","senderName","ReaderView","ConnectedHomePage","typeWriter","leftText","rightText","leftCounter","rightCounter","leftMessage","rightMessage","charAt","HomePage","ConnectedSearchScripts","searchBarUp","results","searchTerm","scripts","handleFocus","handleBlur","handleSearch","selectResult","toLowerCase","tenure","top","onFocus","secondString","date","getMonth","getDate","getFullYear","ConvertSecondsToDate","SearchScripts","ScriptGenerator","handleChange","inputJson","generateScript","scriptName","castMembers","member","messagesByMsgIndex","sort","a","b","msgIndex","scriptLines","toUpperCase","outputScript","reduce","members","Layout","pageToChange","pushState","pageName","layoutContent","Router","HashRouter","onresize","getElementsByClassName","innerHeight","App","Switch","Route","exact","component","SET_YOKIS","initialState","yokis","action","CONSTANTS","payload","createStore","rootReducer","authDomain","projectId","storageBucket","messagingSenderId","appId","measurementId","config","app","Provider","store","BrowserRouter","__MUI_USE_NEXT_TYPOGRAPHY_VARIANTS__","ReactDOM","__webpack_module_cache__","__webpack_require__","moduleId","cachedModule","exports","module","__webpack_modules__","call","m","deferred","O","chunkIds","fn","priority","notFulfilled","Infinity","fulfilled","j","keys","every","splice","r","getter","__esModule","definition","o","defineProperty","enumerable","g","globalThis","Function","prop","prototype","hasOwnProperty","Symbol","toStringTag","p","installedChunks","chunkId","webpackJsonpCallback","parentChunkLoadingFunction","moreModules","runtime","some","chunkLoadingGlobal","self","__webpack_exports__"],"sourceRoot":""}