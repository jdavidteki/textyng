{"version":3,"file":"static/js/225.a2f66316.chunk.js","mappings":"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","sources":["src/components/Grypcht/GrypchtAddData.js","src/firebase/firebase.js","node_modules/uuid/index.js","node_modules/uuid/lib/bytesToUuid.js","node_modules/uuid/lib/rng-browser.js","node_modules/uuid/v1.js","node_modules/uuid/v4.js"],"sourcesContent":["import React, { Component } from \"react\";\nimport Firebase from \"../../firebase/firebase.js\";\nimport { v4 as uuidv4 } from 'uuid';\nimport { useHistory } from 'react-router-dom';\n\nconst { Configuration, OpenAIApi } = require(\"openai\");\n\nimport \"./GrypchtAddData.css\";\n\n\nclass GrypchtAddData extends Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            grypcht: {\n                groupName: \"\",\n                members: [],\n                dateCreated: \"\",\n            },\n            chatInput: '',\n            chatMessages: [],\n            isComplete: false,\n            openai: null,\n\n            initialMsg: {\n                role: \"assistant\",\n                content: `You are assisting in creating a Grypcht JSON object. \n                The object should include the following fields: groupName (string), \n                members (array), and dateCreated (string), and description (string),\n                isPrivateGrypcht (boolean). Please interact with the user to get the values of each field and update \n                the Grypcht object accordingly. Once the user confirms that the object \n                is complete, return the validated JSON object. Please make it as \n                interactive as possible.`\n            }\n        };\n    }\n\n    componentDidMount = async () => {\n        await this.CreateOpenAIModel();\n    }\n\n    CreateOpenAIModel = async () => {\n        const openAIAPI = await Firebase.getOpenAIAPI();\n        const openaiApiKey = Array.isArray(openAIAPI) ? openAIAPI.join(\"\") : openAIAPI;\n        const configuration = new Configuration({ apiKey: openaiApiKey });\n        delete configuration.baseOptions.headers['User-Agent'];\n        const openai = new OpenAIApi(configuration);\n\n        this.setState({ openai: openai });\n    }\n\n    handleChatMessage = async () => {\n        const { chatMessages, chatInput } = this.state;\n\n        const userMessage = {\n            role: \"user\",\n            content: chatInput,\n        };\n\n        const updatedChatMessages = [...chatMessages, userMessage];\n        if (!chatMessages.length) {\n            updatedChatMessages.push(this.state.initialMsg);\n        }\n        this.setState({\n            chatMessages: updatedChatMessages,\n            chatInput: ''\n        });\n\n        // Call the model API to get the AI-generated response\n        const response = await this.state.openai.createChatCompletion({\n            model: \"gpt-3.5-turbo\",\n            messages: updatedChatMessages,\n        });\n\n        const aiResponse = response.data.choices[0].message.content;\n\n        // add AI's response to chat history\n        let newChatAI = {\n            role: 'assistant',\n            content: aiResponse\n        };\n        this.setState((prevState) => ({\n            chatMessages: [...prevState.chatMessages, newChatAI],\n        }));\n\n        // Process the AI-generated response and update the Grypcht object\n        this.searchResponseForGrpcht(aiResponse);\n    };\n\n    searchResponseForGrpcht(response) {\n        const { grypcht } = this.state;\n\n        // Extract the JSON substring from the AI response\n        const jsonStartIndex = response.indexOf('{');\n        const jsonEndIndex = response.lastIndexOf('}');\n        const jsonSubstring = response.substring(jsonStartIndex, jsonEndIndex + 1);\n\n        console.log(\"Extracted JSON substring:\", response);\n\n        // Parse the extracted JSON substring\n        let extractedData;\n        try {\n            extractedData = JSON.parse(jsonSubstring);\n\n            // Update the Grypcht object based on the extracted information\n            const updatedGrypcht = {\n                ...grypcht,\n                ...extractedData, // Update the fields based on the extracted JSON data\n            };\n\n            // Generate an ID for the Grypcht object\n            const id = Math.floor(Math.random() * 900000) + 100000; // 6-digit random number\n            updatedGrypcht.id = id;\n\n            // Call Firebase.createGrypcht to save the Grypcht object\n            Firebase.createGrypcht(updatedGrypcht).then(() => {\n                this.setState({ isComplete: true, grypcht: updatedGrypcht });\n\n                // Route the user to the /grypcht/[groupid] URL\n                window.history.pushState(null, \"\", `/grypcht/${id}`);\n                window.location.reload();\n            });\n        } catch (error) {\n            console.error(\"Failed to parse JSON from AI response:\", error);\n            return;\n        }\n    }\n\n\n    render() {\n        const { grypcht, chatMessages, isComplete } = this.state;\n\n        if (isComplete) {\n            return (\n                <div>\n                    <h2>Grypcht Created!</h2>\n                    <p>Group Name: {grypcht.groupName}</p>\n                    <p>Members: {grypcht.members.join(\", \")}</p>\n                    <p>Date Created: {grypcht.dateCreated}</p>\n                </div>\n            );\n        }\n\n        return (\n            <div className=\"GrypchtAddData l-container\">\n                <h2>Create Grypcht</h2>\n                <div>\n                    <h3>Chat</h3>\n                    {chatMessages.map((message, index) => (\n                        message !== this.state.initialMsg ? (\n                            <p key={index}>\n                                {message.role}: {message.content}\n                            </p>\n                        ) : null\n                    ))}\n                </div>\n                <div>\n                    <input\n                        type=\"text\"\n                        value={this.state.chatInput}\n                        onChange={(e) => this.setState({ chatInput: e.target.value })}\n                    />\n                    <button onClick={() => this.handleChatMessage()}>Send</button>\n                </div>\n            </div>\n        );\n    }\n}\n\nexport default GrypchtAddData;\n","import firebase from \"firebase\";\n\nclass Firebase {\n  getScripts = () =>{\n    return new Promise(resolve => {\n      firebase.database()\n      .ref('/scripts/')\n      .once('value')\n      .then(snapshot => {\n        if (snapshot.val()){\n          resolve(Object.values(snapshot.val()))\n        }else{\n          resolve({})\n        }\n      })\n    })\n  }\n\n  getFylds = () =>{\n    return new Promise(resolve => {\n      firebase.database()\n      .ref('/fylds/')\n      .once('value')\n      .then(snapshot => {\n        if (snapshot.val()){\n          resolve(Object.values(snapshot.val()))\n        }else{\n          resolve({})\n        }\n      })\n    })\n  }\n\n  createFyld = (fyld) => {\n    return new Promise(resolve => {\n      firebase.database()\n      .ref('/fylds/' + fyld.name.replace(/\\s/g, '') + '/')\n      .set(\n        {\n          name: fyld.name,\n          dateCreated: fyld.dateCreated,\n          description: fyld.description,\n          image: fyld.image,\n          friends: fyld.friends,\n        }\n      )\n      .then((response) => {\n        console.log(\"response\", response)\n        resolve(true)\n      })\n      .catch(error => {\n        console.log(\"error\", error)\n      })\n    })\n  }\n\n  createGrypcht = (grypcht) => {\n    return new Promise(resolve => {\n      firebase.database()\n      .ref('/grypchts/' + grypcht.id + '/')\n      .set(\n        {\n          id: grypcht.id,\n          groupName: grypcht.groupName,\n          members: grypcht.members,\n          dateCreated: grypcht.dateCreated,\n          description: grypcht.description,\n          isPrivateGrypcht: grypcht.isPrivateGrypcht,\n        }\n      )\n      .then((response) => {\n        console.log(\"response\", response)\n        resolve(true)\n      })\n      .catch(error => {\n        console.log(\"error\", error)\n      })\n    })\n  }\n\n\n  createNewScript = (script) => {\n    return new Promise(resolve => {\n      firebase.database()\n      .ref('/scripts/' + script.id + '/')\n      .set(\n        {\n          id: script.id,\n          name: script.name,\n          dateCreated: script.dateCreated,\n          cast: script.cast,\n          crew: script.crew,\n          messages: script.messages,\n          isPrivateScript: script.isPrivateScript,\n        }\n      )\n      .then((response) => {\n        console.log(\"response\", response)\n        resolve(true)\n      })\n      .catch(error => {\n        console.log(\"error\", error)\n      })\n    })\n  }\n\n  updateScript = (script) => {\n    return new Promise(resolve => {\n      firebase.database()\n      .ref('/scripts/' + script.id + '/')\n      .update(\n        {\n          id: script.id,\n          name: script.name,\n          dateCreated: script.dateCreated,\n          cast: script.cast,\n          crew: script.crew,\n          messages: script.messages,\n          scenes: script.scenes,\n          readerReactionMap: script.readerReactionMap,\n          isPrivateScript: script.isPrivateScript,\n        }\n      )\n      .then((response) => {\n        console.log(\"response\", response)\n        resolve(true)\n      })\n      .catch(error => {\n        console.log(\"error\", error)\n      })\n    })\n  }\n\n  getOpenAIAPI = () => {\n    return new Promise(resolve => {\n      firebase.database()\n      .ref('/openAIAPI/')\n      .once('value')\n      .then(snapshot => {\n        if (snapshot.val()){\n          resolve(Object.values(snapshot.val()))\n        }else{\n          resolve({})\n        }\n      })\n    })\n  }\n\n  getConversationHistory = () => {\n    return new Promise(resolve => {\n      firebase.database()\n      .ref('/conversationHistory/')\n      .once('value')\n      .then(snapshot => {\n        if (snapshot.val()){\n          resolve(Object.values(snapshot.val()))\n        }else{\n          resolve({})\n        }\n      })\n    })\n  }\n\n  getRimiSenTitles = () =>{\n    return new Promise(resolve => {\n      firebase.database()\n      .ref('/rimiLyrics/')\n      .once('value')\n      .then(snapshot => {\n        if (snapshot.val()){\n          resolve(Object.values(snapshot.val()))\n        }else{\n          resolve({})\n        }\n      })\n    })\n  }\n\n  postChats = (seller, buyer, message, productId, senderID) => {\n    return new Promise(resolve => {\n      firebase.database().\n      ref('/chats/' + seller + '/' + productId + '/' + buyer + '/').\n      push({\n        content: message,\n        timestamp: Date.now(),\n        uid: senderID,\n      }).\n      then(() => {\n        resolve(true)\n      }).catch(error =>{\n        resolve({})\n      })\n    })\n  }\n\n  storage = () => {\n    return firebase.storage()\n  }\n\n  getRimiSenTitles = () =>{\n    return new Promise(resolve => {\n      firebase.database()\n      .ref('/rimiLyrics/')\n      .once('value')\n      .then(snapshot => {\n        if (snapshot.val()){\n          resolve(Object.values(snapshot.val()))\n        }else{\n          resolve({})\n        }\n      })\n    })\n  }\n\n  getScriptById = (id) => {\n    return new Promise(resolve => {\n      firebase.database()\n      .ref('/scripts/'+id)\n      .once('value')\n      .then(snapshot => {\n        if (snapshot.val()){\n          resolve(Object(snapshot.val()))\n        }else{\n          resolve({})\n        }\n      })\n    })\n  }\n\n  updateSenTitle = (update) =>{\n    return new Promise(resolve => {\n      firebase.database()\n      .ref(`/rimis/${update.id}/`)\n      .update(\n        {\n          senTitle: update.newSenTitle,\n        },\n      )\n      .then((response) => {\n        return new Promise(resolve => {\n          firebase.database()\n          .ref(`/rimis/${update.id}/updates/${update.updateId}`)\n          .remove()\n          .then(() => {\n            resolve(true)\n          }).catch( (error) =>{\n            console.log(\"error\", error)\n          })\n        })\n        .then((response) => {\n          resolve(true)\n        })\n        .catch(error => {\n          console.log(\"error\", error)\n        })\n      })\n      .catch(error => {\n        console.log(\"error\", error)\n      })\n    })\n\n  }\n\n  sendForApproval = (item) => {\n    return new Promise(resolve => {\n      firebase.database()\n      .ref('/rimis/'+item.id+'/updates/' + item.updateId + '/')\n      .set(item)\n      .then((response) => {\n        console.log(\"response\", response)\n        resolve(true)\n      })\n      .catch(error => {\n        console.log(\"error\", error)\n      })\n    })\n  }\n\n  updateVideoSnippetURL = (orderId, snippetVideoURL) => {\n    return new Promise(resolve => {\n      firebase.database()\n      .ref('/orders/' + orderId + '/')\n      .update({snippetVideoURL})\n      .then((response) => {\n        console.log(\"response\", response)\n        resolve(true)\n      })\n      .catch(error => {\n        console.log(\"error\", error)\n      })\n    })\n  }\n}\n\nexport default new Firebase();\n","var v1 = require('./v1');\nvar v4 = require('./v4');\n\nvar uuid = v4;\nuuid.v1 = v1;\nuuid.v4 = v4;\n\nmodule.exports = uuid;\n","/**\n * Convert array of 16 byte values to UUID string format of the form:\n * XXXXXXXX-XXXX-XXXX-XXXX-XXXXXXXXXXXX\n */\nvar byteToHex = [];\nfor (var i = 0; i < 256; ++i) {\n  byteToHex[i] = (i + 0x100).toString(16).substr(1);\n}\n\nfunction bytesToUuid(buf, offset) {\n  var i = offset || 0;\n  var bth = byteToHex;\n  // join used to fix memory issue caused by concatenation: https://bugs.chromium.org/p/v8/issues/detail?id=3175#c4\n  return ([\n    bth[buf[i++]], bth[buf[i++]],\n    bth[buf[i++]], bth[buf[i++]], '-',\n    bth[buf[i++]], bth[buf[i++]], '-',\n    bth[buf[i++]], bth[buf[i++]], '-',\n    bth[buf[i++]], bth[buf[i++]], '-',\n    bth[buf[i++]], bth[buf[i++]],\n    bth[buf[i++]], bth[buf[i++]],\n    bth[buf[i++]], bth[buf[i++]]\n  ]).join('');\n}\n\nmodule.exports = bytesToUuid;\n","// Unique ID creation requires a high quality random # generator.  In the\n// browser this is a little complicated due to unknown quality of Math.random()\n// and inconsistent support for the `crypto` API.  We do the best we can via\n// feature-detection\n\n// getRandomValues needs to be invoked in a context where \"this\" is a Crypto\n// implementation. Also, find the complete implementation of crypto on IE11.\nvar getRandomValues = (typeof(crypto) != 'undefined' && crypto.getRandomValues && crypto.getRandomValues.bind(crypto)) ||\n                      (typeof(msCrypto) != 'undefined' && typeof window.msCrypto.getRandomValues == 'function' && msCrypto.getRandomValues.bind(msCrypto));\n\nif (getRandomValues) {\n  // WHATWG crypto RNG - http://wiki.whatwg.org/wiki/Crypto\n  var rnds8 = new Uint8Array(16); // eslint-disable-line no-undef\n\n  module.exports = function whatwgRNG() {\n    getRandomValues(rnds8);\n    return rnds8;\n  };\n} else {\n  // Math.random()-based (RNG)\n  //\n  // If all else fails, use Math.random().  It's fast, but is of unspecified\n  // quality.\n  var rnds = new Array(16);\n\n  module.exports = function mathRNG() {\n    for (var i = 0, r; i < 16; i++) {\n      if ((i & 0x03) === 0) r = Math.random() * 0x100000000;\n      rnds[i] = r >>> ((i & 0x03) << 3) & 0xff;\n    }\n\n    return rnds;\n  };\n}\n","var rng = require('./lib/rng');\nvar bytesToUuid = require('./lib/bytesToUuid');\n\n// **`v1()` - Generate time-based UUID**\n//\n// Inspired by https://github.com/LiosK/UUID.js\n// and http://docs.python.org/library/uuid.html\n\nvar _nodeId;\nvar _clockseq;\n\n// Previous uuid creation time\nvar _lastMSecs = 0;\nvar _lastNSecs = 0;\n\n// See https://github.com/uuidjs/uuid for API details\nfunction v1(options, buf, offset) {\n  var i = buf && offset || 0;\n  var b = buf || [];\n\n  options = options || {};\n  var node = options.node || _nodeId;\n  var clockseq = options.clockseq !== undefined ? options.clockseq : _clockseq;\n\n  // node and clockseq need to be initialized to random values if they're not\n  // specified.  We do this lazily to minimize issues related to insufficient\n  // system entropy.  See #189\n  if (node == null || clockseq == null) {\n    var seedBytes = rng();\n    if (node == null) {\n      // Per 4.5, create and 48-bit node id, (47 random bits + multicast bit = 1)\n      node = _nodeId = [\n        seedBytes[0] | 0x01,\n        seedBytes[1], seedBytes[2], seedBytes[3], seedBytes[4], seedBytes[5]\n      ];\n    }\n    if (clockseq == null) {\n      // Per 4.2.2, randomize (14 bit) clockseq\n      clockseq = _clockseq = (seedBytes[6] << 8 | seedBytes[7]) & 0x3fff;\n    }\n  }\n\n  // UUID timestamps are 100 nano-second units since the Gregorian epoch,\n  // (1582-10-15 00:00).  JSNumbers aren't precise enough for this, so\n  // time is handled internally as 'msecs' (integer milliseconds) and 'nsecs'\n  // (100-nanoseconds offset from msecs) since unix epoch, 1970-01-01 00:00.\n  var msecs = options.msecs !== undefined ? options.msecs : new Date().getTime();\n\n  // Per 4.2.1.2, use count of uuid's generated during the current clock\n  // cycle to simulate higher resolution clock\n  var nsecs = options.nsecs !== undefined ? options.nsecs : _lastNSecs + 1;\n\n  // Time since last uuid creation (in msecs)\n  var dt = (msecs - _lastMSecs) + (nsecs - _lastNSecs)/10000;\n\n  // Per 4.2.1.2, Bump clockseq on clock regression\n  if (dt < 0 && options.clockseq === undefined) {\n    clockseq = clockseq + 1 & 0x3fff;\n  }\n\n  // Reset nsecs if clock regresses (new clockseq) or we've moved onto a new\n  // time interval\n  if ((dt < 0 || msecs > _lastMSecs) && options.nsecs === undefined) {\n    nsecs = 0;\n  }\n\n  // Per 4.2.1.2 Throw error if too many uuids are requested\n  if (nsecs >= 10000) {\n    throw new Error('uuid.v1(): Can\\'t create more than 10M uuids/sec');\n  }\n\n  _lastMSecs = msecs;\n  _lastNSecs = nsecs;\n  _clockseq = clockseq;\n\n  // Per 4.1.4 - Convert from unix epoch to Gregorian epoch\n  msecs += 12219292800000;\n\n  // `time_low`\n  var tl = ((msecs & 0xfffffff) * 10000 + nsecs) % 0x100000000;\n  b[i++] = tl >>> 24 & 0xff;\n  b[i++] = tl >>> 16 & 0xff;\n  b[i++] = tl >>> 8 & 0xff;\n  b[i++] = tl & 0xff;\n\n  // `time_mid`\n  var tmh = (msecs / 0x100000000 * 10000) & 0xfffffff;\n  b[i++] = tmh >>> 8 & 0xff;\n  b[i++] = tmh & 0xff;\n\n  // `time_high_and_version`\n  b[i++] = tmh >>> 24 & 0xf | 0x10; // include version\n  b[i++] = tmh >>> 16 & 0xff;\n\n  // `clock_seq_hi_and_reserved` (Per 4.2.2 - include variant)\n  b[i++] = clockseq >>> 8 | 0x80;\n\n  // `clock_seq_low`\n  b[i++] = clockseq & 0xff;\n\n  // `node`\n  for (var n = 0; n < 6; ++n) {\n    b[i + n] = node[n];\n  }\n\n  return buf ? buf : bytesToUuid(b);\n}\n\nmodule.exports = v1;\n","var rng = require('./lib/rng');\nvar bytesToUuid = require('./lib/bytesToUuid');\n\nfunction v4(options, buf, offset) {\n  var i = buf && offset || 0;\n\n  if (typeof(options) == 'string') {\n    buf = options === 'binary' ? new Array(16) : null;\n    options = null;\n  }\n  options = options || {};\n\n  var rnds = options.random || (options.rng || rng)();\n\n  // Per 4.4, set bits for version and `clock_seq_hi_and_reserved`\n  rnds[6] = (rnds[6] & 0x0f) | 0x40;\n  rnds[8] = (rnds[8] & 0x3f) | 0x80;\n\n  // Copy bytes to buffer, if provided\n  if (buf) {\n    for (var ii = 0; ii < 16; ++ii) {\n      buf[i + ii] = rnds[ii];\n    }\n  }\n\n  return buf || bytesToUuid(rnds);\n}\n\nmodule.exports = v4;\n"],"names":["_require","require","Configuration","OpenAIApi","GrypchtAddData","_Component","_inherits","_super","_createSuper","props","_this","_classCallCheck","call","componentDidMount","_regeneratorRuntime","_context","prev","next","CreateOpenAIModel","stop","Promise","openAIAPI","openaiApiKey","configuration","openai","_context2","Firebase","sent","Array","isArray","join","apiKey","baseOptions","headers","setState","handleChatMessage","_this$state","chatMessages","chatInput","userMessage","updatedChatMessages","response","aiResponse","newChatAI","_context3","state","role","content","concat","_toConsumableArray","length","push","initialMsg","createChatCompletion","model","messages","data","choices","message","prevState","searchResponseForGrpcht","grypcht","groupName","members","dateCreated","isComplete","_createClass","key","value","extractedData","_this2","this","jsonStartIndex","indexOf","jsonEndIndex","lastIndexOf","jsonSubstring","substring","console","log","JSON","parse","updatedGrypcht","_objectSpread","id","Math","floor","random","then","window","history","pushState","location","reload","error","_this3","_this$state2","React","className","map","index","type","onChange","e","target","onClick","Component","getScripts","resolve","firebase","ref","once","snapshot","val","Object","values","getFylds","createFyld","fyld","name","replace","set","description","image","friends","catch","createGrypcht","isPrivateGrypcht","createNewScript","script","cast","crew","isPrivateScript","updateScript","update","scenes","readerReactionMap","getOpenAIAPI","getConversationHistory","getRimiSenTitles","postChats","seller","buyer","productId","senderID","timestamp","Date","now","uid","storage","getScriptById","updateSenTitle","senTitle","newSenTitle","updateId","remove","sendForApproval","item","updateVideoSnippetURL","orderId","snippetVideoURL","v1","v4","uuid","module","exports","byteToHex","i","toString","substr","buf","offset","bth","getRandomValues","crypto","bind","msCrypto","rnds8","Uint8Array","rnds","r","_nodeId","_clockseq","rng","bytesToUuid","_lastMSecs","_lastNSecs","options","b","node","clockseq","undefined","seedBytes","msecs","getTime","nsecs","dt","Error","tl","tmh","n","ii"],"sourceRoot":""}