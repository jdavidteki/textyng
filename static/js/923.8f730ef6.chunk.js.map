{"version":3,"file":"static/js/923.8f730ef6.chunk.js","mappings":"koBAC+B,IAEzBA,EAAe,SAAAC,IAAAC,EAAAA,EAAAA,SAAAF,EAAAC,GAAA,IAAAE,EAAAC,EAAAJ,GACnB,SAAAA,EAAYK,GAAQ,IAADC,EASf,OATeC,EAAAA,EAAAA,SAAA,KAAAP,IACjBM,EAAAH,EAAAK,KAAA,KAAMH,IAWRI,aAAe,SAACC,GACd,IAAMC,EAAYD,EAAME,OAAOC,MAC/BP,EAAKQ,SAAS,CAAEH,UAAAA,GAClB,EAACL,EAEDS,eAAiB,WACf,IACE,IAAMC,EAAOC,KAAKC,MAAMZ,EAAKa,MAAMR,WAC7BS,EAAaJ,EAAKK,KAClBC,EAAWN,EAAKM,UAAY,GAC5BC,EAAcP,EAAKQ,KAAKC,KAAI,SAACC,GAAM,OAAKA,EAAOL,IAAI,IACnDM,EAAqBL,EAASM,QAAQC,MAAK,SAACC,EAAGC,GAAC,OAAKD,EAAEE,SAAWD,EAAEC,QAAQ,IAC5EC,EAAc,GACpBA,EAAYC,KAAK,GAAGd,EAAWe,eAE/B,IAAK,IAAIC,EAAI,EAAGA,EAAIT,EAAmBU,OAAQD,IAAK,CAClD,IAAME,EAAUX,EAAmBS,GAC7BV,EAASH,EAAYe,EAAQC,SAAW,GAC9CN,EAAYC,KAAK,KAAKR,EAAOS,cAAa,KAC1CF,EAAYC,KAAQR,EAAM,KAAKY,EAAQE,QACzC,CAEA,IAAMC,EAAeR,EAAYS,KAAK,MACtCpC,EAAKQ,SAAS,CAAE2B,aAAAA,EAAcrB,WAAAA,EAAYG,YAAAA,EAAaD,SAAAA,GACzD,CAAE,MAAOqB,GACPrC,EAAKQ,SAAS,CAAE6B,MAAO,sBACzB,CACF,EArCErC,EAAKa,MAAQ,CACXR,UAAW,GACX8B,aAAc,GACdrB,WAAY,GACZG,YAAa,GACbD,SAAU,GACVqB,MAAO,IACPrC,CACJ,CAuEC,OAvEAsC,EAAAA,EAAAA,SAAA5C,EAAA,EAAA6C,IAAA,SAAAhC,MA+BD,WACE,IAAAiC,EAAiEC,KAAK5B,MAA9DR,EAASmC,EAATnC,UAAW8B,EAAYK,EAAZL,aAAcrB,EAAU0B,EAAV1B,WAAYE,EAAQwB,EAARxB,SAAUqB,EAAKG,EAALH,MAYvD,OATIF,GACYnB,EAAS0B,QAAO,SAACC,EAASX,GAItC,OAHKW,EAAQC,SAASZ,EAAQC,WAC5BU,EAAQf,KAAKI,EAAQC,UAEhBU,CACT,GAAG,IAIHE,EAAAA,cAAA,OAAKC,UAAU,gCACbD,EAAAA,cAAA,OAAKC,UAAU,4BAA2B,oBAC1CD,EAAAA,cAAA,OAAKC,UAAU,6BACbD,EAAAA,cAAA,OAAKC,UAAU,mCACbD,EAAAA,cAAA,YACEC,UAAU,0BACVvC,MAAOF,EACP0C,SAAUN,KAAKtC,aACf6C,YAAY,0BAGhBH,EAAAA,cAAA,UAAQC,UAAU,2BAA2BG,QAASR,KAAKhC,gBAAgB,mBAG1E4B,GAASQ,EAAAA,cAAA,OAAKC,UAAU,2BAA2BT,GACnDF,GACCU,EAAAA,cAAA,OAAKC,UAAU,oCACbD,EAAAA,cAAA,OAAKC,UAAU,mCAAmChC,EAAWe,eAC7DgB,EAAAA,cAAA,OAAKC,UAAU,0BACZX,KAOf,KAACzC,CAAA,CAlFkB,CAASwD,EAAAA,WAqF9B,S","sources":["src/components/ScriptGenerator/ScriptGenerator.js"],"sourcesContent":["import React, { Component } from \"react\";\nimport \"./ScriptGenerator.css\";\n\nclass ScriptGenerator extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      inputJson: \"\",\n      outputScript: \"\",\n      scriptName: \"\",\n      castMembers: [],\n      messages: [],\n      error: \"\",\n    };\n  }\n\n  handleChange = (event) => {\n    const inputJson = event.target.value;\n    this.setState({ inputJson });\n  };\n\n  generateScript = () => {\n    try {\n      const data = JSON.parse(this.state.inputJson);\n      const scriptName = data.name;\n      const messages = data.messages || [];\n      const castMembers = data.cast.map((member) => member.name);\n      const messagesByMsgIndex = messages.slice().sort((a, b) => a.msgIndex - b.msgIndex);\n      const scriptLines = [];\n      scriptLines.push(`${scriptName.toUpperCase()}`);\n    \n      for (let i = 0; i < messagesByMsgIndex.length; i++) {\n        const message = messagesByMsgIndex[i];\n        const member = castMembers[message.senderId - 1];\n        scriptLines.push(`\\n${member.toUpperCase()}:`);\n        scriptLines.push(`${member}: ${message.content}`);\n      }\n    \n      const outputScript = scriptLines.join(\"\\n\");\n      this.setState({ outputScript, scriptName, castMembers, messages });\n    } catch (error) {\n      this.setState({ error: \"Invalid JSON input\" });\n    }\n  };\n  \n  render() {\n    const { inputJson, outputScript, scriptName, messages, error } = this.state;\n    let castMembers = [];\n  \n    if (outputScript) {\n      castMembers = messages.reduce((members, message) => {\n        if (!members.includes(message.senderId)) {\n          members.push(message.senderId);\n        }\n        return members;\n      }, []);\n    }\n  \n    return (\n      <div className=\"script-generator l-container\">\n        <div className=\"script-generator__header\">Script Generator</div>\n        <div className=\"script-generator__content\">\n          <div className=\"script-generator__input-wrapper\">\n            <textarea\n              className=\"script-generator__input\"\n              value={inputJson}\n              onChange={this.handleChange}\n              placeholder=\"Paste your JSON here\"\n            />\n          </div>\n          <button className=\"script-generator__button\" onClick={this.generateScript}>\n            Generate Script\n          </button>\n          {error && <div className=\"script-generator__error\">{error}</div>}\n          {outputScript && (\n            <div className=\"script-generator__output-wrapper\">\n              <div className=\"script-generator__output-header\">{scriptName.toUpperCase()}</div>\n              <div className=\"script-generator__cast\">\n                {outputScript}\n              </div>\n            </div>\n          )}\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default ScriptGenerator;"],"names":["ScriptGenerator","_Component","_inherits","_super","_createSuper","props","_this","_classCallCheck","call","handleChange","event","inputJson","target","value","setState","generateScript","data","JSON","parse","state","scriptName","name","messages","castMembers","cast","map","member","messagesByMsgIndex","slice","sort","a","b","msgIndex","scriptLines","push","toUpperCase","i","length","message","senderId","content","outputScript","join","error","_createClass","key","_this$state","this","reduce","members","includes","React","className","onChange","placeholder","onClick","Component"],"sourceRoot":""}