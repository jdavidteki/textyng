{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nvar _jsxFileName = \"/Users/jdavid/Documents/textyng/src/components/NewScript/NewScript.js\";\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\nimport React, { Component } from \"react\";\nimport TextField from \"@material-ui/core/TextField\";\nimport { connect } from \"react-redux\";\nimport { withRouter } from \"react-router-dom\";\nimport Script from \"../Script/Script.js\";\nimport EditableField from \"../EditableField/EditableField\";\nimport CastMembers from \"../CastMembers/CastMembers\";\nimport MsgTypes from \"../MsgTypes/MsgTypes\";\nimport Button from \"@material-ui/core/Button\";\nvar textyng = new Script();\nimport \"./NewScript.css\";\nvar ConnectedNewScript = function (_Component) {\n  _inherits(ConnectedNewScript, _Component);\n  var _super = _createSuper(ConnectedNewScript);\n  function ConnectedNewScript(props) {\n    var _this;\n    _classCallCheck(this, ConnectedNewScript);\n    _this = _super.call(this, props);\n    _this.getScriptName = function (name) {\n      return name[1];\n    };\n    _this.getAllCast = function (casts) {\n      console.log(\"casts\", casts);\n    };\n    _this.getSelectedCast = function (cast) {\n      _this.setState({\n        selectedCastId: cast.id\n      }, function () {\n        _this.setState({\n          allMessages: _this.state.script.getAllMessagesStringListBySenderId(_this.state.selectedCastId)\n        });\n      });\n    };\n    _this.getSelectedMsgType = function (value) {\n      _this.setState({\n        textMsg: value\n      }, function () {\n        _this.addNewMessage();\n      });\n    };\n    _this.addNewMessage = function () {\n      var milliseconds = new Date().getTime();\n      var msgData = {\n        id: milliseconds,\n        timeStamp: milliseconds,\n        content: _this.state.textMsg,\n        senderId: _this.state.selectedCastId\n      };\n      _this.state.script.addNewMessage(msgData);\n      _this.setState({\n        allMessages: _this.state.script.getAllMessagesStringListBySenderId(_this.state.selectedCastId),\n        textMsg: \"\"\n      });\n    };\n    _this.state = {\n      rimis: [],\n      rimisIds: [],\n      filteredRimis: [],\n      rimiToShow: null,\n      animateGreeting: \"NewScript-animategreeting\",\n      orderId: \"\",\n      script: textyng,\n      selectedCastId: 1,\n      selectedMsgType: \"\",\n      textMsg: \"\",\n      allMessages: []\n    };\n    return _this;\n  }\n  _createClass(ConnectedNewScript, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n\n      window.setInterval(function () {\n        var elem = document.getElementById('NewScript-chatArea-id');\n        elem.scrollTop = elem.scrollHeight;\n      }, 500);\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n      return React.createElement(\"div\", {\n        className: \"NewScript\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 93,\n          columnNumber: 9\n        }\n      }, React.createElement(\"div\", {\n        className: \"NewScript-container l-container\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 94,\n          columnNumber: 13\n        }\n      }, React.createElement(\"div\", {\n        className: \"NewScript-title\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 95,\n          columnNumber: 17\n        }\n      }, React.createElement(EditableField, {\n        getScriptName: this.getScriptName,\n        getSelectedCast: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 96,\n          columnNumber: 21\n        }\n      })), React.createElement(\"div\", {\n        className: \"NewScript-cast\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 98,\n          columnNumber: 17\n        }\n      }, React.createElement(CastMembers, {\n        selectedCast: function selectedCast() {\n          return _this2.getSelectedCast;\n        },\n        getAllCast: this.getAllCast,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 99,\n          columnNumber: 21\n        }\n      })), React.createElement(\"div\", {\n        className: \"NewScript-textView\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 101,\n          columnNumber: 17\n        }\n      }, React.createElement(MsgTypes, {\n        selectedMsgType: this.getSelectedMsgType,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 102,\n          columnNumber: 19\n        }\n      }), React.createElement(\"div\", {\n        id: \"NewScript-chatArea-id\",\n        className: \"NewScript-chatArea\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 104,\n          columnNumber: 19\n        }\n      }, this.state.allMessages.map(function (value, index) {\n        return React.createElement(\"div\", {\n          key: index,\n          className: \"NewScript-chatArea-msg\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 106,\n            columnNumber: 23\n          }\n        }, value.content);\n      })), React.createElement(\"div\", {\n        className: \"NewScript-sendMessage\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 112,\n          columnNumber: 19\n        }\n      }, React.createElement(TextField, {\n        variant: \"outlined\",\n        className: \"NewScript-sendMessage--input\",\n        value: this.state.textMsg,\n        placeholder: \"Type message here\",\n        onChange: function onChange(e) {\n          _this2.setState({\n            textMsg: e.target.value\n          });\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 113,\n          columnNumber: 21\n        }\n      }), React.createElement(Button, {\n        className: \"NewScript-sendMessage--send\",\n        variant: \"outlined\",\n        color: \"primary\",\n        onClick: function onClick() {\n          return _this2.addNewMessage();\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 122,\n          columnNumber: 21\n        }\n      }, \"Send\")), React.createElement(\"div\", {\n        className: \"NewScript-saveSubmit\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 132,\n          columnNumber: 19\n        }\n      }, React.createElement(Button, {\n        className: \"NewScript-saveSubmit--save\",\n        variant: \"outlined\",\n        color: \"primary\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 133,\n          columnNumber: 21\n        }\n      }, \"save\"), React.createElement(Button, {\n        className: \"NewScript-saveSubmit--submit\",\n        variant: \"outlined\",\n        color: \"primary\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 141,\n          columnNumber: 21\n        }\n      }, \"submit\")))));\n    }\n  }]);\n  return ConnectedNewScript;\n}(Component);\nvar mapStateToProps = function mapStateToProps(state) {\n  return {};\n};\nvar NewScript = withRouter(connect(mapStateToProps)(ConnectedNewScript));\nexport default withRouter(NewScript);","map":{"version":3,"names":["React","Component","TextField","connect","withRouter","Script","EditableField","CastMembers","MsgTypes","Button","textyng","ConnectedNewScript","props","getScriptName","name","getAllCast","casts","console","log","getSelectedCast","cast","setState","selectedCastId","id","allMessages","state","script","getAllMessagesStringListBySenderId","getSelectedMsgType","value","textMsg","addNewMessage","milliseconds","Date","getTime","msgData","timeStamp","content","senderId","rimis","rimisIds","filteredRimis","rimiToShow","animateGreeting","orderId","selectedMsgType","window","setInterval","elem","document","getElementById","scrollTop","scrollHeight","map","index","e","target","mapStateToProps","NewScript"],"sources":["/Users/jdavid/Documents/textyng/src/components/NewScript/NewScript.js"],"sourcesContent":["import React, { Component } from \"react\";\nimport TextField from \"@material-ui/core/TextField\";\nimport { connect } from \"react-redux\";\nimport { withRouter } from \"react-router-dom\";\nimport Script from \"../Script/Script.js\";\nimport EditableField from \"../EditableField/EditableField\";\nimport CastMembers from \"../CastMembers/CastMembers\";\nimport MsgTypes from \"../MsgTypes/MsgTypes\";\nimport Button from \"@material-ui/core/Button\";\n\nvar textyng = new Script();\n\nimport \"./NewScript.css\";\n\nclass ConnectedNewScript extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      rimis: [],\n      rimisIds: [],\n      filteredRimis: [],\n      rimiToShow: null,\n      animateGreeting: \"NewScript-animategreeting\",\n      orderId: \"\",\n      script: textyng,\n      selectedCastId: 1,\n      selectedMsgType: \"\",\n      textMsg: \"\",\n      allMessages: [],\n    };\n\n  }\n\n  componentDidMount() {\n\n    // this.state.script.updateScriptName(\"cary me dey go my husband\");\n    // this.state.script.getScriptName();\n\n    // this.state.script.addNewMessage({\n    //   id: \"timedateformat\",\n    //   timeSent: \"\",\n    //   type: \"text\",\n    //   content: \"i saw kike with samuel yesterday! eyin girls\",\n    // });\n\n\n    window.setInterval(function() {\n      var elem = document.getElementById('NewScript-chatArea-id');\n      elem.scrollTop = elem.scrollHeight;\n    }, 500);\n  }\n\n  getScriptName = (name) => {\n    return name[1]\n  }\n\n  getAllCast = (casts) => {\n    console.log(\"casts\", casts)\n  }\n\n  getSelectedCast = (cast) => {\n    this.setState({selectedCastId: cast.id}, () => {\n      this.setState({allMessages: this.state.script.getAllMessagesStringListBySenderId(this.state.selectedCastId)})\n    })\n  }\n\n  getSelectedMsgType = (value) => {\n    this.setState({ textMsg: value}, () => {\n      this.addNewMessage()\n    });\n  }\n\n  addNewMessage = () => {\n    var milliseconds = new Date().getTime();\n\n    let msgData = {\n      id: milliseconds,\n      timeStamp: milliseconds,\n      content: this.state.textMsg,\n      senderId: this.state.selectedCastId,\n    }\n\n    this.state.script.addNewMessage(msgData)\n    this.setState({\n      allMessages: this.state.script.getAllMessagesStringListBySenderId(this.state.selectedCastId),\n      textMsg: \"\"\n    })\n  }\n\n  render() {\n    return (\n        <div className=\"NewScript\">\n            <div className=\"NewScript-container l-container\">\n                <div className=\"NewScript-title\">\n                    <EditableField getScriptName={this.getScriptName} getSelectedCast/>\n                </div>\n                <div className=\"NewScript-cast\">\n                    <CastMembers selectedCast={() =>  this.getSelectedCast} getAllCast={this.getAllCast}/>\n                </div>\n                <div className=\"NewScript-textView\">\n                  <MsgTypes selectedMsgType={this.getSelectedMsgType} />\n\n                  <div id=\"NewScript-chatArea-id\" className=\"NewScript-chatArea\">\n                    {this.state.allMessages.map((value,index) => (\n                      <div key={index} className=\"NewScript-chatArea-msg\">\n                        {value.content}\n                      </div>\n                    ))}\n                  </div>\n\n                  <div className=\"NewScript-sendMessage\">\n                    <TextField\n                      variant=\"outlined\"\n                      className=\"NewScript-sendMessage--input\"\n                      value={this.state.textMsg}\n                      placeholder=\"Type message here\"\n                      onChange={e => {\n                        this.setState({ textMsg: e.target.value });\n                      }}\n                    />\n                    <Button\n                      className=\"NewScript-sendMessage--send\"\n                      variant=\"outlined\"\n                      color=\"primary\"\n                      onClick={() => this.addNewMessage()}\n                    >\n                      Send\n                    </Button>\n                  </div>\n\n                  <div className=\"NewScript-saveSubmit\">\n                    <Button\n                      className=\"NewScript-saveSubmit--save\"\n                      variant=\"outlined\"\n                      color=\"primary\"\n                    >\n                      save\n                    </Button>\n\n                    <Button\n                      className=\"NewScript-saveSubmit--submit\"\n                      variant=\"outlined\"\n                      color=\"primary\"\n                    >\n                      submit\n                    </Button>\n                  </div>\n                </div>\n            </div>\n        </div>\n    );\n  }\n}\n\nconst mapStateToProps = (state) => {\n  return {};\n};\n\nlet NewScript = withRouter(connect(mapStateToProps)(ConnectedNewScript));\nexport default withRouter(NewScript);\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}