{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nvar _jsxFileName = \"/Users/jdavid/Documents/textyng/src/components/RecordModal/RecordModal.js\";\nimport React from 'react';\nimport { Recorder } from 'react-voice-recorder';\nimport Firebase from \"../../firebase/firebase.js\";\nimport \"./RecordModal.css\";\nimport \"react-voice-recorder/dist/index.css\";\nfunction RecordModal(props) {\n  var _React$useState = React.useState(false),\n    _React$useState2 = _slicedToArray(_React$useState, 2),\n    isRecording = _React$useState2[0],\n    setIsRecording = _React$useState2[1];\n  var _React$useState3 = React.useState(null),\n    _React$useState4 = _slicedToArray(_React$useState3, 2),\n    audioUrl = _React$useState4[0],\n    setAudioUrl = _React$useState4[1];\n  function handleStartRecording() {\n    setIsRecording(true);\n  }\n  function handleStopRecording(blob) {\n    setIsRecording(false);\n    setAudioUrl(blob.blobURL);\n    var milliseconds = Math.floor(Date.now() / 1000);\n    var storageRef = Firebase.storage().ref(\"VoiceNotes/\" + milliseconds);\n    var audioFile = new File([blob.blob], milliseconds.toString() + 'audio.mp3', {\n      type: 'audio/mp3'\n    });\n    storageRef.put(audioFile).then(function (snapshot) {\n      console.log('Audio uploaded to Firebase');\n      snapshot.ref.getDownloadURL().then(function (url) {\n        console.log(\"url\", url);\n        props.getVNURL(url);\n      });\n    });\n  }\n  return React.createElement(\"div\", {\n    className: \"record-modal\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 5\n    }\n  }, isRecording ? React.createElement(Recorder, {\n    handleAudioStop: handleStopRecording,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 9\n    }\n  }) : React.createElement(\"button\", {\n    onClick: handleStartRecording,\n    className: \"record-button\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 9\n    }\n  }, \"Start recording\"), audioUrl && React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 9\n    }\n  }, React.createElement(\"audio\", {\n    src: audioUrl,\n    controls: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 11\n    }\n  })));\n}\nexport default RecordModal;","map":{"version":3,"names":["React","Recorder","Firebase","RecordModal","props","useState","isRecording","setIsRecording","audioUrl","setAudioUrl","handleStartRecording","handleStopRecording","blob","blobURL","milliseconds","Math","floor","Date","now","storageRef","storage","ref","audioFile","File","toString","type","put","then","snapshot","console","log","getDownloadURL","url","getVNURL"],"sources":["/Users/jdavid/Documents/textyng/src/components/RecordModal/RecordModal.js"],"sourcesContent":["import React from 'react';\nimport { Recorder } from 'react-voice-recorder';\nimport Firebase from \"../../firebase/firebase.js\";\n\nimport './RecordModal.css';\nimport \"react-voice-recorder/dist/index.css\";\n\nfunction RecordModal(props) {\n  const [isRecording, setIsRecording] = React.useState(false);\n  const [audioUrl, setAudioUrl] = React.useState(null);\n\n  function handleStartRecording() {\n    setIsRecording(true);\n  }\n\n  function handleStopRecording(blob) {\n    setIsRecording(false);\n    setAudioUrl(blob.blobURL);\n    const milliseconds = Math.floor(Date.now() / 1000)\n    const storageRef = Firebase.storage().ref(\"VoiceNotes/\" + milliseconds);\n\n    // Upload the audio to Firebase\n    const audioFile = new File([blob.blob], milliseconds.toString()+'audio.mp3', {\n        type: 'audio/mp3'\n    });\n\n    storageRef.put(audioFile).then(snapshot => {\n        console.log('Audio uploaded to Firebase');\n        snapshot.ref.getDownloadURL().then(url => {\n            console.log(\"url\", url)\n            props.getVNURL(url)\n        });\n    });\n\n  }\n\n  return (\n    <div className=\"record-modal\">\n      {isRecording ? (\n        <Recorder handleAudioStop={handleStopRecording} />\n      ) : (\n        <button onClick={handleStartRecording} className=\"record-button\">\n          Start recording\n        </button>\n      )}\n      {audioUrl && (\n        <div>\n          <audio src={audioUrl} controls />\n        </div>\n      )}\n    </div>\n  );\n}\n\nexport default RecordModal;"],"mappings":";;AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,SAASC,QAAQ,QAAQ,sBAAsB;AAC/C,OAAOC,QAAQ;AAEf;AACA,OAAO,qCAAqC;AAE5C,SAASC,WAAW,CAACC,KAAK,EAAE;EAC1B,sBAAsCJ,KAAK,CAACK,QAAQ,CAAC,KAAK,CAAC;IAAA;IAApDC,WAAW;IAAEC,cAAc;EAClC,uBAAgCP,KAAK,CAACK,QAAQ,CAAC,IAAI,CAAC;IAAA;IAA7CG,QAAQ;IAAEC,WAAW;EAE5B,SAASC,oBAAoB,GAAG;IAC9BH,cAAc,CAAC,IAAI,CAAC;EACtB;EAEA,SAASI,mBAAmB,CAACC,IAAI,EAAE;IACjCL,cAAc,CAAC,KAAK,CAAC;IACrBE,WAAW,CAACG,IAAI,CAACC,OAAO,CAAC;IACzB,IAAMC,YAAY,GAAGC,IAAI,CAACC,KAAK,CAACC,IAAI,CAACC,GAAG,EAAE,GAAG,IAAI,CAAC;IAClD,IAAMC,UAAU,GAAGjB,QAAQ,CAACkB,OAAO,EAAE,CAACC,GAAG,CAAC,aAAa,GAAGP,YAAY,CAAC;IAGvE,IAAMQ,SAAS,GAAG,IAAIC,IAAI,CAAC,CAACX,IAAI,CAACA,IAAI,CAAC,EAAEE,YAAY,CAACU,QAAQ,EAAE,GAAC,WAAW,EAAE;MACzEC,IAAI,EAAE;IACV,CAAC,CAAC;IAEFN,UAAU,CAACO,GAAG,CAACJ,SAAS,CAAC,CAACK,IAAI,CAAC,UAAAC,QAAQ,EAAI;MACvCC,OAAO,CAACC,GAAG,CAAC,4BAA4B,CAAC;MACzCF,QAAQ,CAACP,GAAG,CAACU,cAAc,EAAE,CAACJ,IAAI,CAAC,UAAAK,GAAG,EAAI;QACtCH,OAAO,CAACC,GAAG,CAAC,KAAK,EAAEE,GAAG,CAAC;QACvB5B,KAAK,CAAC6B,QAAQ,CAACD,GAAG,CAAC;MACvB,CAAC,CAAC;IACN,CAAC,CAAC;EAEJ;EAEA,OACE;IAAK,SAAS,EAAC,cAAc;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,GAC1B1B,WAAW,GACV,oBAAC,QAAQ;IAAC,eAAe,EAAEK,mBAAoB;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,EAAG,GAElD;IAAQ,OAAO,EAAED,oBAAqB;IAAC,SAAS,EAAC,eAAe;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,qBAGjE,EACAF,QAAQ,IACP;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,GACE;IAAO,GAAG,EAAEA,QAAS;IAAC,QAAQ;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,EAAG,CAEpC,CACG;AAEV;AAEA,eAAeL,WAAW"},"metadata":{},"sourceType":"module"}