{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nvar _jsxFileName = \"/Users/jdavid/Documents/textyng/src/components/Readerview/Readerview.js\";\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\nimport React, { Component } from \"react\";\nimport { connect } from \"react-redux\";\nimport { withRouter } from \"react-router-dom\";\nimport EditableField from \"../EditableField/EditableField\";\nimport \"./ReaderView.css\";\nvar ConnectedReaderView = function (_Component) {\n  _inherits(ConnectedReaderView, _Component);\n  var _super = _createSuper(ConnectedReaderView);\n  function ConnectedReaderView(props) {\n    var _this;\n    _classCallCheck(this, ConnectedReaderView);\n    _this = _super.call(this, props);\n    _this.getScriptName = function (name) {\n      return name[1];\n    };\n    _this.state = {\n      rimis: [],\n      rimisIds: [],\n      filteredRimis: [],\n      rimiToShow: null,\n      animateGreeting: \"ReaderView-animategreeting\"\n    };\n    return _this;\n  }\n  _createClass(ConnectedReaderView, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      return React.createElement(\"div\", {\n        className: \"ReaderView\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 31,\n          columnNumber: 9\n        }\n      }, React.createElement(\"div\", {\n        className: \"ReaderView-container l-container\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 32,\n          columnNumber: 13\n        }\n      }, React.createElement(\"div\", {\n        className: \"ReaderView-title\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 33,\n          columnNumber: 17\n        }\n      }, React.createElement(EditableField, {\n        getScriptName: this.getScriptName,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 34,\n          columnNumber: 21\n        }\n      }))));\n    }\n  }]);\n  return ConnectedReaderView;\n}(Component);\nvar mapStateToProps = function mapStateToProps(state) {\n  return {};\n};\nvar ReaderView = withRouter(connect(mapStateToProps)(ConnectedReaderView));\nexport default withRouter(ReaderView);","map":{"version":3,"names":["React","Component","connect","withRouter","EditableField","ConnectedReaderView","props","getScriptName","name","state","rimis","rimisIds","filteredRimis","rimiToShow","animateGreeting","mapStateToProps","ReaderView"],"sources":["/Users/jdavid/Documents/textyng/src/components/Readerview/Readerview.js"],"sourcesContent":["import React, { Component } from \"react\";\nimport { connect } from \"react-redux\";\nimport { withRouter } from \"react-router-dom\";\nimport EditableField from \"../EditableField/EditableField\";\n\nimport \"./ReaderView.css\";\n\nclass ConnectedReaderView extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      rimis: [],\n      rimisIds: [],\n      filteredRimis: [],\n      rimiToShow: null,\n      animateGreeting: \"ReaderView-animategreeting\",\n    };\n  }\n\n  componentDidMount() {\n    //\n  }\n\n  getScriptName = (name) => {\n    return name[1]\n  }\n\n  render() {\n    return (\n        <div className=\"ReaderView\">\n            <div className=\"ReaderView-container l-container\">\n                <div className=\"ReaderView-title\">\n                    <EditableField getScriptName={this.getScriptName}/>\n                </div>\n            </div>\n        </div>\n    );\n  }\n}\n\nconst mapStateToProps = (state) => {\n  return {};\n};\n\nlet ReaderView = withRouter(connect(mapStateToProps)(ConnectedReaderView));\nexport default withRouter(ReaderView);\n"],"mappings":";;;;;;;;AAAA,OAAOA,KAAK,IAAIC,SAAS,QAAQ,OAAO;AACxC,SAASC,OAAO,QAAQ,aAAa;AACrC,SAASC,UAAU,QAAQ,kBAAkB;AAC7C,OAAOC,aAAa;AAEpB;AAA0B,IAEpBC,mBAAmB;EAAA;EAAA;EACvB,6BAAYC,KAAK,EAAE;IAAA;IAAA;IACjB,0BAAMA,KAAK;IAAE,MAefC,aAAa,GAAG,UAACC,IAAI,EAAK;MACxB,OAAOA,IAAI,CAAC,CAAC,CAAC;IAChB,CAAC;IAfC,MAAKC,KAAK,GAAG;MACXC,KAAK,EAAE,EAAE;MACTC,QAAQ,EAAE,EAAE;MACZC,aAAa,EAAE,EAAE;MACjBC,UAAU,EAAE,IAAI;MAChBC,eAAe,EAAE;IACnB,CAAC;IAAC;EACJ;EAAC;IAAA;IAAA,OAED,6BAAoB;IAEpB;EAAC;IAAA;IAAA,OAMD,kBAAS;MACP,OACI;QAAK,SAAS,EAAC,YAAY;QAAA;UAAA;UAAA;UAAA;QAAA;MAAA,GACvB;QAAK,SAAS,EAAC,kCAAkC;QAAA;UAAA;UAAA;UAAA;QAAA;MAAA,GAC7C;QAAK,SAAS,EAAC,kBAAkB;QAAA;UAAA;UAAA;UAAA;QAAA;MAAA,GAC7B,oBAAC,aAAa;QAAC,aAAa,EAAE,IAAI,CAACP,aAAc;QAAA;UAAA;UAAA;UAAA;QAAA;MAAA,EAAE,CACjD,CACJ,CACJ;IAEZ;EAAC;EAAA;AAAA,EA/B+BN,SAAS;AAkC3C,IAAMc,eAAe,GAAG,SAAlBA,eAAe,CAAIN,KAAK,EAAK;EACjC,OAAO,CAAC,CAAC;AACX,CAAC;AAED,IAAIO,UAAU,GAAGb,UAAU,CAACD,OAAO,CAACa,eAAe,CAAC,CAACV,mBAAmB,CAAC,CAAC;AAC1E,eAAeF,UAAU,CAACa,UAAU,CAAC"},"metadata":{},"sourceType":"module"}