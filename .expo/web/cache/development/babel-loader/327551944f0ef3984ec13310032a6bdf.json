{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nvar _jsxFileName = \"/Users/jdavid/Documents/textyng/src/components/RecordModal/RecordModal.js\";\nimport React from 'react';\nimport { Mic } from 'react-microphone';\nimport * as firebase from 'firebase/app';\nimport 'firebase/storage';\nimport \"./RecordModal.scss\";\nvar firebaseConfig = {};\nfirebase.initializeApp(firebaseConfig);\nvar storage = firebase.storage();\nvar bucket = storage.ref();\nfunction RecordModal() {\n  var _React$useState = React.useState(false),\n    _React$useState2 = _slicedToArray(_React$useState, 2),\n    isRecording = _React$useState2[0],\n    setIsRecording = _React$useState2[1];\n  var _React$useState3 = React.useState(null),\n    _React$useState4 = _slicedToArray(_React$useState3, 2),\n    audioBlob = _React$useState4[0],\n    setAudioBlob = _React$useState4[1];\n  function handleStartRecording() {\n    setIsRecording(true);\n  }\n  function handleStopRecording(blob) {\n    setIsRecording(false);\n    setAudioBlob(blob);\n    var audioFile = new File([audioBlob], 'audio.mp3', {\n      type: 'audio/mp3'\n    });\n    bucket.put(audioFile).then(function (snapshot) {\n      console.log('Audio uploaded to Firebase');\n    });\n  }\n  return React.createElement(\"div\", {\n    className: \"record-modal\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 5\n    }\n  }, isRecording ? React.createElement(Mic, {\n    onStop: handleStopRecording,\n    strokeColor: \"#123456\",\n    backgroundColor: \"#fff\",\n    className: \"mic\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 9\n    }\n  }) : React.createElement(\"button\", {\n    onClick: handleStartRecording,\n    className: \"record-button\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 9\n    }\n  }, \"Start recording\"), audioBlob && React.createElement(\"audio\", {\n    src: URL.createObjectURL(audioBlob),\n    controls: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 9\n    }\n  }));\n}\nexport default RecordModal;","map":{"version":3,"names":["React","Mic","firebase","firebaseConfig","initializeApp","storage","bucket","ref","RecordModal","useState","isRecording","setIsRecording","audioBlob","setAudioBlob","handleStartRecording","handleStopRecording","blob","audioFile","File","type","put","then","snapshot","console","log","URL","createObjectURL"],"sources":["/Users/jdavid/Documents/textyng/src/components/RecordModal/RecordModal.js"],"sourcesContent":["import React from 'react';\nimport { Mic } from 'react-microphone';\nimport * as firebase from 'firebase/app';\n\nimport 'firebase/storage';\nimport './RecordModal.scss';\n\n// Initialize Firebase\nconst firebaseConfig = {\n  // Your Firebase config goes here\n};\nfirebase.initializeApp(firebaseConfig);\n\n// Get a reference to the storage bucket\nconst storage = firebase.storage();\nconst bucket = storage.ref();\n\nfunction RecordModal() {\n  const [isRecording, setIsRecording] = React.useState(false);\n  const [audioBlob, setAudioBlob] = React.useState(null);\n\n  function handleStartRecording() {\n    setIsRecording(true);\n  }\n\n  function handleStopRecording(blob) {\n    setIsRecording(false);\n    setAudioBlob(blob);\n\n    // Upload the audio to Firebase\n    const audioFile = new File([audioBlob], 'audio.mp3', {\n      type: 'audio/mp3'\n    });\n    bucket.put(audioFile).then(snapshot => {\n      console.log('Audio uploaded to Firebase');\n    });\n  }\n\n  return (\n    <div className=\"record-modal\">\n      {isRecording ? (\n        <Mic\n          onStop={handleStopRecording}\n          strokeColor=\"#123456\"\n          backgroundColor=\"#fff\"\n          className=\"mic\"\n        />\n      ) : (\n        <button onClick={handleStartRecording} className=\"record-button\">\n          Start recording\n        </button>\n      )}\n      {audioBlob && (\n        <audio src={URL.createObjectURL(audioBlob)} controls />\n      )}\n    </div>\n  );\n}\n\nexport default RecordModal;"],"mappings":";;AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,SAASC,GAAG,QAAQ,kBAAkB;AACtC,OAAO,KAAKC,QAAQ,MAAM,cAAc;AAExC,OAAO,kBAAkB;AACzB;AAGA,IAAMC,cAAc,GAAG,CAEvB,CAAC;AACDD,QAAQ,CAACE,aAAa,CAACD,cAAc,CAAC;AAGtC,IAAME,OAAO,GAAGH,QAAQ,CAACG,OAAO,EAAE;AAClC,IAAMC,MAAM,GAAGD,OAAO,CAACE,GAAG,EAAE;AAE5B,SAASC,WAAW,GAAG;EACrB,sBAAsCR,KAAK,CAACS,QAAQ,CAAC,KAAK,CAAC;IAAA;IAApDC,WAAW;IAAEC,cAAc;EAClC,uBAAkCX,KAAK,CAACS,QAAQ,CAAC,IAAI,CAAC;IAAA;IAA/CG,SAAS;IAAEC,YAAY;EAE9B,SAASC,oBAAoB,GAAG;IAC9BH,cAAc,CAAC,IAAI,CAAC;EACtB;EAEA,SAASI,mBAAmB,CAACC,IAAI,EAAE;IACjCL,cAAc,CAAC,KAAK,CAAC;IACrBE,YAAY,CAACG,IAAI,CAAC;IAGlB,IAAMC,SAAS,GAAG,IAAIC,IAAI,CAAC,CAACN,SAAS,CAAC,EAAE,WAAW,EAAE;MACnDO,IAAI,EAAE;IACR,CAAC,CAAC;IACFb,MAAM,CAACc,GAAG,CAACH,SAAS,CAAC,CAACI,IAAI,CAAC,UAAAC,QAAQ,EAAI;MACrCC,OAAO,CAACC,GAAG,CAAC,4BAA4B,CAAC;IAC3C,CAAC,CAAC;EACJ;EAEA,OACE;IAAK,SAAS,EAAC,cAAc;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,GAC1Bd,WAAW,GACV,oBAAC,GAAG;IACF,MAAM,EAAEK,mBAAoB;IAC5B,WAAW,EAAC,SAAS;IACrB,eAAe,EAAC,MAAM;IACtB,SAAS,EAAC,KAAK;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,EACf,GAEF;IAAQ,OAAO,EAAED,oBAAqB;IAAC,SAAS,EAAC,eAAe;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,qBAGjE,EACAF,SAAS,IACR;IAAO,GAAG,EAAEa,GAAG,CAACC,eAAe,CAACd,SAAS,CAAE;IAAC,QAAQ;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,EACrD,CACG;AAEV;AAEA,eAAeJ,WAAW"},"metadata":{},"sourceType":"module"}