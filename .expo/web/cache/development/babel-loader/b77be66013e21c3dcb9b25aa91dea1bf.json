{"ast":null,"code":"import _createClass from \"@babel/runtime/helpers/createClass\";\nimport _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport React, { Component } from \"react\";\nimport firebase from \"../../firebase/firebase\";\nvar MessageNode = _createClass(function MessageNode(data) {\n  _classCallCheck(this, MessageNode);\n  this.data = data;\n  this.next = null;\n});\nvar Script = function () {\n  function Script(name) {\n    _classCallCheck(this, Script);\n    var date = new Date();\n    var n = date.toDateString();\n    var time = date.toLocaleTimeString();\n    this.name = name;\n    this.dateCreated = (n + time).replaceAll(\" \", \"\");\n    this.id = name + this.dateCreated;\n    this.cast = [];\n    this.crew = [];\n    this.head = null;\n    this.messages = new MessageNode();\n    this.node = {};\n  }\n  _createClass(Script, [{\n    key: \"UpdateScriptName\",\n    value: function UpdateScriptName(name) {\n      this.name = name;\n    }\n  }, {\n    key: \"NumberOfMessages\",\n    value: function NumberOfMessages() {\n      var count = 0;\n      var node = this.head;\n      while (node) {\n        count++;\n        node = node.next;\n      }\n      return count;\n    }\n  }, {\n    key: \"deleteScript\",\n    value: function deleteScript() {\n      this.head = null;\n    }\n  }, {\n    key: \"getLastMessage\",\n    value: function getLastMessage() {\n      var current = this.head;\n      while (current.next) {\n        current = current.next;\n      }\n      return current.data.content;\n    }\n  }, {\n    key: \"getFirstMessage\",\n    value: function getFirstMessage() {\n      return this.head;\n    }\n  }, {\n    key: \"addNewMessage\",\n    value: function addNewMessage(data) {\n      var newNode = new MessageNode(data);\n      if (!this.head) {\n        this.head = newNode;\n        return this.head;\n      }\n      var current = this.head;\n      while (current.next) {\n        current = current.next;\n      }\n      current.next = newNode;\n    }\n  }, {\n    key: \"getNthMessage\",\n    value: function getNthMessage(n) {\n      n -= 1;\n      var current = this.head;\n      for (var i = 0; i < n; i++) {\n        if (current) {\n          current = current.next;\n        } else {\n          return \"\";\n        }\n      }\n      return current.data.content;\n    }\n  }, {\n    key: \"getAllMessagesStringList\",\n    value: function getAllMessagesStringList() {\n      var messages = [];\n      var current = this.head;\n      while (current) {\n        messages.push(current.data);\n        current = current.next;\n      }\n      return messages;\n    }\n  }, {\n    key: \"getAllMessagesStringListBySenderId\",\n    value: function getAllMessagesStringListBySenderId(senderId) {\n      var messages = [];\n      var current = this.head;\n      while (current) {\n        if (current.data.senderId == senderId) {\n          messages.push(current.data);\n        }\n        current = current.next;\n      }\n      return messages;\n    }\n  }, {\n    key: \"getAllMessagesAsNodes\",\n    value: function getAllMessagesAsNodes() {\n      var messages = [];\n      var current = this.head;\n      while (current) {\n        messages.push(current.data);\n        current = current.next;\n      }\n      return messages;\n    }\n  }, {\n    key: \"sendScriptToFirebase\",\n    value: function sendScriptToFirebase() {\n      var script = {\n        id: this.id,\n        name: this.name,\n        dateCreated: this.dateCreated,\n        cast: this.getAllCast(),\n        crew: this.getAllCrew(),\n        messages: this.getAllMessagesAsNodes()\n      };\n      console.log(\"script\", script);\n      firebase.createNewScript(script);\n    }\n  }, {\n    key: \"addNewCast\",\n    value: function addNewCast(cast) {\n      this.cast.push(cast);\n    }\n  }, {\n    key: \"removeCast\",\n    value: function removeCast(cast) {\n      var newCast = [];\n      this.cast.forEach(function (existingCast) {\n        if (existingCast.id != cast.id) {\n          newCast.push(existingCast);\n        }\n      });\n      this.cast = newCast;\n    }\n  }, {\n    key: \"addNewCrew\",\n    value: function addNewCrew(crew) {\n      this.crew.push(crew);\n    }\n  }, {\n    key: \"getAllCast\",\n    value: function getAllCast() {\n      return this.cast;\n    }\n  }, {\n    key: \"getAllCrew\",\n    value: function getAllCrew() {\n      return this.crew;\n    }\n  }, {\n    key: \"removeCrew\",\n    value: function removeCrew(crew) {\n      var newCrew = [];\n      this.crew.forEach(function (existingCrew) {\n        if (existingCrew.id != crew.id) {\n          newCrew.push(existingCrew);\n        }\n      });\n      this.crew = newCrew;\n    }\n  }, {\n    key: \"getScriptName\",\n    value: function getScriptName() {\n      return this.name;\n    }\n  }, {\n    key: \"updateScriptName\",\n    value: function updateScriptName(name) {\n      this.name = name;\n    }\n  }, {\n    key: \"grabScriptFromFirebase\",\n    value: function grabScriptFromFirebase(scriptId) {\n      var _this = this;\n      firebase.getScriptById(scriptId).then(function (val) {\n        _this.name = val.name;\n        _this.dateCreated = val.dateCreated;\n        _this.id = val.id;\n        _this.cast = val.cast;\n        _this.crew = val.crew;\n        _this.head = val.head;\n        _this.messages = val.messages;\n      });\n    }\n  }]);\n  return Script;\n}();\nexport default Script;","map":{"version":3,"names":["React","Component","firebase","MessageNode","data","next","Script","name","date","Date","n","toDateString","time","toLocaleTimeString","dateCreated","replaceAll","id","cast","crew","head","messages","node","count","current","content","newNode","i","push","senderId","script","getAllCast","getAllCrew","getAllMessagesAsNodes","console","log","createNewScript","newCast","forEach","existingCast","newCrew","existingCrew","scriptId","getScriptById","then","val"],"sources":["/Users/jdavid/Documents/textyng/src/components/Script/Script.js"],"sourcesContent":["import React, { Component } from \"react\";\nimport firebase from \"../../firebase/firebase\";\n\nclass MessageNode {\n  constructor(data) {\n    this.data = data;\n    this.next = null;\n  }\n}\n\nclass Script {\n  constructor(name) {\n    var date = new Date();\n    var n = date.toDateString();\n    var time = date.toLocaleTimeString();\n\n    this.name = name;\n    this.dateCreated = (n+time).replaceAll(\" \", \"\")\n    this.id = name + this.dateCreated\n    this.cast = [];\n    this.crew = [];\n    this.head = null;\n    this.messages = new MessageNode();\n    this.node = {};\n  }\n\n  UpdateScriptName(name){\n    this.name = name\n  }\n\n  NumberOfMessages() {\n    let count = 0;\n    let node = this.head;\n    while (node) {\n      count++;\n      node = node.next;\n    }\n    return count;\n  }\n\n  deleteScript() {\n    this.head = null;\n  }\n\n  getLastMessage() {\n    let lastNode = this.head;\n    if (lastNode) {\n      while (lastNode.next) {\n        lastNode = lastNode.next;\n      }\n    }\n    return lastNode;\n  }\n\n  getFirstMessage() {\n    return this.head;\n  }\n\n  addNewMessage(data) {\n    let newNode = new MessageNode(data);\n\n    if (!this.head) {\n      this.head = newNode;\n      return this.head;\n    }\n\n    let current = this.head;\n    while (current.next) {\n      current = current.next;\n    }\n    current.next = newNode;\n\n  }\n\n  getLastMessage() {\n    let current = this.head;\n\n    while (current.next) {\n      current = current.next;\n    }\n\n    return current.data.content\n  }\n\n  getNthMessage(n) {\n    n -= 1\n    let current = this.head;\n\n    for(var i = 0; i < n; i++){\n      if (current){\n        current = current.next;\n      }else{\n        //nth message doesn't exist\n        return \"\"\n      }\n    }\n\n    return current.data.content\n  }\n\n  getAllMessagesStringList() {\n    let messages = []\n    let current = this.head;\n\n    while (current) {\n      messages.push(current.data)\n      current = current.next;\n    }\n\n    return messages\n  }\n\n  getAllMessagesStringListBySenderId(senderId){\n    let messages = []\n    let current = this.head;\n\n    while (current) {\n      if (current.data.senderId == senderId){\n        messages.push(current.data)\n      }\n      current = current.next;\n    }\n\n    return messages\n  }\n\n  getAllMessagesAsNodes() {\n    let messages = []\n    let current = this.head;\n\n    while (current) {\n      messages.push(current.data)\n      current = current.next;\n    }\n\n    return messages\n  }\n\n  sendScriptToFirebase() {\n    let script = {\n      id: this.id,\n      name: this.name,\n      dateCreated: this.dateCreated,\n      cast: this.getAllCast(),\n      crew: this.getAllCrew(),\n      messages: this.getAllMessagesAsNodes(),\n    }\n\n    console.log(\"script\", script)\n\n    firebase.createNewScript(script)\n  }\n\n  addNewCast(cast){\n    this.cast.push(cast)\n  }\n\n  removeCast(cast){\n    let newCast = []\n\n    this.cast.forEach((existingCast) => {\n      if (existingCast.id != cast.id){\n        newCast.push(existingCast)\n      }\n    })\n\n    this.cast = newCast\n  }\n\n  addNewCrew(crew){\n    this.crew.push(crew)\n  }\n\n  getAllCast(){\n    return this.cast\n  }\n\n  getAllCrew(){\n    return this.crew\n  }\n\n  removeCrew(crew){\n    let newCrew = []\n\n    this.crew.forEach((existingCrew) => {\n      if (existingCrew.id != crew.id){\n        newCrew.push(existingCrew)\n      }\n    })\n\n    this.crew = newCrew\n  }\n\n  getScriptName() {\n    return this.name;\n  }\n\n  updateScriptName(name) {\n    this.name = name;\n  }\n\n  grabScriptFromFirebase(scriptId){\n    firebase.getScriptById(scriptId)\n    .then(val => {\n      this.name = val.name;\n      this.dateCreated = val.dateCreated\n      this.id = val.id\n      this.cast = val.cast\n      this.crew = val.crew\n      this.head = val.head\n      this.messages = val.messages\n    })\n  }\n}\n\nexport default Script;"],"mappings":"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"},"metadata":{},"sourceType":"module"}