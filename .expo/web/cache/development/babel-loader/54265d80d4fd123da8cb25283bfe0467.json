{"ast":null,"code":"import _createClass from \"@babel/runtime/helpers/createClass\";\nimport _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport { DataArray } from \"@mui/icons-material\";\nimport React, { Component } from \"react\";\nimport firebase from \"../../firebase/firebase\";\nvar MessageNode = _createClass(function MessageNode(data) {\n  _classCallCheck(this, MessageNode);\n  this.data = data;\n  this.next = null;\n});\nvar Script = function () {\n  function Script(name) {\n    _classCallCheck(this, Script);\n    var milliseconds = Math.floor(Date.now() / 1000);\n    this.name = name;\n    this.dateCreated = milliseconds;\n    this.id = name + this.dateCreated;\n    this.cast = [];\n    this.crew = [];\n    this.head = null;\n    this.messages = new MessageNode();\n    this.node = {};\n    this.totalNoMsgs = 0;\n  }\n  _createClass(Script, [{\n    key: \"UpdateScriptName\",\n    value: function UpdateScriptName(name) {\n      this.name = name;\n      this.id = this.name + this.dateCreated;\n    }\n  }, {\n    key: \"GetScriptName\",\n    value: function GetScriptName() {\n      return this.name;\n    }\n  }, {\n    key: \"NumberOfMessages\",\n    value: function NumberOfMessages() {\n      var count = 0;\n      var node = this.head;\n      while (node) {\n        count++;\n        node = node.next;\n      }\n      return count;\n    }\n  }, {\n    key: \"deleteScript\",\n    value: function deleteScript() {\n      this.head = null;\n    }\n  }, {\n    key: \"getLastMessage\",\n    value: function getLastMessage() {\n      var current = this.head;\n      while (current.next) {\n        current = current.next;\n      }\n      return current.data.content;\n    }\n  }, {\n    key: \"getFirstMessage\",\n    value: function getFirstMessage() {\n      return this.head;\n    }\n  }, {\n    key: \"addNewMessage\",\n    value: function addNewMessage(data) {\n      this.totalNoMsgs += 1;\n      data.MsgIndex = this.totalNoMsgs;\n      var newNode = new MessageNode(data);\n      if (!this.head) {\n        this.head = newNode;\n        return this.head;\n      }\n      var current = this.head;\n      while (current.next) {\n        current = current.next;\n      }\n      current.next = newNode;\n    }\n  }, {\n    key: \"getNthMessage\",\n    value: function getNthMessage(n) {\n      n -= 1;\n      var current = this.head;\n      for (var i = 0; i < n; i++) {\n        if (current) {\n          current = current.next;\n        } else {\n          return \"\";\n        }\n      }\n      return current.data.content;\n    }\n  }, {\n    key: \"getAllMessagesStringList\",\n    value: function getAllMessagesStringList() {\n      var messages = [];\n      var current = this.head;\n      while (current) {\n        messages.push(current.data);\n        current = current.next;\n      }\n      return messages;\n    }\n  }, {\n    key: \"getAllMessagesStringListBySenderId\",\n    value: function getAllMessagesStringListBySenderId(senderId) {\n      var messages = [];\n      var current = this.head;\n      while (current) {\n        if (current.data.senderId == senderId) {\n          messages.push(current.data);\n        }\n        current = current.next;\n      }\n      return messages;\n    }\n  }, {\n    key: \"getAllMessagesAsNodes\",\n    value: function getAllMessagesAsNodes() {\n      var messages = [];\n      var current = this.head;\n      while (current) {\n        messages.push(current.data);\n        current = current.next;\n      }\n      return messages;\n    }\n  }, {\n    key: \"sendScriptToFirebase\",\n    value: function sendScriptToFirebase() {\n      var script = {\n        id: this.id,\n        name: this.name,\n        dateCreated: this.dateCreated,\n        cast: this.getAllCast(),\n        crew: this.getAllCrew(),\n        messages: this.getAllMessagesAsNodes()\n      };\n      firebase.createNewScript(script);\n    }\n  }, {\n    key: \"updateCast\",\n    value: function updateCast(cast) {\n      this.cast = cast;\n    }\n  }, {\n    key: \"removeCast\",\n    value: function removeCast(cast) {\n      var newCast = [];\n      this.cast.forEach(function (existingCast) {\n        if (existingCast.id != cast.id) {\n          newCast.push(existingCast);\n        }\n      });\n      this.cast = newCast;\n    }\n  }, {\n    key: \"addNewCrew\",\n    value: function addNewCrew(crew) {\n      this.crew.push(crew);\n    }\n  }, {\n    key: \"getAllCast\",\n    value: function getAllCast() {\n      return this.cast;\n    }\n  }, {\n    key: \"getAllCrew\",\n    value: function getAllCrew() {\n      return this.crew;\n    }\n  }, {\n    key: \"removeCrew\",\n    value: function removeCrew(crew) {\n      var newCrew = [];\n      this.crew.forEach(function (existingCrew) {\n        if (existingCrew.id != crew.id) {\n          newCrew.push(existingCrew);\n        }\n      });\n      this.crew = newCrew;\n    }\n  }, {\n    key: \"getScriptName\",\n    value: function getScriptName() {\n      return this.name;\n    }\n  }, {\n    key: \"updateScriptName\",\n    value: function updateScriptName(name) {\n      this.name = name;\n    }\n  }, {\n    key: \"grabScriptFromFirebase\",\n    value: function grabScriptFromFirebase(scriptId) {\n      var _this = this;\n      firebase.getScriptById(scriptId).then(function (val) {\n        var messages = val.messages;\n        for (var i = 0; i < messages.length; i++) {\n          _this.addNewMessage(messages);\n        }\n        _this.name = val.name;\n        _this.dateCreated = val.dateCreated;\n        _this.id = val.id;\n        _this.cast = val.cast;\n        _this.crew = val.crew;\n      });\n    }\n  }]);\n  return Script;\n}();\nexport default Script;","map":{"version":3,"names":["DataArray","React","Component","firebase","MessageNode","data","next","Script","name","milliseconds","Math","floor","Date","now","dateCreated","id","cast","crew","head","messages","node","totalNoMsgs","count","current","content","MsgIndex","newNode","n","i","push","senderId","script","getAllCast","getAllCrew","getAllMessagesAsNodes","createNewScript","newCast","forEach","existingCast","newCrew","existingCrew","scriptId","getScriptById","then","val","length","addNewMessage"],"sources":["/Users/jdavid/Documents/textyng/src/components/Script/Script.js"],"sourcesContent":["import { DataArray } from \"@mui/icons-material\";\nimport React, { Component } from \"react\";\nimport firebase from \"../../firebase/firebase\";\n\nclass MessageNode {\n  constructor(data) {\n    this.data = data;\n    this.next = null;\n  }\n}\n\nclass Script {\n  constructor(name) {\n    var milliseconds = Math.floor(Date.now() / 1000)\n\n    this.name = name;\n    this.dateCreated = milliseconds\n    this.id = name + this.dateCreated\n    this.cast = [];\n    this.crew = [];\n    this.head = null;\n    this.messages = new MessageNode();\n    this.node = {};\n    this.totalNoMsgs = 0\n  }\n\n  UpdateScriptName(name){\n    this.name = name\n    this.id = this.name + this.dateCreated\n  }\n\n  GetScriptName(){\n    return this.name\n  }\n\n  NumberOfMessages() {\n    let count = 0;\n    let node = this.head;\n    while (node) {\n      count++;\n      node = node.next;\n    }\n    return count;\n  }\n\n  deleteScript() {\n    this.head = null;\n  }\n\n  getLastMessage() {\n    let lastNode = this.head;\n    if (lastNode) {\n      while (lastNode.next) {\n        lastNode = lastNode.next;\n      }\n    }\n    return lastNode;\n  }\n\n  getFirstMessage() {\n    return this.head;\n  }\n\n  addNewMessage(data) {\n    this.totalNoMsgs += 1\n    data.MsgIndex = this.totalNoMsgs\n\n    let newNode = new MessageNode(data);\n\n    if (!this.head) {\n      this.head = newNode;\n      return this.head;\n    }\n\n    let current = this.head;\n    while (current.next) {\n      current = current.next;\n    }\n    current.next = newNode;\n\n  }\n\n  getLastMessage() {\n    let current = this.head;\n\n    while (current.next) {\n      current = current.next;\n    }\n\n    return current.data.content\n  }\n\n  getNthMessage(n) {\n    n -= 1\n    let current = this.head;\n\n    for(var i = 0; i < n; i++){\n      if (current){\n        current = current.next;\n      }else{\n        //nth message doesn't exist\n        return \"\"\n      }\n    }\n\n    return current.data.content\n  }\n\n  getAllMessagesStringList() {\n    let messages = []\n    let current = this.head;\n\n    while (current) {\n      messages.push(current.data)\n      current = current.next;\n    }\n\n    return messages\n  }\n\n  getAllMessagesStringListBySenderId(senderId){\n    let messages = []\n    let current = this.head;\n\n    while (current) {\n      if (current.data.senderId == senderId){\n        messages.push(current.data)\n      }\n      current = current.next;\n    }\n\n    return messages\n  }\n\n  getAllMessagesAsNodes() {\n    let messages = []\n    let current = this.head;\n\n    while (current) {\n      messages.push(current.data)\n      current = current.next;\n    }\n\n    return messages\n  }\n\n  sendScriptToFirebase() {\n    let script = {\n      id: this.id,\n      name: this.name,\n      dateCreated: this.dateCreated,\n      cast: this.getAllCast(),\n      crew: this.getAllCrew(),\n      messages: this.getAllMessagesAsNodes(),\n    }\n\n    firebase.createNewScript(script)\n  }\n\n  updateCast(cast){\n    this.cast = cast\n  }\n\n  removeCast(cast){\n    let newCast = []\n\n    this.cast.forEach((existingCast) => {\n      if (existingCast.id != cast.id){\n        newCast.push(existingCast)\n      }\n    })\n\n    this.cast = newCast\n  }\n\n  addNewCrew(crew){\n    this.crew.push(crew)\n  }\n\n  getAllCast(){\n    return this.cast\n  }\n\n  getAllCrew(){\n    return this.crew\n  }\n\n  removeCrew(crew){\n    let newCrew = []\n\n    this.crew.forEach((existingCrew) => {\n      if (existingCrew.id != crew.id){\n        newCrew.push(existingCrew)\n      }\n    })\n\n    this.crew = newCrew\n  }\n\n  getScriptName() {\n    return this.name;\n  }\n\n  updateScriptName(name) {\n    this.name = name;\n  }\n\n  grabScriptFromFirebase(scriptId){\n    firebase.getScriptById(scriptId)\n    .then(val => {\n\n      let messages = val.messages\n      for(var i=0; i<messages.length; i++){\n        this.addNewMessage(messages)\n      }\n\n      this.name = val.name;\n      this.dateCreated = val.dateCreated\n      this.id = val.id\n      this.cast = val.cast\n      this.crew = val.crew\n    })\n  }\n}\n\nexport default Script;"],"mappings":";;AAAA,SAASA,SAAS,QAAQ,qBAAqB;AAC/C,OAAOC,KAAK,IAAIC,SAAS,QAAQ,OAAO;AACxC,OAAOC,QAAQ;AAAgC,IAEzCC,WAAW,gBACf,qBAAYC,IAAI,EAAE;EAAA;EAChB,IAAI,CAACA,IAAI,GAAGA,IAAI;EAChB,IAAI,CAACC,IAAI,GAAG,IAAI;AAClB,CAAC;AAAA,IAGGC,MAAM;EACV,gBAAYC,IAAI,EAAE;IAAA;IAChB,IAAIC,YAAY,GAAGC,IAAI,CAACC,KAAK,CAACC,IAAI,CAACC,GAAG,EAAE,GAAG,IAAI,CAAC;IAEhD,IAAI,CAACL,IAAI,GAAGA,IAAI;IAChB,IAAI,CAACM,WAAW,GAAGL,YAAY;IAC/B,IAAI,CAACM,EAAE,GAAGP,IAAI,GAAG,IAAI,CAACM,WAAW;IACjC,IAAI,CAACE,IAAI,GAAG,EAAE;IACd,IAAI,CAACC,IAAI,GAAG,EAAE;IACd,IAAI,CAACC,IAAI,GAAG,IAAI;IAChB,IAAI,CAACC,QAAQ,GAAG,IAAIf,WAAW,EAAE;IACjC,IAAI,CAACgB,IAAI,GAAG,CAAC,CAAC;IACd,IAAI,CAACC,WAAW,GAAG,CAAC;EACtB;EAAC;IAAA;IAAA,OAED,0BAAiBb,IAAI,EAAC;MACpB,IAAI,CAACA,IAAI,GAAGA,IAAI;MAChB,IAAI,CAACO,EAAE,GAAG,IAAI,CAACP,IAAI,GAAG,IAAI,CAACM,WAAW;IACxC;EAAC;IAAA;IAAA,OAED,yBAAe;MACb,OAAO,IAAI,CAACN,IAAI;IAClB;EAAC;IAAA;IAAA,OAED,4BAAmB;MACjB,IAAIc,KAAK,GAAG,CAAC;MACb,IAAIF,IAAI,GAAG,IAAI,CAACF,IAAI;MACpB,OAAOE,IAAI,EAAE;QACXE,KAAK,EAAE;QACPF,IAAI,GAAGA,IAAI,CAACd,IAAI;MAClB;MACA,OAAOgB,KAAK;IACd;EAAC;IAAA;IAAA,OAED,wBAAe;MACb,IAAI,CAACJ,IAAI,GAAG,IAAI;IAClB;EAAC;IAAA;IAAA,OAmCD,0BAAiB;MACf,IAAIK,OAAO,GAAG,IAAI,CAACL,IAAI;MAEvB,OAAOK,OAAO,CAACjB,IAAI,EAAE;QACnBiB,OAAO,GAAGA,OAAO,CAACjB,IAAI;MACxB;MAEA,OAAOiB,OAAO,CAAClB,IAAI,CAACmB,OAAO;IAC7B;EAAC;IAAA;IAAA,OA/BD,2BAAkB;MAChB,OAAO,IAAI,CAACN,IAAI;IAClB;EAAC;IAAA;IAAA,OAED,uBAAcb,IAAI,EAAE;MAClB,IAAI,CAACgB,WAAW,IAAI,CAAC;MACrBhB,IAAI,CAACoB,QAAQ,GAAG,IAAI,CAACJ,WAAW;MAEhC,IAAIK,OAAO,GAAG,IAAItB,WAAW,CAACC,IAAI,CAAC;MAEnC,IAAI,CAAC,IAAI,CAACa,IAAI,EAAE;QACd,IAAI,CAACA,IAAI,GAAGQ,OAAO;QACnB,OAAO,IAAI,CAACR,IAAI;MAClB;MAEA,IAAIK,OAAO,GAAG,IAAI,CAACL,IAAI;MACvB,OAAOK,OAAO,CAACjB,IAAI,EAAE;QACnBiB,OAAO,GAAGA,OAAO,CAACjB,IAAI;MACxB;MACAiB,OAAO,CAACjB,IAAI,GAAGoB,OAAO;IAExB;EAAC;IAAA;IAAA,OAYD,uBAAcC,CAAC,EAAE;MACfA,CAAC,IAAI,CAAC;MACN,IAAIJ,OAAO,GAAG,IAAI,CAACL,IAAI;MAEvB,KAAI,IAAIU,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGD,CAAC,EAAEC,CAAC,EAAE,EAAC;QACxB,IAAIL,OAAO,EAAC;UACVA,OAAO,GAAGA,OAAO,CAACjB,IAAI;QACxB,CAAC,MAAI;UAEH,OAAO,EAAE;QACX;MACF;MAEA,OAAOiB,OAAO,CAAClB,IAAI,CAACmB,OAAO;IAC7B;EAAC;IAAA;IAAA,OAED,oCAA2B;MACzB,IAAIL,QAAQ,GAAG,EAAE;MACjB,IAAII,OAAO,GAAG,IAAI,CAACL,IAAI;MAEvB,OAAOK,OAAO,EAAE;QACdJ,QAAQ,CAACU,IAAI,CAACN,OAAO,CAAClB,IAAI,CAAC;QAC3BkB,OAAO,GAAGA,OAAO,CAACjB,IAAI;MACxB;MAEA,OAAOa,QAAQ;IACjB;EAAC;IAAA;IAAA,OAED,4CAAmCW,QAAQ,EAAC;MAC1C,IAAIX,QAAQ,GAAG,EAAE;MACjB,IAAII,OAAO,GAAG,IAAI,CAACL,IAAI;MAEvB,OAAOK,OAAO,EAAE;QACd,IAAIA,OAAO,CAAClB,IAAI,CAACyB,QAAQ,IAAIA,QAAQ,EAAC;UACpCX,QAAQ,CAACU,IAAI,CAACN,OAAO,CAAClB,IAAI,CAAC;QAC7B;QACAkB,OAAO,GAAGA,OAAO,CAACjB,IAAI;MACxB;MAEA,OAAOa,QAAQ;IACjB;EAAC;IAAA;IAAA,OAED,iCAAwB;MACtB,IAAIA,QAAQ,GAAG,EAAE;MACjB,IAAII,OAAO,GAAG,IAAI,CAACL,IAAI;MAEvB,OAAOK,OAAO,EAAE;QACdJ,QAAQ,CAACU,IAAI,CAACN,OAAO,CAAClB,IAAI,CAAC;QAC3BkB,OAAO,GAAGA,OAAO,CAACjB,IAAI;MACxB;MAEA,OAAOa,QAAQ;IACjB;EAAC;IAAA;IAAA,OAED,gCAAuB;MACrB,IAAIY,MAAM,GAAG;QACXhB,EAAE,EAAE,IAAI,CAACA,EAAE;QACXP,IAAI,EAAE,IAAI,CAACA,IAAI;QACfM,WAAW,EAAE,IAAI,CAACA,WAAW;QAC7BE,IAAI,EAAE,IAAI,CAACgB,UAAU,EAAE;QACvBf,IAAI,EAAE,IAAI,CAACgB,UAAU,EAAE;QACvBd,QAAQ,EAAE,IAAI,CAACe,qBAAqB;MACtC,CAAC;MAED/B,QAAQ,CAACgC,eAAe,CAACJ,MAAM,CAAC;IAClC;EAAC;IAAA;IAAA,OAED,oBAAWf,IAAI,EAAC;MACd,IAAI,CAACA,IAAI,GAAGA,IAAI;IAClB;EAAC;IAAA;IAAA,OAED,oBAAWA,IAAI,EAAC;MACd,IAAIoB,OAAO,GAAG,EAAE;MAEhB,IAAI,CAACpB,IAAI,CAACqB,OAAO,CAAC,UAACC,YAAY,EAAK;QAClC,IAAIA,YAAY,CAACvB,EAAE,IAAIC,IAAI,CAACD,EAAE,EAAC;UAC7BqB,OAAO,CAACP,IAAI,CAACS,YAAY,CAAC;QAC5B;MACF,CAAC,CAAC;MAEF,IAAI,CAACtB,IAAI,GAAGoB,OAAO;IACrB;EAAC;IAAA;IAAA,OAED,oBAAWnB,IAAI,EAAC;MACd,IAAI,CAACA,IAAI,CAACY,IAAI,CAACZ,IAAI,CAAC;IACtB;EAAC;IAAA;IAAA,OAED,sBAAY;MACV,OAAO,IAAI,CAACD,IAAI;IAClB;EAAC;IAAA;IAAA,OAED,sBAAY;MACV,OAAO,IAAI,CAACC,IAAI;IAClB;EAAC;IAAA;IAAA,OAED,oBAAWA,IAAI,EAAC;MACd,IAAIsB,OAAO,GAAG,EAAE;MAEhB,IAAI,CAACtB,IAAI,CAACoB,OAAO,CAAC,UAACG,YAAY,EAAK;QAClC,IAAIA,YAAY,CAACzB,EAAE,IAAIE,IAAI,CAACF,EAAE,EAAC;UAC7BwB,OAAO,CAACV,IAAI,CAACW,YAAY,CAAC;QAC5B;MACF,CAAC,CAAC;MAEF,IAAI,CAACvB,IAAI,GAAGsB,OAAO;IACrB;EAAC;IAAA;IAAA,OAED,yBAAgB;MACd,OAAO,IAAI,CAAC/B,IAAI;IAClB;EAAC;IAAA;IAAA,OAED,0BAAiBA,IAAI,EAAE;MACrB,IAAI,CAACA,IAAI,GAAGA,IAAI;IAClB;EAAC;IAAA;IAAA,OAED,gCAAuBiC,QAAQ,EAAC;MAAA;MAC9BtC,QAAQ,CAACuC,aAAa,CAACD,QAAQ,CAAC,CAC/BE,IAAI,CAAC,UAAAC,GAAG,EAAI;QAEX,IAAIzB,QAAQ,GAAGyB,GAAG,CAACzB,QAAQ;QAC3B,KAAI,IAAIS,CAAC,GAAC,CAAC,EAAEA,CAAC,GAACT,QAAQ,CAAC0B,MAAM,EAAEjB,CAAC,EAAE,EAAC;UAClC,KAAI,CAACkB,aAAa,CAAC3B,QAAQ,CAAC;QAC9B;QAEA,KAAI,CAACX,IAAI,GAAGoC,GAAG,CAACpC,IAAI;QACpB,KAAI,CAACM,WAAW,GAAG8B,GAAG,CAAC9B,WAAW;QAClC,KAAI,CAACC,EAAE,GAAG6B,GAAG,CAAC7B,EAAE;QAChB,KAAI,CAACC,IAAI,GAAG4B,GAAG,CAAC5B,IAAI;QACpB,KAAI,CAACC,IAAI,GAAG2B,GAAG,CAAC3B,IAAI;MACtB,CAAC,CAAC;IACJ;EAAC;EAAA;AAAA;AAGH,eAAeV,MAAM"},"metadata":{},"sourceType":"module"}