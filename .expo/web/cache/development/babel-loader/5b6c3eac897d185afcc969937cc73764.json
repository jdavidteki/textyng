{"ast":null,"code":"import _toConsumableArray from \"@babel/runtime/helpers/toConsumableArray\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nvar _jsxFileName = \"/Users/jdavid/Documents/textyng/src/components/Scenes/Scenes.js\";\nimport React from \"react\";\nimport EditableField from \"../EditableField/EditableField\";\nimport \"./Scenes.css\";\nfunction Scenes(props) {\n  var totalCast = 2;\n  var defaultScenes = [{\n    name: \"Scene 1\",\n    id: 1\n  }, {\n    name: \"Scene 2\",\n    id: 2\n  }];\n  if (props.cast) {\n    defaultScenes = props.scenes;\n  }\n  var _React$useState = React.useState(defaultScenes),\n    _React$useState2 = _slicedToArray(_React$useState, 2),\n    scenes = _React$useState2[0],\n    setScenes = _React$useState2[1];\n  function addNewScene() {\n    totalCast += 1;\n    var newScene = {\n      name: \"Scene Number\",\n      id: totalCast\n    };\n    setScenes(function (scenes) {\n      return [].concat(_toConsumableArray(scenes), [newScene]);\n    });\n    props.getAllScenes(scenes);\n  }\n  function updateSceneName(name) {\n    var id = name[0];\n    var newName = name[1];\n    for (var i = 0; i < scenes.length; i++) {\n      if (scenes[i].id == id) {\n        scenes[i].name = newName;\n      }\n    }\n    setScenes(function (scenes) {\n      return _toConsumableArray(scenes);\n    });\n    props.getAllScenes(scenes);\n  }\n  function updateActiveOption(value) {\n    var el = document.querySelectorAll(\".Scenes-cast\");\n    for (var i = 0; i < el.length; i++) {\n      el[i].classList.remove(\"active\");\n    }\n    document.getElementById(\"Scenes-castId-\" + value.id).classList.add(\"active\");\n    props.selectedScene ? props.selectedScene(value) : {};\n  }\n  return React.createElement(\"div\", {\n    className: \"Scenes\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 5\n    }\n  }, scenes.map(function (value, index) {\n    return React.createElement(\"div\", {\n      id: \"Scenes-castId-\" + value.id,\n      className: \"Scenes-cast\",\n      key: index,\n      onClick: function onClick() {\n        return updateActiveOption(value);\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 11\n      }\n    }, React.createElement(EditableField, {\n      name: value.name,\n      id: value.id,\n      fontSize: 16,\n      getScriptName: updateSceneName,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 13\n      }\n    }));\n  }), React.createElement(\"div\", {\n    className: \"Scenes-addCast Scenes-cast\",\n    onClick: function onClick() {\n      return addNewScene();\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 7\n    }\n  }, \"+\"));\n}\nexport default Scenes;","map":{"version":3,"names":["React","EditableField","Scenes","props","totalCast","defaultScenes","name","id","cast","scenes","useState","setScenes","addNewScene","newScene","getAllScenes","updateSceneName","newName","i","length","updateActiveOption","value","el","document","querySelectorAll","classList","remove","getElementById","add","selectedScene","map","index"],"sources":["/Users/jdavid/Documents/textyng/src/components/Scenes/Scenes.js"],"sourcesContent":["import React from \"react\";\nimport EditableField from \"../EditableField/EditableField\";\n\nimport \"./Scenes.css\";\n\nfunction Scenes(props) {\n\n\n  let totalCast = 2\n\n  let defaultScenes = [\n    {\n      name: \"Scene 1\",\n      id: 1,\n    },\n    {\n      name: \"Scene 2\",\n      id: 2,\n    },\n  ]\n\n  if(props.cast){\n    defaultScenes = props.scenes\n  }\n\n  const [scenes, setScenes] = React.useState(defaultScenes);\n\n  function addNewScene(){\n    totalCast +=1\n\n    let newScene = {\n      name: \"Scene Number\",\n      id: totalCast\n    }\n\n    setScenes(scenes => [...scenes, newScene])\n    props.getAllScenes(scenes)\n  }\n\n  function updateSceneName(name){\n    let id = name[0]\n    let newName = name[1]\n\n    for(var i = 0; i<scenes.length; i++){\n      if(scenes[i].id == id){\n        scenes[i].name = newName\n      }\n    }\n\n    setScenes(scenes => [...scenes])\n    props.getAllScenes(scenes)\n  }\n\n  function updateActiveOption(value) {\n    var el = document.querySelectorAll(\".Scenes-cast\");\n\n    for (let i = 0; i < el.length; i++) {\n      el[i].classList.remove(\"active\")\n    }\n\n    document.getElementById(\"Scenes-castId-\" + value.id).classList.add(\"active\")\n\n    props.selectedScene ? props.selectedScene(value): {};\n  }\n\n  return (\n    <div className=\"Scenes\">\n      {scenes.map(\n        (value, index) => (\n          <div\n            id={\"Scenes-castId-\" + value.id}\n            className=\"Scenes-cast\"\n            key={index}\n            onClick={() => updateActiveOption(value)}\n          >\n            <EditableField name={value.name} id={value.id} fontSize={16} getScriptName={updateSceneName} />\n          </div>\n        )\n      )}\n\n      <div className=\"Scenes-addCast Scenes-cast\" onClick={() => addNewScene()}>\n        +\n      </div>\n    </div>\n  );\n}\n\nexport default Scenes;\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}